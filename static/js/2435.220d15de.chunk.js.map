{"version":3,"file":"static/js/2435.220d15de.chunk.js","mappings":"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","sources":["data-access/customers.js","lists/departments.js","screens/components/AddressListDialog.js","screens/components/AddressListDialogSales.js","screens/components/invoice/edit/operation/invoice-new-edit-address.js","lists/acknowledgeStatus.js","lists/installation.js","screens/components/invoice/edit/operation/invoice-new-edit-status-date.js","screens/components/invoice/edit/operation/invoice-new-edit-form.js","screens/components/invoice/edit/operation/InvoiceEditView.js","screens/invoice/edit/InvoiceEditPage.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["\r\n\r\nexport async function getAllCustomers() {\r\n    let list = []\r\n    await fetch('https://invoicecollectionsystemapi.azurewebsites.net/customer', {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n    // return [\r\n    //     {\r\n    //         id: \"4\",\r\n    //         customerCode: \"omar \",\r\n    //         customerNameEn: \"jamil\",\r\n    //         customerNameAr: \"عمر الفاخوري\"\r\n    //     },\r\n    //     {\r\n    //         id: \"5\",\r\n    //         customerCode: \"ahmad\",\r\n    //         customerNameEn: \"moh\",\r\n    //         customerNameAr: \"4533\"\r\n    //     },\r\n    //     {\r\n    //         id: \"9\",\r\n    //         customerCode: \"ahmaSSSSd\",\r\n    //         customerNameEn: \"nisaSSSa\",\r\n    //         customerNameAr: \"7567\"\r\n    //     },\r\n    //     {\r\n    //         id: \"10\",\r\n    //         customerCode: \"7567\",\r\n    //         customerNameEn: \"ahmaSSSSd\",\r\n    //         customerNameAr: \"nisaSSSa\"\r\n    //     },\r\n    //     {\r\n    //         id: \"11\",\r\n    //         customerCode: \"45654\",\r\n    //         customerNameEn: \"GHGFHGF\",\r\n    //         customerNameAr: \"FGHGFHGF\"\r\n    //     },\r\n    //     {\r\n    //         id: \"12\",\r\n    //         customerCode: \"mustafa\",\r\n    //         customerNameEn: \"\",\r\n    //         customerNameAr: \"\"\r\n    //     },\r\n    //     {\r\n    //         id: \"15\",\r\n    //         customerCode: \"DSA232\",\r\n    //         customerNameEn: \"OmarJKF\",\r\n    //         customerNameAr: \"Fakori\"\r\n    //     },\r\n    //     {\r\n    //         id: \"16\",\r\n    //         customerCode: \"asas\",\r\n    //         customerNameEn: \"assacq\",\r\n    //         customerNameAr: \"cccc\"\r\n    //     },\r\n    //     {\r\n    //         id: \"17\",\r\n    //         customerCode: \"2918c\",\r\n    //         customerNameEn: \"ascasc\",\r\n    //         customerNameAr: \"cas\"\r\n    //     },\r\n    //     {\r\n    //         id: \"18\",\r\n    //         customerCode: \"01-1109\",\r\n    //         customerNameEn: \"KFSH&RC - Riyadh\",\r\n    //         customerNameAr: \"مستشفى الملك فيصل التخصصي بالرياض\"\r\n    //     },\r\n    //     {\r\n    //         id: \"19\",\r\n    //         customerCode: \"10-555\",\r\n    //         customerNameEn: \"DAOH-JEDDAH\",\r\n    //         customerNameAr: \"ليبيلب\"\r\n    //     },\r\n    //     {\r\n    //         id: \"20\",\r\n    //         customerCode: \"02-1221\",\r\n    //         customerNameEn: \"KKNGH - Jeddah\",\r\n    //         customerNameAr: \"يبلبل\"\r\n    //     },\r\n    //     {\r\n    //         id: \"21\",\r\n    //         customerCode: \"02-1229\",\r\n    //         customerNameEn: \"KFSH&RC - Jeddah\",\r\n    //         customerNameAr: \"بب\"\r\n    //     }\r\n    // ]\r\n}\r\n\r\nexport async function getSalesPersonList() {\r\n    let list = []\r\n    await fetch('https://invoicecollectionsystemapi.azurewebsites.net/api/User/UsersNameByRole/sales', {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n\r\n    // return [\r\n    //     {\r\n    //         id: \"3816ec9e-9277-430d-8026-1993baf948e8\",\r\n    //         username: \"mustafa\"\r\n    //     },\r\n    //     {\r\n    //         id: \"8d12ad2b-d032-4da2-886e-4395043c42a5\",\r\n    //         username: \"ahmedammous\"\r\n    //     },\r\n    //     {\r\n    //         id: \"f7ef897a-8178-4b33-9871-b7c57a8e6b00\",\r\n    //         username: \"DASDsdads\"\r\n    //     }\r\n    // ]\r\n}\r\n","import useLocales from '../locales/use-locales'\r\n\r\nconst Translate = (text) => {\r\n  const { t } = useLocales()\r\n\r\n  return t(text)\r\n}\r\n\r\nexport const _departments = () => [\r\n  Translate('All'),\r\n  Translate('Operation'),\r\n  Translate('Sales'),\r\n  Translate('Installation'),\r\n  Translate('Collection'),\r\n  Translate('TenderAndContracts')\r\n]\r\n\r\nexport const _departments_withoutAll = () => [\r\n  Translate('Operation'),\r\n  Translate('Installation'),\r\n  Translate('Sales'),\r\n  Translate('Collection'),\r\n  Translate('TenderAndContracts')\r\n]\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AddressListDialog({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n  const [searchAddress, setSearchAddress] = useState('');\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address) => (\r\n        <Stack\r\n          key={address.id}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\">Code: {address.customerCode}</Typography>\r\n\r\n            {/* {address.primary && <Label color=\"info\">Default</Label>} */}\r\n          </Stack>\r\n\r\n          {/* {address.company && (\r\n            <Box sx={{ color: 'primary.main', typography: 'caption' }}>{address.company}</Box>\r\n          )} */}\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          Name ENglish: {address.customerNameEn}\r\n          </Typography>\r\n\r\n          \r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            Name Arabic: {address.customerNameAr}\r\n            </Typography>\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        {action && action}\r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder=\"Search...\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nAddressListDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.customerCode.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameEn.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameAr.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AddressListDialogSales({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n  const [searchAddress, setSearchAddress] = useState('');\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address) => (\r\n        <Stack\r\n          key={address.id}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n             <Typography variant=\"subtitle2\" textTransform=\"bold\">{address.username}</Typography> \r\n\r\n            {/* {address.primary && <Label color=\"info\">Default</Label>} */}\r\n          </Stack>\r\n\r\n          {/* {address.company && (\r\n            <Box sx={{ color: 'primary.main', typography: 'caption' }}>{address.company}</Box>\r\n          )} */}\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        {action && action}\r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder=\"Search...\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nAddressListDialogSales.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.username.toLowerCase().indexOf(query.toLowerCase()) !== -1 \r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import { useFormContext, Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n// _mock\nimport { _addressBooks } from 'src/_mock';\n// components\nimport Iconify from 'src/components/iconify';\n// lists\nimport { getAllCustomers, getSalesPersonList } from 'src/data-access/customers';\n//\nimport  AddressListDialog  from '../../../AddressListDialog';\nimport  AddressListDialogSales  from '../../../AddressListDialogSales';\n\n\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceNewEditAddress({currentInvoice}) {\n  \n  const {\n    control,\n    watch,\n    setValue,\n    formState: { errors },\n  } = useFormContext();\n\n  const customers = getAllCustomers();\n  const salesPeople = getSalesPersonList();\n\n  const selectedCustomer = {};\n  const selectedSalesPerson = {};\n\n  const updateCustomer = (customer) => {\n    console.log(customer)\n    selectedCustomer.customerCode = customer.customerCode\n    selectedCustomer.customerNameAr = customer.customerNameAr\n    selectedCustomer.customerNameEn = customer.customerNameEn\n    console.log('selectedCustomer', customer)\n  }\n\n  const updateSalesPerson = (person) => {\n    salesPeople.username = person.salesPeople\n  }\n\n\n  const mdUp = useResponsive('up', 'md');\n\n  const values = watch();\n\n  const { customerId, customerCode, salesPerson, customerObj, salesPersonObj } = values;\n\n  // setValue('salesPerson', selectedSalesPerson.username)\n  // setValue('customerId', selectedCustomer.id)\n  // setValue('customerCode', selectedCustomer.customerCode)\n\n  \n  // console.log('values', values)\n\n\n\n  // const from = useBoolean();\n\n  // const to = useBoolean();\n\n  return (\n      <Stack\n        spacing={{ xs: 3, md: 5 }}\n        direction={{ xs: 'column', md: 'row' }}\n        divider={\n          <Divider\n            flexItem\n            orientation={mdUp ? 'vertical' : 'horizontal'}\n            sx={{ borderStyle: 'dashed' }}\n          />\n        }\n        sx={{ p: 3 }}\n      >\n        <Stack sx={{ width: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1}}>\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\n              Attachment:\n            </Typography>\n          </Stack>\n\n          <TextField\n            type=\"file\"\n            id='file'\n            variant=\"outlined\"\n            inputProps={{ accept: '.xls, .xlsx' }}\n            // onChange={handleFileChange}\n          />\n\n        </Stack>\n\n        <Stack sx={{ width: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\n              New Note:\n            </Typography>\n          </Stack>\n\n          <Controller\n              name=\"CreateNote\"\n              control={control}\n              render={({ field }) => (\n                <TextField\n                  fullWidth\n                  value={field.value}\n                  onChange={(newValue) => {\n                    field.onChange(newValue);\n                  }}\n                  placeholder=\"New Note here\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.add' }} />\n                      </InputAdornment>\n                    ),\n                }}\n                />\n                \n              )}\n            />\n\n        </Stack>\n      </Stack>\n  );\n}\n\nInvoiceNewEditAddress.propTypes = {\n  currentInvoice: PropTypes.object,\n};\n\n","import useLocales from '../locales/use-locales'\r\n\r\nconst Translate = (text) => {\r\n    const { t } = useLocales()\r\n\r\n    return t(text)\r\n}\r\nexport const _acknowledgeStatuses = () =>  [\r\n    Translate(\"None\"),\r\n    Translate(\"Acknowledged\"),\r\n    Translate(\"NotAcknowledged\"),\r\n    Translate(\"TempAcknowledged\"),\r\n    Translate(\"Reject\")\r\n]","import useLocales from '../locales/use-locales'\r\n\r\nconst Translate = (text) => {\r\n  const { t } = useLocales()\r\n\r\n  return t(text)\r\n}\r\n\r\nexport const _installationStatus = () => [\r\n  Translate('NotStarted'),\r\n  Translate('InProgress'),\r\n  Translate('Installed'),\r\n  Translate('Delayed')\r\n]\r\n","// react\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport { getCollectionData } from 'src/data-access/invoice';\r\nimport { _acknowledgeStatuses as acknowledgeOptions} from 'src/lists/acknowledgeStatus';\r\nimport { _installationStatus } from 'src/lists/installation';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport Divider from '@mui/material/Divider';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TextField from '@mui/material/TextField';\r\nimport { RHFSelect, RHFTextField } from 'src/components/hook-form';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditStatusDate({\r\n  department,\r\n  filters,\r\n  onFilters,\r\n  departmentOptions,\r\n  currentInvoice,\r\n  }) {\r\n  const disabledTextColor = 'Crimson';\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [collectionData, setCollectionData] = useState([])\r\n  const [collectionSource, setCollectionSource] = useState([])\r\n  const [claimsStatus, setClaimsStatus] = useState([])\r\n  const [claimsDetailStatus, setClaimsDetailStatus] = useState([])\r\n\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getCollectionData();\r\n        setCollectionData(data);\r\n        setCollectionSource(data.filter(option => option.entityType === 'Collection Source'))\r\n        console.log(data)\r\n      } catch (error) {\r\n        console.error('Error fetching invoice:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, []);\r\n  \r\n  // if(!loading) {\r\n  //   \r\n  // }\r\n\r\n  const {\r\n    control,\r\n    watch,\r\n    resetField,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  const values = watch();\r\n\r\n  const arrays = {\r\n    deliveryDate: ['operation'],\r\n    department: ['operation', 'sales', 'collection', 'tenderandcontracts'],\r\n    acknowledgeStatuses: ['operation', 'sales'],\r\n    installationStatus: ['installation'],\r\n    installationDate: ['installation'],\r\n    collectionSource: ['collection'],\r\n    claimStatus: ['collection'],\r\n    claimsDetailStatus: ['collection'],\r\n  }\r\n  // Collection data changes handlers\r\n  const handleCollectionSourceChange = (newValue) => {\r\n\r\n    setClaimsStatus([]);\r\n    setClaimsDetailStatus([]);\r\n    resetField('claimStatus')\r\n    resetField('claimsDetailStatus');\r\n    \r\n    const collectionSourceId = collectionSource.filter(option => option.value === newValue.target.value)[0].id;\r\n    \r\n    setClaimsStatus(collectionData.filter(data => data.parentId === collectionSourceId))\r\n    if(claimsStatus.length) {\r\n      setValue('claimStatus', claimsStatus[0].value)\r\n      updateClaimsDetailStatus(claimsStatus[0].value)\r\n    }    \r\n    \r\n    // setValue('claimsDetailStatus', claimsDetailStatus[0].value)\r\n  }\r\n\r\n  const handleClaimStatusChange = (newValue) => {\r\n    \r\n    const claimStatusId = claimsStatus.filter(option => option.value === newValue.target.value)[0].id;\r\n    setClaimsDetailStatus(collectionData.filter(data => data.parentId === claimStatusId));\r\n    resetField('claimsDetailStatus');\r\n    \r\n  }\r\n\r\n  const updateClaimsDetailStatus = (claimStatusOption) => {\r\n    const claimStatusId = claimsStatus.filter(option => option.value === claimStatusOption)[0].id;\r\n    setClaimsDetailStatus(collectionData.filter(data => data.parentId === claimStatusId))\r\n    // resetField('claimsDetailStatus');\r\n    // setValue('claimsDetailStatus', claimsDetailStatus[0].value);\r\n  }\r\n\r\n  const handleClaimsDetailStatusChange = (newValue) => {\r\n\r\n      // setValue('claimsDetailStatus', newValue.target.value)\r\n      console.log(values)\r\n    \r\n  }\r\n\r\n  // Style \r\n  const outlinedStyle = {\r\n    // border: '1px solid crimson', // Set border width and style\r\n    // borderRadius: '10px', // Optional: Set border radius for rounded corners\r\n  };\r\n\r\n  const grayBgStyle = {\r\n    width: '95%',\r\n    margin: '10px', // Add vertical padding\r\n    // border:`1px solid ${disabledTextColor}`, // Set border width and style ,\r\n    borderRadius: '10px', // Optional: Set border radius for rounded corners\r\n\r\n  };\r\n\r\n  const width80 = {\r\n    width: '95%',\r\n    margin: '10px'\r\n  };\r\n\r\n  // Components\r\n  const deliveryDate = arrays.deliveryDate.includes(department.toLowerCase()) ? \r\n  <Controller\r\n    name=\"DeliveryDate\"\r\n    control={control}\r\n    \r\n    render={({ field, fieldState: { error } }) => (\r\n        <DatePicker\r\n          \r\n          label=\"Delivery Date\"\r\n          value={field.value}\r\n          onChange={(newValue) => {\r\n            field.onChange(newValue);\r\n          }}\r\n          sx={grayBgStyle}\r\n        />\r\n    )}\r\n  /> : \r\n  <TextField\r\n    label=\"Delivery Date\"\r\n    value={currentInvoice.deliveryDate && currentInvoice.deliveryDate.substring(0, currentInvoice?.deliveryDate.indexOf('T'))  }\r\n    disabled\r\n    style={width80}      \r\n  />\r\n\r\n  const departmentSelect = arrays.department.includes(department.toLowerCase()) ? \r\n    <FormControl\r\n      sx={{\r\n        flex: 1,\r\n        flexShrink: 0,\r\n        width: { xs: 3 },\r\n      }}\r\n      style={width80}\r\n    >\r\n    <InputLabel  > Department </InputLabel>\r\n    <Controller\r\n      \r\n      name=\"department\"\r\n      control={control}\r\n      render={({ field }) => (\r\n            <Select\r\n            style={outlinedStyle}\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            input={<OutlinedInput label=\"Department\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{\r\n                flex: 1,\r\n                textField: {\r\n                textTransform: 'capitalize',\r\n                fullWidth: true,\r\n              }\r\n            }}\r\n          >\r\n            {departmentOptions.map((option, index) => (\r\n              <MenuItem key={index} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n      )}\r\n    />\r\n    </FormControl> : \r\n    <TextField\r\n      label=\"Department\"\r\n      value={currentInvoice?.department }\r\n      style={width80}\r\n      disabled\r\n    />\r\n\r\n  const acknowledgeStatus = arrays.acknowledgeStatuses.includes(department.toLowerCase()) ? \r\n    <FormControl\r\n      sx={{\r\n        flex: 1,\r\n        flexShrink: 0,\r\n        width: { xs: 3 },\r\n      }}\r\n      style={width80}\r\n    >\r\n      <InputLabel> Acknowledge Status </InputLabel>\r\n      <Controller\r\n        name=\"acknowledgeStatus\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Select\r\n            style={outlinedStyle}\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            input={<OutlinedInput label=\"Acknowledge Status\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{ textTransform: 'capitalize', fullWidth: true }}\r\n          >\r\n            {acknowledgeOptions().map((option) => (\r\n              <MenuItem key={option} value={option} defaultChecked={ option === department}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      />\r\n    </FormControl> :\r\n    <TextField\r\n      label=\"Department\"\r\n      value={currentInvoice?.acknowledgeStatus }\r\n      style={width80}\r\n      disabled\r\n    /> \r\n\r\n  const installationDate = arrays.installationDate.includes(department.toLowerCase()) ? \r\n    <Controller\r\n      name=\"InstallationDate\"\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <Box sx={grayBgStyle} >\r\n          <DatePicker\r\n            \r\n            label=\"Installation Date\"\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            slotProps={{\r\n              flex: 1,\r\n              textField: {\r\n                fullWidth: true,\r\n                error: !!error,\r\n                helperText: error?.message,\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n        \r\n      )}\r\n    /> : \r\n    <TextField\r\n      label=\"Installation Date\"\r\n      value={currentInvoice.installationDate}\r\n      style={width80}\r\n      disabled\r\n    /> \r\n  \r\n    const installationStatus = arrays.installationStatus.includes(department.toLowerCase()) ? \r\n    <FormControl\r\n      sx={{\r\n        flex: 1,\r\n        flexShrink: 0,\r\n        width: { xs: 3, md: '80%' },\r\n      }}\r\n    >\r\n      <InputLabel />\r\n      <Controller\r\n        name=\"installationStatus\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Select\r\n            style={outlinedStyle}\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            input={<OutlinedInput label=\"\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{ textTransform: 'capitalize', fullWidth: true }}\r\n          >\r\n            {_installationStatus().map((option, index) => (\r\n              <MenuItem key={index} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      />\r\n    </FormControl> :\r\n    <TextField\r\n      label=\"Installation Status\"\r\n      value={currentInvoice.installationStatus}\r\n      style={width80}\r\n      disabled\r\n    /> \r\n\r\n  const collectionSourceSelect = arrays.collectionSource.includes(department.toLowerCase()) ? \r\n    <FormControl\r\n      sx={{\r\n        flex: 1,\r\n        flexShrink: 0,\r\n        width: { xs: 3,  },\r\n        \r\n      }}\r\n      style={width80}\r\n    >\r\n      <InputLabel> Collection Source </InputLabel>\r\n      <Controller\r\n        name=\"collectionSource\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Select\r\n            style={outlinedStyle}\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n              handleCollectionSourceChange(newValue);\r\n            }}\r\n            input={<OutlinedInput label=\"Collection Source\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{ textTransform: 'capitalize', fullWidth: true }}\r\n          >\r\n            {collectionSource.map((option, index) => (\r\n              <MenuItem key={index} value={option.value}>\r\n                {option.value}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      />\r\n    </FormControl> : \r\n    <TextField\r\n        label=\"Collection Source\"\r\n        value={currentInvoice.collectionSource}\r\n        style={width80}\r\n        disabled\r\n    /> \r\n  \r\n  const ClaimStatusSelect = arrays.claimStatus.includes(department.toLowerCase()) ? \r\n    <FormControl\r\n      sx={{\r\n        flex: 1,\r\n        flexShrink: 0,\r\n        width: { xs: 3 },\r\n      }}\r\n      style={width80}\r\n    >\r\n      <InputLabel> Claim Status </InputLabel>\r\n      <Controller\r\n        name=\"claimStatus\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Select\r\n            style={outlinedStyle}\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n              handleClaimStatusChange(newValue);\r\n            }}\r\n            input={<OutlinedInput label=\"Claim Status\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{ textTransform: 'capitalize', fullWidth: true }}\r\n          >\r\n            {claimsStatus.map((option, index) => (\r\n              <MenuItem key={index} value={option.value}>\r\n                {option.value}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      />\r\n    </FormControl> : \r\n    <TextField\r\n          label=\"Claim Status\"\r\n          value={currentInvoice.claimStatus}\r\n          style={width80}\r\n          disabled\r\n      /> \r\n\r\n  const ClaimsDetailStatusSelect = arrays.claimsDetailStatus.includes(department.toLowerCase()) ? \r\n    <FormControl\r\n      sx={{\r\n        flex: 1,\r\n        flexShrink: 0,\r\n        width: { xs: 3, md: '80%' },\r\n      }}\r\n      style={width80}\r\n    >\r\n      <InputLabel> Claims Detail Status </InputLabel>\r\n      <Controller\r\n        name=\"claimsDetailStatus\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <Select\r\n            style={outlinedStyle}\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n              handleClaimsDetailStatusChange(newValue)\r\n            }}\r\n            \r\n            input={<OutlinedInput label=\"Claims Detail Status\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{ textTransform: 'capitalize', fullWidth: true }}\r\n          >\r\n            {claimsDetailStatus.map((option, index) => (\r\n              <MenuItem key={index} value={option.value}>\r\n                {option.value}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      />\r\n    </FormControl> : <TextField\r\n          label=\"Claims Detail Status\"\r\n          value={currentInvoice.claimsDetailStatus}\r\n          style={width80}\r\n          disabled\r\n        /> \r\n          \r\n  const renderNotes = (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Notes\r\n      </Typography>\r\n      <TableContainer sx={{ overflow: 'unset', mt: 5 }}>\r\n        <Scrollbar>\r\n          <Table sx={{ minWidth: 960 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                <TableCell width={40}>#</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>Note</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>User</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>Create Date</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {currentInvoice?.notes.map((row, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n\r\n                  <TableCell>\r\n                    {/* <Box sx={{ maxWidth: 560 }}> */}\r\n                      <Typography variant=\"subtitle2\">{row.noteText}</Typography>\r\n                    {/* </Box> */}\r\n                  </TableCell>\r\n\r\n                  <TableCell>{row.createdBy}</TableCell>\r\n\r\n                  <TableCell>{row.createdDate.substring(0, row.createdDate.indexOf('T'))}</TableCell>\r\n                  \r\n                </TableRow>\r\n              ))} \r\n\r\n            </TableBody> \r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n    </>  \r\n  );\r\n  \r\n  const renderAttachments = (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n      Attachments\r\n      </Typography>\r\n      <TableContainer sx={{ overflow: 'unset', mt: 5, mb: 7 }}>\r\n        <Scrollbar>\r\n          <Table sx={{ minWidth: 960 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                <TableCell width={40}>#</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>Name</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>User</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>Create Date</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {currentInvoice?.attachments.map((row, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n\r\n                  <TableCell>\r\n                    {/* <Box sx={{ maxWidth: 560 }}> */}\r\n                      <Typography variant=\"subtitle2\"> <a target='_blank' rel=\"noreferrer\" href={row.attachmentPath}>{row.fileName}</a> </Typography>\r\n                    {/* </Box> */}\r\n                  </TableCell>\r\n\r\n                  <TableCell>{row.createdBy}</TableCell>\r\n\r\n                  <TableCell>{row.createdDate.substring(0, row.createdDate.indexOf('T'))}</TableCell>\r\n\r\n                  \r\n                </TableRow>\r\n              ))} \r\n\r\n            </TableBody> \r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n\r\n  const renderFooter = (\r\n    <Grid container>\r\n      <Grid xs={12} md={9} sx={{ py: 3 }}>\r\n        <Typography variant=\"subtitle2\">NOTES</Typography>\r\n\r\n        <Typography variant=\"body2\">\r\n          We appreciate your business. Should you need us to add VAT or extra notes let us know!\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3} sx={{ py: 3, textAlign: 'right' }}>\r\n        <Typography variant=\"subtitle2\">Have a Question?</Typography>\r\n\r\n        <Typography variant=\"body2\">support@minimals.cc</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    \r\n    // <Stack\r\n    //   spacing={2}\r\n    //   direction={{ xs: 'column', sm: 'row' }}\r\n    //   sx={{ p: 3, bgcolor: 'background.neutral' }}\r\n    // >\r\n      \r\n    //   {deliveryDate}\r\n        \r\n    //   {departmentSelect}\r\n\r\n    //   {installationDate}\r\n\r\n    //   {installationStatus}\r\n\r\n    //   {acknowledgeStatus}\r\n\r\n    //   {collectionSourceSelect}\r\n\r\n    //   {ClaimStatusSelect}\r\n\r\n    //   {ClaimsDetailStatusSelect} \r\n\r\n    // </Stack>\r\n\r\n    <Card sx={{ pt: 5, px: 5 }} >\r\n      <Box\r\n        rowGap={1}\r\n        display=\"grid\"\r\n        alignItems=\"center\"\r\n        gridTemplateColumns={{\r\n          xs: 'repeat(1, 1fr)',\r\n          sm: 'repeat(2, 1fr)',\r\n        }}\r\n      >\r\n        {/* <Box\r\n          component=\"img\"\r\n          alt=\"logo\"\r\n          src=\"/logo/logo_single.svg\"\r\n          sx={{ width: 48, height: 48 }}\r\n        />\r\n\r\n        \r\n         <Stack spacing={1} alignItems={{ xs: 'flex-start', md: 'flex-end' }}>\r\n          <Label\r\n            variant=\"soft\"\r\n            color= 'default'\r\n          >\r\n            {currentInvoice?.department}\r\n          </Label>\r\n\r\n        </Stack>  */}\r\n\r\n        <TextField\r\n          label=\"Issue Date\"\r\n          value={currentInvoice ? currentInvoice?.issueInvoiceDate.substring(0, currentInvoice?.issueInvoiceDate.indexOf('T')) : '' }\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Amount\"\r\n          value={currentInvoice?.invoiceAmount}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Currency\"\r\n          value={currentInvoice?.currency}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Customer Code\"\r\n          value={currentInvoice?.customerCode}\r\n          style={width80}\r\n          disabled\r\n        />\r\n        \r\n        <TextField\r\n          label=\"Name English\"\r\n          value={currentInvoice?.customerNameEn}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Name Arabic\"\r\n          value={currentInvoice?.customerNameAr}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Po Number\"\r\n          value={currentInvoice?.customerPO}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Po Value\"\r\n          value={currentInvoice?.poValue}\r\n          style={width80}\r\n          disabled\r\n        />    \r\n\r\n        <TextField\r\n          label=\"Region\"\r\n          value={currentInvoice?.region}\r\n          style={width80}\r\n          disabled\r\n        />        \r\n\r\n        <TextField\r\n          label=\"Contract Number\"\r\n          value={currentInvoice?.contractNo}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        {deliveryDate}\r\n\r\n        {installationDate}\r\n\r\n        {departmentSelect}\r\n\r\n        {installationStatus}\r\n\r\n        <TextField\r\n          label=\"Days To Collected\"\r\n          value={currentInvoice?.daysToCollected}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        {acknowledgeStatus}\r\n\r\n        {collectionSourceSelect}\r\n\r\n        {ClaimStatusSelect}\r\n\r\n        {ClaimsDetailStatusSelect}\r\n\r\n        <TextField\r\n          label=\"Sales Confirm\"\r\n          value={currentInvoice?.salesConfirm}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Created By\"\r\n          value={currentInvoice?.createdBy}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Sales Taker\"\r\n          value={currentInvoice?.salesTakerName}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Collector Name\"\r\n          value={currentInvoice?.collectorName}\r\n          style={width80}\r\n          disabled\r\n        />\r\n\r\n        <TextField\r\n          label=\"Responsible Engineer Name\"\r\n          value={currentInvoice?.responsibleEngineerName}\r\n          style={width80}\r\n          disabled\r\n        />\r\n      </Box>\r\n\r\n      {renderNotes}\r\n\r\n      <Divider sx={{ mt: 5, borderStyle: 'dashed', mb: 3}} />\r\n      {renderAttachments}\r\n\r\n      {/* <Divider sx={{ mt: 5, borderStyle: 'dashed' }} /> */}\r\n\r\n      {/* {renderFooter} */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nInvoiceNewEditStatusDate.propTypes = {\r\n  department: PropTypes.string,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  departmentOptions: PropTypes.array.isRequired,\r\n  currentInvoice: PropTypes.object.isRequired\r\n} \r\n","import React, { useMemo, useState, useCallback } from 'react'\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Button from \"@mui/material/Button\";\n\n// @mui Dialog\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\n// routes\nimport { useRouter } from 'src/routes/hooks';\n// _mock\nimport { getInvoiceEditUrl, getInvoiceRedirectUrl, getAddAttachmentUrl } from 'src/data-access/invoice';\nimport { _departments_withoutAll } from 'src/lists/departments';\n\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport FormProvider from 'src/components/hook-form';\n\n// lists\n//\nimport InvoiceNewEditAddress from './invoice-new-edit-address';\nimport InvoiceNewEditStatusDate from './invoice-new-edit-status-date';\n\n// ----------------------------------------------------------------------\n\nconst formatDate = (date) => {\n  const year = date.toLocaleString('default', {year: 'numeric'});\n  const month = date.toLocaleString('default', {\n    month: '2-digit',\n  });\n  const day = date.toLocaleString('default', {day: '2-digit'});\n\n  return [year, month, day].join('-');\n}\n\n\nexport default function InvoiceNewEditForm({ currentInvoice }) {\n  const router = useRouter();\n\n  const loadingSave = useBoolean();\n\n  const loadingSend = useBoolean();\n  \n\n  const[didUpdate, setDidUpdate] = useState(false);\n  const[isError, setIsError] = useState(false);\n  const[errorMessage, setErrorMessage] = useState('');\n\n  console.log(currentInvoice.department)\n\n  const departmentId = _departments_withoutAll()\n                          .map(item => item.toLocaleLowerCase())\n                          .indexOf(currentInvoice?.department.toLowerCase())\n\n  const handleClickOpen = () => {\n    setIsError(true);\n  };\n\n  const handleClose = () => {\n    setIsError(false);\n  };\n  \n  const arrays = {\n    deliveryDate: ['operation'],\n    department: ['operation', 'sales', 'tenderandcontracts'],\n    acknowledgeStatuses: ['operation', 'sales'],\n    installationStatus: ['installation'],\n    installationDate: ['installation'],\n    collectionSource: ['collection'],\n    claimStatus: ['collection'],\n    claimsDetailStatus: ['collection'],\n  }\n\n  const NewInvoiceSchema = Yup.object().shape({\n    CreateNote: Yup.string(),\n    department: Yup.string(),\n    acknowledgeStatus: Yup.string(),\n    DeliveryDate: Yup.mixed().nullable(),\n    installationStatus: Yup.string(),\n    installationDate: Yup.mixed().nullable(),\n    collectionSource: Yup.string(),\n    claimStatus: Yup.string(),\n    claimsDetailStatus: Yup.string(),\n\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      CreateNote: currentInvoice?.CreateNote || '',\n      department: currentInvoice?.department || '',\n      acknowledgeStatus: currentInvoice?.acknowledgeStatus || '',\n      DeliveryDate: currentInvoice?.DeliveryDate || new Date(),\n      installationStatus: currentInvoice?.installationStatus || '',\n      installationDate: currentInvoice?.installationDate || new Date(),\n      collectionSource: currentInvoice?.CollectionSource || '',\n      claimStatus: currentInvoice?.ClaimStatus || '',\n      claimsDetailStatus: currentInvoice?.ClaimsDetailStatus || '',\n    }),\n    [currentInvoice]\n  );\n\n  // const {notes} = currentInvoice;\n\n  const [filters, setFilters] = useState(defaultValues);\n\n  const methods = useForm({\n    resolver: yupResolver(NewInvoiceSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const handleFilters = useCallback(\n    (name, value) => {\n      setFilters((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    },\n    []\n  );\n\n\n  const handleCreateAndSend = handleSubmit(async (data) => {\n\n\n    handleFileUpload();\n    console.log('File uploaded');\n    console.log('Data:', data);\n    loadingSend.onTrue(); \n    \n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      \n      const {CreateNote,department,acknowledgeStatus,DeliveryDate, installationDate, installationStatus, collectionSource, claimStatus, claimsDetailStatus} = watch()\n\n      const body = [\n\n      ]\n\n      if(department && arrays.department.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/department\",\n          value : `${department}`\n        })\n      }\n\n      if(acknowledgeStatus && arrays.acknowledgeStatuses.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/acknowledgeStatus\",\n          value : `${acknowledgeStatus}`\n        })\n      }\n\n      if(DeliveryDate&& arrays.deliveryDate.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/DeliveryDate\",\n          value : `${formatDate(DeliveryDate)}`\n        })\n      }\n\n      if(installationDate && arrays.installationDate.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/DeliveryDate\",\n          value : `${formatDate(installationDate)}`\n        })\n      }\n\n      if(installationStatus && arrays.installationStatus.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/InstallationDate\",\n          value : `${installationStatus}`\n        })\n      }\n\n      if(collectionSource && arrays.collectionSource.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/CollectionSource\",\n          value : `${collectionSource}`\n        })\n      }\n\n      if(claimStatus && arrays.claimStatus.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/ClaimStatus\",\n          value : `${claimStatus}`\n        })\n      }\n\n      if(claimsDetailStatus && arrays.claimsDetailStatus.includes(currentInvoice.department.toLowerCase())) {\n        body.push({\n          op : \"replace\",\n          path : \"/ClaimsDetailStatus\",\n          value : `${claimsDetailStatus}`\n        })\n      }\n\n      body.push({\n        op : \"add\",\n        path : \"/CreateNote\",\n        value : {\n          NoteText : `${CreateNote}`\n        }\n      })\n      \n       reset();\n      // loadingSend.onFalse();\n\n      const redirectUrl = getInvoiceRedirectUrl(departmentId)\n      // Send create invoice request\n      \n      console.log('Body', JSON.stringify(body) )\n      const url = getInvoiceEditUrl(departmentId, currentInvoice.id)\n      console.log('Url', url )\n      fetch(url, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body),\n        Cache: 'default'  \n      })\n      .then(response => {\n        if (!response.ok) {\n          if (response.status === 400) {\n            // If status code is 400, log the error message\n            return response.text().then(error => {\n              setErrorMessage(error);\n              setIsError(true);\n              throw new Error(`Bad Request: ${error}`);\n            });\n          } \n          // For other error status codes, throw a generic error\n          throw new Error('Network response was not ok');\n          \n        }\n        return response.text(); // Use text() instead of json()\n        \n      })\n      .then(res => {\n        setDidUpdate(true)  \n        loadingSend.onFalse();\n        router.replace(redirectUrl);\n        // Handle the non-JSON error message\n        console.log('res:', res);\n      })\n      .catch(error => {\n        console.error('Fetch Error:', error);\n      });\n      // .then(res => {\n      //   console.log(res)\n      //   setDidUpdate(true)   \n      // })\n      // .catch(error => console.log(error.message))\n\n      \n      // console.info('DATA', JSON.stringify(data, null, 2));\n    } catch (error) {\n      console.error('Error:', error);\n      loadingSend.onFalse();\n    }\n  });\n\n  const handleFileUpload = () => {\n\n    \n    const formData = new FormData();\n    \n    const fileInput = document.querySelector(\"#file\").files[0];      \n    \n    if(fileInput) {\n      formData.append('file', fileInput);\n\n      try {\n        // Send Add Attachment request\n        \n        const url = getAddAttachmentUrl(currentInvoice.id)\n        console.log('Url', url )\n        fetch(url, {\n          mode: 'cors',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n          },\n          body: formData,\n          Cache: 'default'  \n        })\n        .then(async response => {\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          \n          if (!response.ok) {\n            if (response.status === 400 || response.status === 415) {\n\n              const error = await response.text();\n\n              throw new Error(`Bad Request: ${error}`);\n            } \n            // For other error status codes, throw a generic error\n            throw new Error('Network response was not ok');\n            \n          }\n          return response.text(); // Use text() instead of json()\n          \n        })\n        .then(res => {\n\n        })\n        .catch(error => {\n          console.error('Fetch Error:', error);\n          \n        })\n         \n      } catch (error) {\n        console.log(error)\n      } \n    }\n    else {\n      // setIsEmportError(true)\n      // setAlertMessage('No file selecetd.')\n    }\n  }\n\n\n  // Components\n\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleCreateAndSend} >\n        <Card>\n          <InvoiceNewEditAddress currentInvoice={currentInvoice}/>\n\n          <InvoiceNewEditStatusDate \n            currentInvoice={currentInvoice}\n            filters={filters}\n            onFilters={handleFilters}\n            departmentOptions={_departments_withoutAll().map((option) => option)}\n            department={currentInvoice.department}\n            />\n\n          {/* <InvoiceNewEditDetails /> */}\n        </Card>\n\n        <Stack justifyContent=\"flex-end\" direction=\"row\" spacing={2} sx={{ mt: 3 }}>\n          {/* <LoadingButton\n            color=\"inherit\"\n            size=\"large\"\n            variant=\"outlined\"\n            loading={loadingSave.value && isSubmitting}\n            onClick={handleSaveAsDraft}\n          >\n            Save as Draft\n          </LoadingButton> */}\n\n          <LoadingButton\n            size=\"large\"\n            variant=\"contained\"\n            loading={loadingSend.value && isSubmitting}\n            type='submit'\n            // onClick={ handleSubmit(handleCreateAndSend)} \n          >\n            {currentInvoice ? 'Update' : 'Create'} & Send\n          </LoadingButton>\n        </Stack>\n        <Dialog\n          open={isError}\n          color=\"#ef5350\"\n          // TransitionComponent={Transition}\n          keepMounted\n          onClose={handleClose}\n          aria-describedby=\"alert-dialog-slide-description\"\n          className=\"dialog-error\"\n        >\n          <DialogTitle>Error</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              { String(errorMessage)} \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Ok</Button>\n            {/* <Button onClick={handleClose}>Agree</Button> */}\n          </DialogActions>\n        </Dialog>\n      </FormProvider>\n    \n  );\n\n\n\n\n\n}\n\nInvoiceNewEditForm.propTypes = {\n  currentInvoice: PropTypes.object,\n};\n","// React\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n// @mui\r\nimport Container from '@mui/material/Container';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//\r\nimport InvoiceToolbar from 'src/sections/invoice/invoice-toolbar';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// Invoice\r\nimport { getInvoicesById } from 'src/data-access/invoice'\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceNewEditForm from 'src/screens/components/invoice/edit/operation/invoice-new-edit-form';\r\n\r\nimport InvoiceDetails from 'src/screens/components/invoice/details/InvoiceDetails';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceEditView({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  \r\n  \r\n  const [currentInvoice, setCurrentInvoice] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const invoice = await getInvoicesById(id);\r\n        setCurrentInvoice(invoice);\r\n        console.log(invoice)\r\n      } catch (error) {\r\n        console.error('Error fetching invoice:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n \r\n  if(loading || !currentInvoice) {\r\n    return (\r\n      <CircularProgress />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Edit invoice\"\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          {\r\n            name: 'New Invoice',\r\n          },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n      <InvoiceNewEditForm currentInvoice={currentInvoice} />\r\n      {/* <InvoiceDetails  currentInvoice = {currentInvoice} /> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nInvoiceEditView.propTypes = {\r\n  id: PropTypes.number.isRequired\r\n};\r\n\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { useParams } from 'src/routes/hooks';\r\nimport PropTypes from 'prop-types';\r\n// sections\r\nimport  InvoiceEditView  from 'src/screens/components/invoice/edit/operation/InvoiceEditView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceEditPage() {\r\n  const params = useParams();\r\n\r\n  const { id } = params;\r\n  console.log(params);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Edit invoice</title>\r\n      </Helmet>\r\n\r\n      <InvoiceEditView id={id}/>\r\n    </>\r\n  );\r\n}\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["getAllCustomers","_getAllCustomers","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","list","wrap","_context","prev","next","fetch","mode","then","result","json","invoices","catch","error","console","log","abrupt","stop","getSalesPersonList","_getSalesPersonList","_callee2","_context2","Translate","text","t","useLocales","_departments","_departments_withoutAll","AddressListDialog","_ref","_ref$title","title","action","open","onClose","selected","onSelect","_useState","useState","_useState2","_slicedToArray","searchAddress","setSearchAddress","dataFiltered","_ref3","inputData","query","filter","address","customerCode","toLowerCase","indexOf","customerNameEn","customerNameAr","applyFilter","notFound","length","handleSearchAddress","useCallback","event","target","value","handleSelectAddress","renderList","_jsx","Stack","spacing","sx","p","maxHeight","overflowX","children","map","_jsxs","component","ListItemButton","concat","id","onClick","_defineProperty","py","px","borderRadius","flexDirection","alignItems","listItemButtonClasses","bgcolor","direction","Typography","variant","color","Dialog","fullWidth","maxWidth","justifyContent","pr","pt","TextField","onChange","placeholder","InputProps","startAdornment","InputAdornment","position","Iconify","icon","SearchNotFound","pb","AddressListDialogSales","username","textTransform","InvoiceNewEditAddress","currentInvoice","_useFormContext","useFormContext","control","watch","mdUp","setValue","formState","errors","useResponsive","values","customerId","salesPerson","customerObj","salesPersonObj","xs","md","divider","Divider","flexItem","orientation","borderStyle","width","mb","flexGrow","type","inputProps","accept","Controller","name","render","_ref2","field","newValue","_acknowledgeStatuses","_installationStatus","InvoiceNewEditStatusDate","department","departmentOptions","filters","onFilters","setLoading","_useState3","_useState4","collectionData","setCollectionData","_useState5","_useState6","collectionSource","setCollectionSource","_useState7","_useState8","claimsStatus","setClaimsStatus","_useState9","_useState10","claimsDetailStatus","setClaimsDetailStatus","useEffect","fetchData","data","getCollectionData","sent","option","entityType","t0","finish","resetField","arrays","deliveryDate","acknowledgeStatuses","installationStatus","installationDate","claimStatus","updateClaimsDetailStatus","claimStatusOption","claimStatusId","parentId","outlinedStyle","grayBgStyle","margin","width80","includes","fieldState","DatePicker","label","substring","disabled","style","departmentSelect","FormControl","flex","flexShrink","InputLabel","_ref4","Select","input","OutlinedInput","renderValue","textField","index","MenuItem","acknowledgeStatus","_ref5","acknowledgeOptions","defaultChecked","_ref6","Box","slotProps","helperText","message","_ref7","collectionSourceSelect","_ref8","collectionSourceId","handleCollectionSourceChange","ClaimStatusSelect","_ref9","handleClaimStatusChange","ClaimsDetailStatusSelect","_ref10","renderNotes","_Fragment","gutterBottom","TableContainer","overflow","mt","Scrollbar","Table","minWidth","TableHead","TableRow","TableCell","typography","TableBody","notes","row","noteText","createdBy","createdDate","renderAttachments","attachments","rel","href","attachmentPath","fileName","Grid","Card","rowGap","display","gridTemplateColumns","sm","issueInvoiceDate","invoiceAmount","currency","customerPO","poValue","region","contractNo","daysToCollected","salesConfirm","salesTakerName","collectorName","responsibleEngineerName","formatDate","date","toLocaleString","year","month","day","join","InvoiceNewEditForm","router","useRouter","loadingSend","useBoolean","setDidUpdate","isError","setIsError","errorMessage","setErrorMessage","departmentId","item","toLocaleLowerCase","handleClose","NewInvoiceSchema","Yup","shape","CreateNote","DeliveryDate","nullable","defaultValues","useMemo","Date","CollectionSource","ClaimStatus","ClaimsDetailStatus","setFilters","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","handleFilters","prevState","_objectSpread","handleCreateAndSend","_watch","body","redirectUrl","url","handleFileUpload","onTrue","Promise","resolve","setTimeout","push","op","path","NoteText","getInvoiceRedirectUrl","JSON","stringify","getInvoiceEditUrl","method","headers","Cache","response","ok","status","Error","res","onFalse","replace","_x","formData","FormData","fileInput","document","querySelector","files","append","getAddAttachmentUrl","_x2","FormProvider","onSubmit","LoadingButton","size","loading","keepMounted","className","DialogTitle","DialogContent","DialogContentText","String","DialogActions","Button","InvoiceEditView","settings","useSettingsContext","setCurrentInvoice","invoice","getInvoicesById","CircularProgress","Container","themeStretch","CustomBreadcrumbs","heading","links","paths","dashboard","root","InvoiceEditPage","params","useParams","Helmet","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","styled","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","React","inProps","ref","useThemeProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx","DialogTitleRoot","padding","idProp","other","getDialogTitleUtilityClass","_React$useContext$tit","DialogContext","titleId"],"sourceRoot":""}