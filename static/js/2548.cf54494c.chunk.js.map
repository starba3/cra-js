{"version":3,"file":"static/js/2548.cf54494c.chunk.js","mappings":"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","sources":["components/lightbox/use-light-box.js","components/lightbox/styles.js","components/lightbox/lightbox.js","api/chat.js","sections/chat/hooks/use-collapse-nav.js","sections/chat/chat-nav-item.js","sections/chat/hooks/use-get-nav-item.js","sections/chat/chat-nav-account.js","sections/chat/chat-skeleton.js","sections/chat/chat-nav-search-results.js","sections/chat/chat-nav.js","sections/chat/chat-room-participant-dialog.js","sections/chat/chat-room-group.js","sections/chat/chat-room-single.js","sections/chat/chat-room-attachments.js","sections/chat/chat-room.js","sections/chat/chat-message-item.js","sections/chat/hooks/use-get-message.js","sections/chat/chat-message-list.js","sections/chat/hooks/use-messages-scroll.js","sections/chat/chat-message-input.js","sections/chat/chat-header-detail.js","sections/chat/chat-header-compose.js","sections/chat/view/chat-view.js","pages/dashboard/chat.js","utils/uuidv4.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useLightBox(slides) {\n  const [selected, setSelected] = useState(-1);\n\n  const handleOpen = useCallback(\n    (slideUrl) => {\n      const slideIndex = slides.findIndex((slide) =>\n        slide.type === 'video' ? slide.poster === slideUrl : slide.src === slideUrl\n      );\n\n      setSelected(slideIndex);\n    },\n    [slides]\n  );\n\n  const handleClose = useCallback(() => {\n    setSelected(-1);\n  }, []);\n\n  return {\n    selected,\n    open: selected >= 0,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    setSelected,\n  };\n}\n","// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport GlobalStyles from '@mui/material/GlobalStyles';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","import PropTypes from 'prop-types';\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\nimport Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\n// @mui\nimport Box from '@mui/material/Box';\n//\nimport Iconify from '../iconify';\n//\nimport StyledLightbox from './styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = 24;\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: ({ index }) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal key={0} totalItems={totalItems} disabledTotal={disabledTotal} />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={ICON_SIZE} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={ICON_SIZE} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={ICON_SIZE} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\nLightbox.propTypes = {\n  disabledCaptions: PropTypes.bool,\n  disabledFullscreen: PropTypes.bool,\n  disabledSlideshow: PropTypes.bool,\n  disabledThumbnails: PropTypes.bool,\n  disabledTotal: PropTypes.bool,\n  disabledVideo: PropTypes.bool,\n  disabledZoom: PropTypes.bool,\n  onGetCurrentIndex: PropTypes.func,\n  slides: PropTypes.array,\n};\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\nexport function DisplayTotal({ totalItems, disabledTotal }) {\n  const { currentIndex } = useLightboxState();\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      className=\"yarl__button\"\n      sx={{\n        typography: 'body2',\n        alignItems: 'center',\n        display: 'inline-flex',\n        justifyContent: 'center',\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Box>\n  );\n}\n\nDisplayTotal.propTypes = {\n  disabledTotal: PropTypes.bool,\n  totalItems: PropTypes.number,\n};\n","import { useMemo } from 'react';\nimport keyBy from 'lodash/keyBy';\nimport useSWR, { mutate } from 'swr';\n// utils\nimport axios, { endpoints, fetcher } from 'src/utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst options = {\n  revalidateIfStale: false,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nexport function useGetContacts() {\n  const URL = [endpoints.chat, { params: { endpoint: 'contacts' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      contacts: data?.contacts || [],\n      contactsLoading: isLoading,\n      contactsError: error,\n      contactsValidating: isValidating,\n      contactsEmpty: !isLoading && !data?.contacts.length,\n    }),\n    [data?.contacts, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversations() {\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(() => {\n    const byId = keyBy(data?.conversations, 'id') || {};\n    const allIds = Object.keys(byId) || [];\n\n    return {\n      conversations: {\n        byId,\n        allIds,\n      },\n      conversationsLoading: isLoading,\n      conversationsError: error,\n      conversationsValidating: isValidating,\n      conversationsEmpty: !isLoading && !allIds.length,\n    };\n  }, [data?.conversations, error, isLoading, isValidating]);\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversation(conversationId) {\n  const URL = conversationId\n    ? [endpoints.chat, { params: { conversationId, endpoint: 'conversation' } }]\n    : null;\n\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\n\n  const memoizedValue = useMemo(\n    () => ({\n      conversation: data?.conversation,\n      conversationLoading: isLoading,\n      conversationError: error,\n      conversationValidating: isValidating,\n    }),\n    [data?.conversation, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function sendMessage(conversationId, messageData) {\n  const CONVERSATIONS_URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  const CONVERSATION_URL = [\n    endpoints.chat,\n    {\n      params: { conversationId, endpoint: 'conversation' },\n    },\n  ];\n\n  /**\n   * Work on server\n   */\n  // const data = { conversationId, messageData };\n  // await axios.put(endpoints.chat, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    CONVERSATION_URL,\n    (currentData) => {\n      const { conversation: currentConversation } = currentData;\n\n      const conversation = {\n        ...currentConversation,\n        messages: [...currentConversation.messages, messageData],\n      };\n\n      return {\n        conversation,\n      };\n    },\n    false\n  );\n\n  /**\n   * Work in local\n   */\n  mutate(\n    CONVERSATIONS_URL,\n    (currentData) => {\n      const { conversations: currentConversations } = currentData;\n\n      const conversations = currentConversations.map((conversation) =>\n        conversation.id === conversationId\n          ? {\n              ...conversation,\n              messages: [...conversation.messages, messageData],\n            }\n          : conversation\n      );\n\n      return {\n        conversations,\n      };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createConversation(conversationData) {\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\n\n  /**\n   * Work on server\n   */\n  const data = { conversationData };\n  const res = await axios.post(endpoints.chat, data);\n\n  /**\n   * Work in local\n   */\n  mutate(\n    URL,\n    (currentData) => {\n      const conversations = [...currentData.conversations, conversationData];\n      return {\n        ...currentData,\n        conversations,\n      };\n    },\n    false\n  );\n\n  return res.data;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function clickConversation(conversationId) {\n  const URL = endpoints.chat;\n\n  /**\n   * Work on server\n   */\n  // await axios.get(URL, { params: { conversationId, endpoint: 'mark-as-seen' } });\n\n  /**\n   * Work in local\n   */\n  mutate(\n    [\n      URL,\n      {\n        params: { endpoint: 'conversations' },\n      },\n    ],\n    (currentData) => {\n      const conversations = currentData.conversations.map((conversation) =>\n        conversation.id === conversationId ? { ...conversation, unreadCount: 0 } : conversation\n      );\n\n      return {\n        ...currentData,\n        conversations,\n      };\n    },\n    false\n  );\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useCollapseNav() {\n  const [openMobile, setOpenMobile] = useState(false);\n\n  const [collapseDesktop, setCollapseDesktop] = useState(false);\n\n  const onCollapseDesktop = useCallback(() => {\n    setCollapseDesktop((prev) => !prev);\n  }, []);\n\n  const onCloseDesktop = useCallback(() => {\n    setCollapseDesktop(false);\n  }, []);\n\n  const onOpenMobile = useCallback(() => {\n    setOpenMobile(true);\n  }, []);\n\n  const onCloseMobile = useCallback(() => {\n    setOpenMobile(false);\n  }, []);\n\n  return {\n    openMobile,\n    collapseDesktop,\n    //\n    onOpenMobile,\n    onCloseMobile,\n    onCloseDesktop,\n    onCollapseDesktop,\n  };\n}\n","import PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\nimport { useResponsive } from 'src/hooks/use-responsive';\n// api\nimport { clickConversation } from 'src/api/chat';\n//\nimport { useGetNavItem } from './hooks';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatNavItem({ selected, collapse, conversation, onCloseMobile }) {\n  const { user } = useMockedUser();\n\n  const mdUp = useResponsive('up', 'md');\n\n  const router = useRouter();\n\n  const { group, displayName, displayText, participants, lastActivity, hasOnlineInGroup } =\n    useGetNavItem({\n      conversation,\n      currentUserId: `${user?.id}`,\n    });\n\n  const singleParticipant = participants[0];\n\n  const { name, avatarUrl, status } = singleParticipant;\n\n  const handleClickConversation = useCallback(async () => {\n    try {\n      if (!mdUp) {\n        onCloseMobile();\n      }\n\n      await clickConversation(conversation.id);\n\n      router.push(`${paths.dashboard.chat}?id=${conversation.id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [conversation.id, mdUp, onCloseMobile, router]);\n\n  const renderGroup = (\n    <Badge\n      variant={hasOnlineInGroup ? 'online' : 'invisible'}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n    >\n      <AvatarGroup variant=\"compact\" sx={{ width: 48, height: 48 }}>\n        {participants.slice(0, 2).map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n        ))}\n      </AvatarGroup>\n    </Badge>\n  );\n\n  const renderSingle = (\n    <Badge key={status} variant={status} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 48, height: 48 }} />\n    </Badge>\n  );\n\n  return (\n    <ListItemButton\n      disableGutters\n      onClick={handleClickConversation}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        ...(selected && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <Badge\n        color=\"error\"\n        overlap=\"circular\"\n        badgeContent={collapse ? conversation.unreadCount : 0}\n      >\n        {group ? renderGroup : renderSingle}\n      </Badge>\n\n      {!collapse && (\n        <>\n          <ListItemText\n            sx={{ ml: 2 }}\n            primary={displayName}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2',\n            }}\n            secondary={displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              component: 'span',\n              variant: conversation.unreadCount ? 'subtitle2' : 'body2',\n              color: conversation.unreadCount ? 'text.primary' : 'text.secondary',\n            }}\n          />\n\n          <Stack alignItems=\"flex-end\" sx={{ ml: 2, height: 44 }}>\n            <Typography\n              noWrap\n              variant=\"body2\"\n              component=\"span\"\n              sx={{\n                mb: 1.5,\n                fontSize: 12,\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(lastActivity), {\n                addSuffix: false,\n              })}\n            </Typography>\n\n            {!!conversation.unreadCount && (\n              <Box\n                sx={{\n                  width: 8,\n                  height: 8,\n                  bgcolor: 'info.main',\n                  borderRadius: '50%',\n                }}\n              />\n            )}\n          </Stack>\n        </>\n      )}\n    </ListItemButton>\n  );\n}\n\nChatNavItem.propTypes = {\n  collapse: PropTypes.bool,\n  conversation: PropTypes.object,\n  onCloseMobile: PropTypes.func,\n  selected: PropTypes.bool,\n};\n","// ----------------------------------------------------------------------\n\nexport default function useGetNavItem({ currentUserId, conversation }) {\n  const { messages, participants } = conversation;\n\n  const participantsInConversation = participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n\n  const lastMessage = messages[messages.length - 1];\n\n  const group = participantsInConversation.length > 1;\n\n  const displayName = participantsInConversation.map((participant) => participant.name).join(', ');\n\n  const hasOnlineInGroup = group\n    ? participantsInConversation.map((item) => item.status).includes('online')\n    : false;\n\n  let displayText = '';\n\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n\n  return {\n    group,\n    displayName,\n    displayText,\n    participants: participantsInConversation,\n    lastActivity: lastMessage.createdAt,\n    hasOnlineInGroup,\n  };\n}\n","import { useState, useCallback } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Badge, { badgeClasses } from '@mui/material/Badge';\nimport Select from '@mui/material/Select';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// components\nimport Iconify from 'src/components/iconify';\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatNavAccount() {\n  const { user } = useMockedUser();\n\n  const popover = usePopover();\n\n  const [status, setStatus] = useState('online');\n\n  const handleChangeStatus = useCallback((event) => {\n    setStatus(event.target.value);\n  }, []);\n\n  return (\n    <>\n      <Badge variant={status} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n        <Avatar\n          src={user?.photoURL}\n          alt={user?.displayName}\n          onClick={popover.onOpen}\n          sx={{ cursor: 'pointer', width: 48, height: 48 }}\n        />\n      </Badge>\n\n      <CustomPopover open={popover.open} onClose={popover.onClose} arrow=\"top-left\" sx={{ p: 0 }}>\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          spacing={2}\n          sx={{\n            py: 2,\n            pr: 1,\n            pl: 2.5,\n          }}\n        >\n          <ListItemText\n            primary={user?.displayName}\n            secondary={user?.email}\n            secondaryTypographyProps={{ component: 'span' }}\n          />\n\n          <Tooltip title=\"Log out\">\n            <IconButton color=\"error\">\n              <Iconify icon=\"ic:round-power-settings-new\" />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <Stack sx={{ p: 1 }}>\n          <MenuItem>\n            <Badge\n              variant={status}\n              sx={{\n                [`& .${badgeClasses.badge}`]: {\n                  position: 'static',\n                  m: 0.75,\n                  width: 12,\n                  height: 12,\n                  flexShrink: 0,\n                },\n              }}\n            />\n\n            <Select\n              native\n              fullWidth\n              value={status}\n              onChange={handleChangeStatus}\n              input={<InputBase sx={{ pl: 2 }} />}\n              inputProps={{\n                sx: { textTransform: 'capitalize' },\n              }}\n            >\n              {['online', 'alway', 'busy', 'offline'].map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"solar:user-id-bold\" width={24} />\n            Profile\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"eva:settings-2-fill\" width={24} />\n            Settings\n          </MenuItem>\n        </Stack>\n      </CustomPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport Skeleton from '@mui/material/Skeleton';\nimport Stack from '@mui/material/Stack';\n\n// ----------------------------------------------------------------------\n\nexport function ChatNavItemSkeleton({ sx, ...other }) {\n  return (\n    <Stack\n      spacing={2}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        px: 2.5,\n        py: 1.5,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" sx={{ width: 48, height: 48 }} />\n\n      <Stack spacing={1} flexGrow={1}>\n        <Skeleton sx={{ width: 0.75, height: 10 }} />\n        <Skeleton sx={{ width: 0.5, height: 10 }} />\n      </Stack>\n    </Stack>\n  );\n}\n\nChatNavItemSkeleton.propTypes = {\n  sx: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n//\nimport SearchNotFound from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatNavSearchResults({ query, results, onClickResult }) {\n  const totalResults = results.length;\n\n  const notFound = !totalResults && !!query;\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        sx={{\n          px: 2.5,\n          mb: 2,\n        }}\n      >\n        Contacts ({totalResults})\n      </Typography>\n\n      {notFound ? (\n        <SearchNotFound\n          query={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 40px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      ) : (\n        <>\n          {results.map((result) => (\n            <ListItemButton\n              key={result.id}\n              onClick={() => onClickResult(result)}\n              sx={{\n                px: 2.5,\n                py: 1.5,\n                typography: 'subtitle2',\n              }}\n            >\n              <Avatar alt={result.name} src={result.avatarUrl} sx={{ mr: 2 }} />\n              {result.name}\n            </ListItemButton>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n\nChatNavSearchResults.propTypes = {\n  query: PropTypes.string,\n  results: PropTypes.array,\n  onClickResult: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect, useCallback } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n// hooks\nimport { useResponsive } from 'src/hooks/use-responsive';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n//\nimport { useCollapseNav } from './hooks';\nimport ChatNavItem from './chat-nav-item';\nimport ChatNavAccount from './chat-nav-account';\nimport { ChatNavItemSkeleton } from './chat-skeleton';\nimport ChatNavSearchResults from './chat-nav-search-results';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 320;\n\nconst NAV_COLLAPSE_WIDTH = 96;\n\nexport default function ChatNav({ loading, contacts, conversations, selectedConversationId }) {\n  const theme = useTheme();\n\n  const router = useRouter();\n\n  const mdUp = useResponsive('up', 'md');\n\n  const {\n    collapseDesktop,\n    onCloseDesktop,\n    onCollapseDesktop,\n    //\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n  } = useCollapseNav();\n\n  const [searchContacts, setSearchContacts] = useState({\n    query: '',\n    results: [],\n  });\n\n  useEffect(() => {\n    if (!mdUp) {\n      onCloseDesktop();\n    }\n  }, [onCloseDesktop, mdUp]);\n\n  const handleToggleNav = useCallback(() => {\n    if (mdUp) {\n      onCollapseDesktop();\n    } else {\n      onCloseMobile();\n    }\n  }, [mdUp, onCloseMobile, onCollapseDesktop]);\n\n  const handleClickCompose = useCallback(() => {\n    if (!mdUp) {\n      onCloseMobile();\n    }\n    router.push(paths.dashboard.chat);\n  }, [mdUp, onCloseMobile, router]);\n\n  const handleSearchContacts = useCallback(\n    (inputValue) => {\n      setSearchContacts((prevState) => ({\n        ...prevState,\n        query: inputValue,\n      }));\n\n      if (inputValue) {\n        const results = contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(inputValue)\n        );\n\n        setSearchContacts((prevState) => ({\n          ...prevState,\n          results,\n        }));\n      }\n    },\n    [contacts]\n  );\n\n  const handleClickAwaySearch = useCallback(() => {\n    setSearchContacts({\n      query: '',\n      results: [],\n    });\n  }, []);\n\n  const handleClickResult = useCallback(\n    (result) => {\n      handleClickAwaySearch();\n\n      router.push(`${paths.dashboard.chat}?id=${result.id}`);\n    },\n    [handleClickAwaySearch, router]\n  );\n\n  const renderToggleBtn = (\n    <IconButton\n      onClick={onOpenMobile}\n      sx={{\n        left: 0,\n        top: 84,\n        zIndex: 9,\n        width: 32,\n        height: 32,\n        position: 'absolute',\n        borderRadius: `0 12px 12px 0`,\n        bgcolor: theme.palette.primary.main,\n        boxShadow: theme.customShadows.primary,\n        color: theme.palette.primary.contrastText,\n        '&:hover': {\n          bgcolor: theme.palette.primary.darker,\n        },\n      }}\n    >\n      <Iconify width={16} icon=\"solar:users-group-rounded-bold\" />\n    </IconButton>\n  );\n\n  const renderSkeleton = (\n    <>\n      {[...Array(12)].map((_, index) => (\n        <ChatNavItemSkeleton key={index} />\n      ))}\n    </>\n  );\n\n  const renderList = (\n    <>\n      {conversations.allIds.map((conversationId) => (\n        <ChatNavItem\n          key={conversationId}\n          collapse={collapseDesktop}\n          conversation={conversations.byId[conversationId]}\n          selected={conversationId === selectedConversationId}\n          onCloseMobile={onCloseMobile}\n        />\n      ))}\n    </>\n  );\n\n  const renderListResults = (\n    <ChatNavSearchResults\n      query={searchContacts.query}\n      results={searchContacts.results}\n      onClickResult={handleClickResult}\n    />\n  );\n\n  const renderSearchInput = (\n    <ClickAwayListener onClickAway={handleClickAwaySearch}>\n      <TextField\n        fullWidth\n        value={searchContacts.query}\n        onChange={(event) => handleSearchContacts(event.target.value)}\n        placeholder=\"Search contacts...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n        sx={{ mt: 2.5 }}\n      />\n    </ClickAwayListener>\n  );\n\n  const renderContent = (\n    <>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ p: 2.5, pb: 0 }}>\n        {!collapseDesktop && (\n          <>\n            <ChatNavAccount />\n            <Box sx={{ flexGrow: 1 }} />\n          </>\n        )}\n\n        <IconButton onClick={handleToggleNav}>\n          <Iconify\n            icon={collapseDesktop ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'}\n          />\n        </IconButton>\n\n        {!collapseDesktop && (\n          <IconButton onClick={handleClickCompose}>\n            <Iconify width={24} icon=\"solar:user-plus-bold\" />\n          </IconButton>\n        )}\n      </Stack>\n\n      <Box sx={{ p: 2.5, pt: 0 }}>{!collapseDesktop && renderSearchInput}</Box>\n\n      <Scrollbar sx={{ pb: 1 }}>\n        {searchContacts.query && renderListResults}\n\n        {loading && renderSkeleton}\n\n        {!searchContacts.query && !!conversations.allIds.length && renderList}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!mdUp && renderToggleBtn}\n\n      {mdUp ? (\n        <Stack\n          sx={{\n            height: 1,\n            flexShrink: 0,\n            width: NAV_WIDTH,\n            borderRight: `solid 1px ${theme.palette.divider}`,\n            transition: theme.transitions.create(['width'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            ...(collapseDesktop && {\n              width: NAV_COLLAPSE_WIDTH,\n            }),\n          }}\n        >\n          {renderContent}\n        </Stack>\n      ) : (\n        <Drawer\n          open={openMobile}\n          onClose={onCloseMobile}\n          slotProps={{\n            backdrop: { invisible: true },\n          }}\n          PaperProps={{\n            sx: { width: NAV_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n\nChatNav.propTypes = {\n  contacts: PropTypes.array,\n  conversations: PropTypes.object,\n  loading: PropTypes.bool,\n  selectedConversationId: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport DialogContent from '@mui/material/DialogContent';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomParticipantDialog({ participant, open, onClose }) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <Iconify icon=\"mingcute:close-line\" />\n      </IconButton>\n\n      <DialogContent sx={{ py: 5, px: 3, display: 'flex' }}>\n        <Avatar\n          alt={participant.name}\n          src={participant.avatarUrl}\n          sx={{ width: 96, height: 96, mr: 3 }}\n        />\n\n        <Stack spacing={1}>\n          <Typography variant=\"caption\" sx={{ color: 'primary.main' }}>\n            {participant.role}\n          </Typography>\n\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n\n          <Stack direction=\"row\" sx={{ typography: 'caption', color: 'text.disabled' }}>\n            <Iconify\n              icon=\"mingcute:location-fill\"\n              width={16}\n              sx={{ flexShrink: 0, mr: 0.5, mt: '2px' }}\n            />\n            {participant.address}\n          </Stack>\n\n          <Stack spacing={1} direction=\"row\" sx={{ pt: 1.5 }}>\n            <IconButton\n              size=\"small\"\n              color=\"error\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.error.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:phone-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"info\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.info.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.info.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:chat-round-dots-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"primary\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.primary.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.primary.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"fluent:mail-24-filled\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"secondary\"\n              sx={{\n                borderRadius: 1,\n                bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.08),\n                '&:hover': {\n                  bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.16),\n                },\n              }}\n            >\n              <Iconify width={18} icon=\"solar:videocamera-record-bold\" />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nChatRoomParticipantDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  participant: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n//\nimport ChatRoomParticipantDialog from './chat-room-participant-dialog';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomGroup({ participants }) {\n  const [selected, setSelected] = useState(null);\n\n  const collapse = useBoolean(true);\n\n  const handleOpen = useCallback((participant) => {\n    setSelected(participant);\n  }, []);\n\n  const handleClose = () => {\n    setSelected(null);\n  };\n\n  const totalParticipants = participants.length;\n\n  const renderBtn = (\n    <ListItemButton\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        In room ({totalParticipants})\n      </Box>\n      <Iconify\n        width={16}\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Scrollbar sx={{ height: 56 * 4 }}>\n      {participants.map((participant) => (\n        <ListItemButton key={participant.id} onClick={() => handleOpen(participant)}>\n          <Badge\n            variant={participant.status}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          >\n            <Avatar alt={participant.name} src={participant.avatarUrl} />\n          </Badge>\n\n          <ListItemText\n            sx={{ ml: 2 }}\n            primary={participant.name}\n            secondary={participant.role}\n            primaryTypographyProps={{\n              noWrap: true,\n              typography: 'subtitle2',\n            }}\n            secondaryTypographyProps={{\n              noWrap: true,\n              component: 'span',\n              typography: 'caption',\n            }}\n          />\n        </ListItemButton>\n      ))}\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {renderBtn}\n\n      <div>\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\n      </div>\n\n      {selected && (\n        <ChatRoomParticipantDialog participant={selected} open={!!selected} onClose={handleClose} />\n      )}\n    </>\n  );\n}\n\nChatRoomGroup.propTypes = {\n  participants: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomSingle({ participant }) {\n  const collapse = useBoolean(true);\n\n  const { name, avatarUrl, role, address, phoneNumber, email } = participant;\n\n  const renderInfo = (\n    <Stack alignItems=\"center\" sx={{ py: 5 }}>\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 96, height: 96, mb: 2 }} />\n      <Typography variant=\"subtitle1\">{name}</Typography>\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 0.5 }}>\n        {role}\n      </Typography>\n    </Stack>\n  );\n\n  const renderBtn = (\n    <ListItemButton\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        Information\n      </Box>\n      <Iconify\n        width={16}\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Stack\n      spacing={2}\n      sx={{\n        px: 2,\n        py: 2.5,\n        '& svg': {\n          mr: 1,\n          flexShrink: 0,\n          color: 'text.disabled',\n        },\n      }}\n    >\n      <Stack direction=\"row\">\n        <Iconify icon=\"mingcute:location-fill\" />\n        <Typography variant=\"body2\">{address}</Typography>\n      </Stack>\n\n      <Stack direction=\"row\">\n        <Iconify icon=\"solar:phone-bold\" />\n        <Typography variant=\"body2\">{phoneNumber}</Typography>\n      </Stack>\n\n      <Stack direction=\"row\">\n        <Iconify icon=\"fluent:mail-24-filled\" />\n        <Typography variant=\"body2\" noWrap>\n          {email}\n        </Typography>\n      </Stack>\n    </Stack>\n  );\n\n  return (\n    <>\n      {renderInfo}\n\n      {renderBtn}\n\n      <div>\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\n      </div>\n    </>\n  );\n}\n\nChatRoomSingle.propTypes = {\n  participant: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// utils\nimport { fDateTime } from 'src/utils/format-time';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport FileThumbnail from 'src/components/file-thumbnail';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomAttachments({ attachments }) {\n  const collapse = useBoolean(true);\n\n  const totalAttachments = attachments.length;\n\n  const renderBtn = (\n    <ListItemButton\n      disabled={!attachments.length}\n      onClick={collapse.onToggle}\n      sx={{\n        pl: 2.5,\n        pr: 1.5,\n        height: 40,\n        flexShrink: 0,\n        flexGrow: 'unset',\n        typography: 'overline',\n        color: 'text.secondary',\n        bgcolor: 'background.neutral',\n      }}\n    >\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\n        Attachments ({totalAttachments})\n      </Box>\n      <Iconify\n        width={16}\n        icon={\n          (!collapse.value && 'eva:arrow-ios-forward-fill') ||\n          (!attachments.length && 'eva:arrow-ios-forward-fill') ||\n          'eva:arrow-ios-downward-fill'\n        }\n      />\n    </ListItemButton>\n  );\n\n  const renderContent = (\n    <Scrollbar sx={{ px: 2, py: 2.5 }}>\n      {attachments.map((attachment, index) => (\n        <Stack\n          key={attachment.name + index}\n          spacing={1.5}\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{ mb: 2 }}\n        >\n          <Stack\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            sx={{\n              width: 40,\n              height: 40,\n              flexShrink: 0,\n              borderRadius: 1,\n              overflow: 'hidden',\n              position: 'relative',\n              backgroundColor: 'background.neutral',\n            }}\n          >\n            <FileThumbnail\n              imageView\n              file={attachment.preview}\n              onDownload={() => console.info('DOWNLOAD')}\n              sx={{ width: 28, height: 28 }}\n            />\n          </Stack>\n\n          <ListItemText\n            primary={attachment.name}\n            secondary={fDateTime(attachment.createdAt)}\n            primaryTypographyProps={{\n              noWrap: true,\n              typography: 'body2',\n            }}\n            secondaryTypographyProps={{\n              mt: 0.25,\n              noWrap: true,\n              component: 'span',\n              typography: 'caption',\n              color: 'text.disabled',\n            }}\n          />\n        </Stack>\n      ))}\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {renderBtn}\n\n      <Box\n        sx={{\n          overflow: 'hidden',\n          height: collapse.value ? 1 : 0,\n          transition: (theme) =>\n            theme.transitions.create(['height'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n        }}\n      >\n        {renderContent}\n      </Box>\n    </>\n  );\n}\n\nChatRoomAttachments.propTypes = {\n  attachments: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport uniq from 'lodash/uniq';\nimport flatten from 'lodash/flatten';\nimport { useEffect, useCallback } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\n// hooks\nimport { useResponsive } from 'src/hooks/use-responsive';\n// components\nimport Iconify from 'src/components/iconify';\n//\nimport { useCollapseNav } from './hooks';\nimport ChatRoomGroup from './chat-room-group';\nimport ChatRoomSingle from './chat-room-single';\nimport ChatRoomAttachments from './chat-room-attachments';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 240;\n\nexport default function ChatRoom({ participants, conversation }) {\n  const theme = useTheme();\n\n  const lgUp = useResponsive('up', 'lg');\n\n  const {\n    collapseDesktop,\n    onCloseDesktop,\n    onCollapseDesktop,\n    //\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n  } = useCollapseNav();\n\n  useEffect(() => {\n    if (!lgUp) {\n      onCloseDesktop();\n    }\n  }, [onCloseDesktop, lgUp]);\n\n  const handleToggleNav = useCallback(() => {\n    if (lgUp) {\n      onCollapseDesktop();\n    } else {\n      onOpenMobile();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lgUp]);\n\n  const group = participants.length > 1;\n\n  const attachments = uniq(flatten(conversation.messages.map((messages) => messages.attachments)));\n\n  const renderContent = (\n    <>\n      {group ? (\n        <ChatRoomGroup participants={participants} />\n      ) : (\n        <ChatRoomSingle participant={participants[0]} />\n      )}\n\n      <ChatRoomAttachments attachments={attachments} />\n    </>\n  );\n\n  const renderToggleBtn = (\n    <IconButton\n      onClick={handleToggleNav}\n      sx={{\n        top: 12,\n        right: 0,\n        zIndex: 9,\n        width: 32,\n        height: 32,\n        borderRight: 0,\n        position: 'absolute',\n        borderRadius: `12px 0 0 12px`,\n        boxShadow: theme.customShadows.z8,\n        bgcolor: theme.palette.background.paper,\n        border: `solid 1px ${theme.palette.divider}`,\n        '&:hover': {\n          bgcolor: theme.palette.background.neutral,\n        },\n        ...(lgUp && {\n          ...(!collapseDesktop && {\n            right: NAV_WIDTH,\n          }),\n        }),\n      }}\n    >\n      {lgUp ? (\n        <Iconify\n          width={16}\n          icon={collapseDesktop ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'}\n        />\n      ) : (\n        <Iconify width={16} icon=\"eva:arrow-ios-back-fill\" />\n      )}\n    </IconButton>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      {renderToggleBtn}\n\n      {lgUp ? (\n        <Stack\n          sx={{\n            height: 1,\n            flexShrink: 0,\n            width: NAV_WIDTH,\n            borderLeft: `solid 1px ${theme.palette.divider}`,\n            transition: theme.transitions.create(['width'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            ...(collapseDesktop && {\n              width: 0,\n            }),\n          }}\n        >\n          {!collapseDesktop && renderContent}\n        </Stack>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          open={openMobile}\n          onClose={onCloseMobile}\n          slotProps={{\n            backdrop: { invisible: true },\n          }}\n          PaperProps={{\n            sx: { width: NAV_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n\nChatRoom.propTypes = {\n  conversation: PropTypes.object,\n  participants: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// components\nimport Iconify from 'src/components/iconify';\n//\nimport { useGetMessage } from './hooks';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatMessageItem({ message, participants, onOpenLightbox }) {\n  const { user } = useMockedUser();\n\n  const { me, senderDetails, hasImage } = useGetMessage({\n    message,\n    participants,\n    currentUserId: `${user?.id}`,\n  });\n\n  const { firstName, avatarUrl } = senderDetails;\n\n  const { body, createdAt } = message;\n\n  const renderInfo = (\n    <Typography\n      noWrap\n      variant=\"caption\"\n      sx={{\n        mb: 1,\n        color: 'text.disabled',\n        ...(!me && {\n          mr: 'auto',\n        }),\n      }}\n    >\n      {!me && `${firstName},`} &nbsp;\n      {formatDistanceToNowStrict(new Date(createdAt), {\n        addSuffix: true,\n      })}\n    </Typography>\n  );\n\n  const renderBody = (\n    <Stack\n      sx={{\n        p: 1.5,\n        minWidth: 48,\n        maxWidth: 320,\n        borderRadius: 1,\n        typography: 'body2',\n        bgcolor: 'background.neutral',\n        ...(me && {\n          color: 'grey.800',\n          bgcolor: 'primary.lighter',\n        }),\n        ...(hasImage && {\n          p: 0,\n          bgcolor: 'transparent',\n        }),\n      }}\n    >\n      {hasImage ? (\n        <Box\n          component=\"img\"\n          alt=\"attachment\"\n          src={body}\n          onClick={() => onOpenLightbox(body)}\n          sx={{\n            minHeight: 220,\n            borderRadius: 1.5,\n            cursor: 'pointer',\n            '&:hover': {\n              opacity: 0.9,\n            },\n          }}\n        />\n      ) : (\n        body\n      )}\n    </Stack>\n  );\n\n  const renderActions = (\n    <Stack\n      direction=\"row\"\n      className=\"message-actions\"\n      sx={{\n        pt: 0.5,\n        opacity: 0,\n        top: '100%',\n        left: 0,\n        position: 'absolute',\n        transition: (theme) =>\n          theme.transitions.create(['opacity'], {\n            duration: theme.transitions.duration.shorter,\n          }),\n        ...(me && {\n          left: 'unset',\n          right: 0,\n        }),\n      }}\n    >\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:reply-bold\" width={16} />\n      </IconButton>\n      <IconButton size=\"small\">\n        <Iconify icon=\"eva:smiling-face-fill\" width={16} />\n      </IconButton>\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:trash-bin-trash-bold\" width={16} />\n      </IconButton>\n    </Stack>\n  );\n\n  return (\n    <Stack direction=\"row\" justifyContent={me ? 'flex-end' : 'unset'} sx={{ mb: 5 }}>\n      {!me && <Avatar alt={firstName} src={avatarUrl} sx={{ width: 32, height: 32, mr: 2 }} />}\n\n      <Stack alignItems=\"flex-end\">\n        {renderInfo}\n\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{\n            position: 'relative',\n            '&:hover': {\n              '& .message-actions': {\n                opacity: 1,\n              },\n            },\n          }}\n        >\n          {renderBody}\n          {renderActions}\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object,\n  onOpenLightbox: PropTypes.func,\n  participants: PropTypes.array,\n};\n","// ----------------------------------------------------------------------\n\nexport default function useGetMessage({ message, participants, currentUserId }) {\n  const sender = participants.find((participant) => participant.id === message.senderId);\n\n  const senderDetails =\n    message.senderId === currentUserId\n      ? {\n          type: 'me',\n        }\n      : {\n          avatarUrl: sender?.avatarUrl,\n          firstName: sender?.name.split(' ')[0],\n        };\n\n  const me = senderDetails.type === 'me';\n\n  const hasImage = message.contentType === 'image';\n\n  return {\n    hasImage,\n    me,\n    senderDetails,\n  };\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\n// components\nimport Scrollbar from 'src/components/scrollbar';\nimport Lightbox, { useLightBox } from 'src/components/lightbox';\n//\nimport { useMessagesScroll } from './hooks';\nimport ChatMessageItem from './chat-message-item';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatMessageList({ messages = [], participants }) {\n  const { messagesEndRef } = useMessagesScroll(messages);\n\n  const slides = messages\n    .filter((message) => message.contentType === 'image')\n    .map((message) => ({ src: message.body }));\n\n  const lightbox = useLightBox(slides);\n\n  return (\n    <>\n      <Scrollbar ref={messagesEndRef} sx={{ px: 3, py: 5, height: 1 }}>\n        <Box>\n          {messages.map((message) => (\n            <ChatMessageItem\n              key={message.id}\n              message={message}\n              participants={participants}\n              onOpenLightbox={() => lightbox.onOpen(message.body)}\n            />\n          ))}\n        </Box>\n      </Scrollbar>\n\n      <Lightbox\n        index={lightbox.selected}\n        slides={slides}\n        open={lightbox.open}\n        close={lightbox.onClose}\n      />\n    </>\n  );\n}\n\nChatMessageList.propTypes = {\n  messages: PropTypes.array,\n  participants: PropTypes.array,\n};\n","import { useCallback, useEffect, useRef } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useMessagesScroll(messages) {\n  const messagesEndRef = useRef(null);\n\n  const scrollMessagesToBottom = useCallback(() => {\n    if (!messages) {\n      return;\n    }\n\n    if (!messagesEndRef.current) {\n      return;\n    }\n\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(\n    () => {\n      scrollMessagesToBottom();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [messages]\n  );\n\n  return {\n    messagesEndRef,\n  };\n}\n","import PropTypes from 'prop-types';\nimport { sub } from 'date-fns';\nimport { useRef, useState, useCallback, useMemo } from 'react';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// utils\nimport uuidv4 from 'src/utils/uuidv4';\n// api\nimport { sendMessage, createConversation } from 'src/api/chat';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatMessageInput({\n  recipients,\n  onAddRecipients,\n  //\n  disabled,\n  selectedConversationId,\n}) {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const fileRef = useRef(null);\n\n  const [message, setMessage] = useState('');\n\n  const myContact = useMemo(\n    () => ({\n      id: `${user?.id}`,\n      role: `${user?.role}`,\n      email: `${user?.email}`,\n      address: `${user?.address}`,\n      name: `${user?.displayName}`,\n      lastActivity: new Date(),\n      avatarUrl: `${user?.photoURL}`,\n      phoneNumber: `${user?.phoneNumber}`,\n      status: 'online',\n    }),\n    [user]\n  );\n\n  const messageData = useMemo(\n    () => ({\n      id: uuidv4(),\n      attachments: [],\n      body: message,\n      contentType: 'text',\n      createdAt: sub(new Date(), { minutes: 1 }),\n      senderId: myContact.id,\n    }),\n    [message, myContact.id]\n  );\n\n  const conversationData = useMemo(\n    () => ({\n      id: uuidv4(),\n      messages: [messageData],\n      participants: [...recipients, myContact],\n      type: recipients.length > 1 ? 'GROUP' : 'ONE_TO_ONE',\n      unreadCount: 0,\n    }),\n    [messageData, myContact, recipients]\n  );\n\n  const handleAttach = useCallback(() => {\n    if (fileRef.current) {\n      fileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeMessage = useCallback((event) => {\n    setMessage(event.target.value);\n  }, []);\n\n  const handleSendMessage = useCallback(\n    async (event) => {\n      try {\n        if (event.key === 'Enter') {\n          if (message) {\n            if (selectedConversationId) {\n              await sendMessage(selectedConversationId, messageData);\n            } else {\n              const res = await createConversation(conversationData);\n\n              router.push(`${paths.dashboard.chat}?id=${res.conversation.id}`);\n\n              onAddRecipients([]);\n            }\n          }\n          setMessage('');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [conversationData, message, messageData, onAddRecipients, router, selectedConversationId]\n  );\n\n  return (\n    <>\n      <InputBase\n        value={message}\n        onKeyUp={handleSendMessage}\n        onChange={handleChangeMessage}\n        placeholder=\"Type a message\"\n        disabled={disabled}\n        startAdornment={\n          <IconButton>\n            <Iconify icon=\"eva:smiling-face-fill\" />\n          </IconButton>\n        }\n        endAdornment={\n          <Stack direction=\"row\" sx={{ flexShrink: 0 }}>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"solar:gallery-add-bold\" />\n            </IconButton>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n            <IconButton>\n              <Iconify icon=\"solar:microphone-bold\" />\n            </IconButton>\n          </Stack>\n        }\n        sx={{\n          px: 1,\n          height: 56,\n          flexShrink: 0,\n          borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n        }}\n      />\n\n      <input type=\"file\" ref={fileRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  onAddRecipients: PropTypes.func,\n  recipients: PropTypes.array,\n  selectedConversationId: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n// utils\nimport { fToNow } from 'src/utils/format-time';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatHeaderDetail({ participants }) {\n  const group = participants.length > 1;\n\n  const singleParticipant = participants[0];\n\n  const renderGroup = (\n    <AvatarGroup\n      max={3}\n      sx={{\n        [`& .${avatarGroupClasses.avatar}`]: {\n          width: 32,\n          height: 32,\n        },\n      }}\n    >\n      {participants.map((participant) => (\n        <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n      ))}\n    </AvatarGroup>\n  );\n\n  const renderSingle = (\n    <Stack flexGrow={1} direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Badge\n        variant={singleParticipant.status}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Avatar src={singleParticipant.avatarUrl} alt={singleParticipant.name} />\n      </Badge>\n\n      <ListItemText\n        primary={singleParticipant.name}\n        secondary={\n          singleParticipant.status === 'offline'\n            ? fToNow(singleParticipant.lastActivity)\n            : singleParticipant.status\n        }\n        secondaryTypographyProps={{\n          component: 'span',\n          ...(singleParticipant.status !== 'offline' && {\n            textTransform: 'capitalize',\n          }),\n        }}\n      />\n    </Stack>\n  );\n\n  return (\n    <>\n      {group ? renderGroup : renderSingle}\n\n      <Stack flexGrow={1} />\n\n      <IconButton>\n        <Iconify icon=\"solar:phone-bold\" />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"solar:videocamera-record-bold\" />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    </>\n  );\n}\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Autocomplete from '@mui/material/Autocomplete';\n// components\nimport Iconify from 'src/components/iconify';\nimport SearchNotFound from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatHeaderCompose({ contacts, onAddRecipients }) {\n  const [searchRecipients, setSearchRecipients] = useState('');\n\n  const handleAddRecipients = useCallback(\n    (selected) => {\n      setSearchRecipients('');\n      onAddRecipients(selected);\n    },\n    [onAddRecipients]\n  );\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.primary', mr: 2 }}>\n        To:\n      </Typography>\n\n      <Autocomplete\n        sx={{ minWidth: 320 }}\n        multiple\n        limitTags={3}\n        popupIcon={null}\n        disableCloseOnSelect\n        noOptionsText={<SearchNotFound query={searchRecipients} />}\n        onChange={(event, newValue) => handleAddRecipients(newValue)}\n        onInputChange={(event, newValue) => setSearchRecipients(newValue)}\n        options={contacts}\n        getOptionLabel={(recipient) => recipient.name}\n        isOptionEqualToValue={(option, value) => option.id === value.id}\n        renderInput={(params) => <TextField {...params} placeholder=\"+ Recipients\" />}\n        renderOption={(props, recipient, { selected }) => (\n          <li {...props} key={recipient.id}>\n            <Box\n              key={recipient.id}\n              sx={{\n                mr: 1,\n                width: 32,\n                height: 32,\n                overflow: 'hidden',\n                borderRadius: '50%',\n                position: 'relative',\n              }}\n            >\n              <Avatar alt={recipient.name} src={recipient.avatarUrl} sx={{ width: 1, height: 1 }} />\n              <Stack\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{\n                  top: 0,\n                  left: 0,\n                  width: 1,\n                  height: 1,\n                  opacity: 0,\n                  position: 'absolute',\n                  bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                  transition: (theme) =>\n                    theme.transitions.create(['opacity'], {\n                      easing: theme.transitions.easing.easeInOut,\n                      duration: theme.transitions.duration.shorter,\n                    }),\n                  ...(selected && {\n                    opacity: 1,\n                    color: 'primary.main',\n                  }),\n                }}\n              >\n                <Iconify icon=\"eva:checkmark-fill\" />\n              </Stack>\n            </Box>\n\n            {recipient.name}\n          </li>\n        )}\n        renderTags={(selected, getTagProps) =>\n          selected.map((recipient, index) => (\n            <Chip\n              {...getTagProps({ index })}\n              key={recipient.id}\n              label={recipient.name}\n              avatar={<Avatar alt={recipient.name} src={recipient.avatarUrl} />}\n              size=\"small\"\n              variant=\"soft\"\n            />\n          ))\n        }\n      />\n    </>\n  );\n}\n\nChatHeaderCompose.propTypes = {\n  contacts: PropTypes.array,\n  onAddRecipients: PropTypes.func,\n};\n","import { useEffect, useState, useCallback } from 'react';\n// @mui\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\n// hooks\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\n// api\nimport { useGetContacts, useGetConversation, useGetConversations } from 'src/api/chat';\n// components\nimport { useSettingsContext } from 'src/components/settings';\n//\nimport ChatNav from '../chat-nav';\nimport ChatRoom from '../chat-room';\nimport ChatMessageList from '../chat-message-list';\nimport ChatMessageInput from '../chat-message-input';\nimport ChatHeaderDetail from '../chat-header-detail';\nimport ChatHeaderCompose from '../chat-header-compose';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatView() {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const settings = useSettingsContext();\n\n  const searchParams = useSearchParams();\n\n  const selectedConversationId = searchParams.get('id') || '';\n\n  const [recipients, setRecipients] = useState([]);\n\n  const { contacts } = useGetContacts();\n\n  const { conversations, conversationsLoading } = useGetConversations();\n\n  const { conversation, conversationError } = useGetConversation(`${selectedConversationId}`);\n\n  const participants = conversation\n    ? conversation.participants.filter((participant) => participant.id !== `${user.id}`)\n    : [];\n\n  useEffect(() => {\n    if (conversationError || !selectedConversationId) {\n      router.push(paths.dashboard.chat);\n    }\n  }, [conversationError, router, selectedConversationId]);\n\n  const handleAddRecipients = useCallback((selected) => {\n    setRecipients(selected);\n  }, []);\n\n  const details = !!conversation;\n\n  const renderHead = (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      flexShrink={0}\n      sx={{ pr: 1, pl: 2.5, py: 1, minHeight: 72 }}\n    >\n      {selectedConversationId ? (\n        <>{details && <ChatHeaderDetail participants={participants} />}</>\n      ) : (\n        <ChatHeaderCompose contacts={contacts} onAddRecipients={handleAddRecipients} />\n      )}\n    </Stack>\n  );\n\n  const renderNav = (\n    <ChatNav\n      contacts={contacts}\n      conversations={conversations}\n      loading={conversationsLoading}\n      selectedConversationId={selectedConversationId}\n    />\n  );\n\n  const renderMessages = (\n    <Stack\n      sx={{\n        width: 1,\n        height: 1,\n        overflow: 'hidden',\n      }}\n    >\n      <ChatMessageList messages={conversation?.messages} participants={participants} />\n\n      <ChatMessageInput\n        recipients={recipients}\n        onAddRecipients={handleAddRecipients}\n        //\n        selectedConversationId={selectedConversationId}\n        disabled={!recipients.length && !selectedConversationId}\n      />\n    </Stack>\n  );\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography\n        variant=\"h4\"\n        sx={{\n          mb: { xs: 3, md: 5 },\n        }}\n      >\n        Chat\n      </Typography>\n\n      <Stack component={Card} direction=\"row\" sx={{ height: '72vh' }}>\n        {renderNav}\n\n        <Stack\n          sx={{\n            width: 1,\n            height: 1,\n            overflow: 'hidden',\n          }}\n        >\n          {renderHead}\n\n          <Stack\n            direction=\"row\"\n            sx={{\n              width: 1,\n              height: 1,\n              overflow: 'hidden',\n              borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n            }}\n          >\n            {renderMessages}\n\n            {details && <ChatRoom conversation={conversation} participants={participants} />}\n          </Stack>\n        </Stack>\n      </Stack>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport { ChatView } from 'src/sections/chat/view';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Chat</title>\n      </Helmet>\n\n      <ChatView />\n    </>\n  );\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n"],"names":["useLightBox","slides","_useState","useState","_useState2","_slicedToArray","selected","setSelected","open","onOpen","useCallback","slideUrl","slideIndex","findIndex","slide","type","poster","src","onClose","StyledLightbox","theme","useTheme","_jsx","GlobalStyles","styles","alpha","palette","grey","fontSize","typography","h5","fontWeight","lineHeight","body2","filter","opacity","backgroundColor","common","black","ICON_SIZE","Lightbox","_ref","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","other","_objectWithoutProperties","_excluded","totalItems","length","_jsxs","_Fragment","children","ReactLightbox","_objectSpread","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","_ref2","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","width","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","_ref3","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","_ref4","currentIndex","useLightboxState","Box","component","className","sx","alignItems","display","justifyContent","options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","sendMessage","_x","_x2","_sendMessage","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conversationId","messageData","CONVERSATIONS_URL","CONVERSATION_URL","wrap","_context","prev","next","endpoints","chat","params","endpoint","mutate","currentData","currentConversation","conversation","messages","concat","_toConsumableArray","conversations","map","id","stop","createConversation","_x3","_createConversation","_callee2","conversationData","URL","data","res","_context2","axios","post","sent","abrupt","clickConversation","_x4","_clickConversation","_callee3","_context3","unreadCount","useCollapseNav","openMobile","setOpenMobile","_useState3","_useState4","collapseDesktop","setCollapseDesktop","onCollapseDesktop","onCloseDesktop","onOpenMobile","onCloseMobile","ChatNavItem","collapse","user","useMockedUser","mdUp","useResponsive","router","useRouter","_useGetNavItem","currentUserId","participantsInConversation","participants","participant","lastMessage","group","displayName","name","join","hasOnlineInGroup","item","status","includes","displayText","sender","senderId","message","contentType","body","lastActivity","createdAt","useGetNavItem","singleParticipant","avatarUrl","handleClickConversation","push","paths","dashboard","t0","console","error","renderGroup","Badge","variant","anchorOrigin","vertical","horizontal","AvatarGroup","height","slice","Avatar","alt","renderSingle","ListItemButton","disableGutters","onClick","py","px","bgcolor","color","overlap","badgeContent","ListItemText","ml","primary","primaryTypographyProps","noWrap","secondary","secondaryTypographyProps","Stack","Typography","mb","formatDistanceToNowStrict","Date","addSuffix","borderRadius","ChatNavAccount","popover","usePopover","setStatus","handleChangeStatus","event","target","value","photoURL","cursor","CustomPopover","arrow","p","direction","spacing","pr","pl","email","Tooltip","title","IconButton","Divider","borderStyle","MenuItem","_defineProperty","badgeClasses","badge","position","m","flexShrink","Select","native","fullWidth","onChange","input","InputBase","inputProps","textTransform","option","ChatNavItemSkeleton","Skeleton","flexGrow","ChatNavSearchResults","query","results","onClickResult","totalResults","notFound","SearchNotFound","mx","result","mr","NAV_WIDTH","NAV_COLLAPSE_WIDTH","ChatNav","loading","contacts","selectedConversationId","_useCollapseNav","searchContacts","setSearchContacts","useEffect","handleToggleNav","handleClickCompose","handleSearchContacts","inputValue","prevState","contact","toLowerCase","handleClickAwaySearch","handleClickResult","renderToggleBtn","left","top","zIndex","main","boxShadow","customShadows","contrastText","darker","renderSkeleton","Array","_","renderList","allIds","byId","renderListResults","renderSearchInput","ClickAwayListener","onClickAway","TextField","placeholder","InputProps","startAdornment","InputAdornment","mt","renderContent","pb","pt","Scrollbar","borderRight","divider","transition","transitions","create","duration","shorter","Drawer","slotProps","backdrop","invisible","PaperProps","ChatRoomParticipantDialog","Dialog","maxWidth","right","DialogContent","role","address","size","info","ChatRoomGroup","useBoolean","handleOpen","totalParticipants","renderBtn","onToggle","Collapse","in","ChatRoomSingle","phoneNumber","renderInfo","ChatRoomAttachments","attachments","totalAttachments","disabled","attachment","overflow","FileThumbnail","imageView","file","preview","onDownload","fDateTime","ChatRoom","lgUp","uniq","flatten","z8","background","paper","border","neutral","borderLeft","anchor","ChatMessageItem","onOpenLightbox","_useGetMessage","find","senderDetails","firstName","split","me","hasImage","useGetMessage","renderBody","minWidth","minHeight","renderActions","ChatMessageList","_ref$messages","_useMessagesScroll","messagesEndRef","useRef","scrollMessagesToBottom","current","scrollTop","scrollHeight","useMessagesScroll","lightbox","ref","close","ChatMessageInput","recipients","onAddRecipients","fileRef","setMessage","myContact","useMemo","uuidv4","sub","minutes","handleAttach","click","handleChangeMessage","handleSendMessage","key","onKeyUp","endAdornment","borderTop","style","ChatHeaderDetail","max","avatarGroupClasses","avatar","fToNow","ChatHeaderCompose","searchRecipients","setSearchRecipients","handleAddRecipients","Autocomplete","multiple","limitTags","popupIcon","disableCloseOnSelect","noOptionsText","newValue","onInputChange","getOptionLabel","recipient","isOptionEqualToValue","renderInput","renderOption","props","_createElement","easing","easeInOut","renderTags","getTagProps","Chip","label","ChatView","settings","useSettingsContext","useSearchParams","get","setRecipients","_useSWR","useSWR","fetcher","isLoading","isValidating","contactsLoading","contactsError","contactsValidating","contactsEmpty","useGetContacts","_useGetConversations","_useSWR2","keyBy","Object","keys","conversationsLoading","conversationsError","conversationsValidating","conversationsEmpty","useGetConversations","_useGetConversation","_useSWR3","conversationLoading","conversationError","conversationValidating","useGetConversation","details","renderHead","renderNav","renderMessages","Container","themeStretch","xs","md","Card","ChatPage","Helmet","replace","c","r","Math","random","toString"],"sourceRoot":""}