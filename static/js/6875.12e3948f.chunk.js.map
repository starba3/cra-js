{"version":3,"file":"static/js/6875.12e3948f.chunk.js","mappings":"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","sources":["data-access/customers.js","data-access/users.js","screens/components/user/all/userTableRow.js","screens/components/user/all/userTableToolbar.js","screens/components/user/all/userListView.js","screens/user/all/UserListView.js","sections/invoice/invoice-table-filters-result.js"],"sourcesContent":["const baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\nexport async function getAllCustomers() {\r\n    let list = [];\r\n    await fetch(`${baseUrl}/customer`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices;\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n\r\n}\r\n\r\nexport async function GetAllCustomersWithAll() {\r\n\r\n    const list = [{\r\n        \"id\": \"0\",\r\n        \"customerCode\": \"All\",\r\n        \"customerNameEn\": \"All\",\r\n        \"customerNameAr\": \"All\",\r\n    }];\r\n    await fetch(`${baseUrl}/customer`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n\r\n        // Add all invoices to the list\r\n        list.push(...invoices);\r\n    })\r\n    .catch(error => console.log())\r\n    console.log('List: '. list);\r\n    return list\r\n\r\n}\r\n\r\nexport async function getSalesPersonList() {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/User/UsersNameByRole/sales`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n\r\n}\r\n\r\nexport async  function getCustomerById(id) {\r\n    try {\r\n        const response = await fetch(`${baseUrl}/Customer/${id}`, {\r\n            mode: 'cors'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const invoice = await response.json();\r\n            return invoice;\r\n        } \r\n            // Handle non-successful response here if needed.\r\n            console.error(`Failed to fetch invoice: ${response.status} - ${response.statusText}`);\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return {}; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport async function deleteCustomer(id) {\r\n    let success = true;\r\n    await fetch(`${baseUrl}/Customer/${id}/Delete`, {\r\n        mode:'cors',\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        Cache: 'default'\r\n    })\r\n    .then(res => {\r\n        // Check if the status code is 200 or 204\r\n        if (res.ok) {\r\n          // Check if the status code is 200 or 204\r\n          if (res.status === 204) {\r\n            return null; // Handle 204 No Content\r\n          }  if (res.status === 200) {\r\n            return res.json(); // Parse JSON for other successful responses\r\n          } \r\n\r\n          throw new Error(`Unexpected status code: ${res.status}`);\r\n          \r\n        } \r\n\r\n        throw new Error('Network response was not ok');\r\n      })\r\n    .then(invoices => {\r\n        console.log(\"Deleted successfuly\")\r\n    })\r\n    .catch(error => {\r\n        console.log(error) \r\n        success = false;\r\n    })\r\n\r\n    return success;\r\n}","const baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\nexport async function getUsersByRole(role) {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/User/UsersNameByRole/${role}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getAllUsers() {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/User`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getInvoicesForUser(id) {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/Invoices/GetInvoicesForUser?User=${id}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getUsersRoles() {\r\n    const roles = [{\r\n        \"id\": \"0\",\r\n        \"name\": \"All\",\r\n    }];\r\n    \r\n    await fetch(`${baseUrl}/api/User/roles`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        roles.push(...res);\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return roles\r\n}","import PropTypes from 'prop-types';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n  handleOpenInquiry,\r\n}) {\r\n  const { id, firstName, lastName, userName, roles } = row;\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const concatRoles = roles.reduce((acc, role) => `${acc}, ${role} `, '').slice(1, -1);\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover >\r\n        \r\n        <TableCell >{firstName}</TableCell>\r\n        \r\n        <TableCell >{lastName}</TableCell>\r\n\r\n        <TableCell >{userName}</TableCell>\r\n\r\n        <TableCell >{concatRoles}</TableCell>\r\n\r\n        {/* <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell> */}\r\n\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          {Translate(\"edit\")}\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: 'solid' }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          {Translate(\"delete\")}\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title={Translate(\"delete\")}\r\n        content={Translate(\"deleteDialogContent\")}\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={() => {\r\n            console.log(\"Delete clicked\");\r\n            onDeleteRow();\r\n            confirm.onFalse()\r\n          }}>\r\n            {Translate(\"delete\")}\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  handleOpenInquiry: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\nexport default function UserTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  departmentOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterDepartment = useCallback(\r\n    (value) => {\r\n      onFilters('departments', value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const { t } = useLocales();\r\n  const Translate = (text) => t(text);\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n      \r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <FormControl\r\n            sx={{\r\n              flexShrink: 0,\r\n              width: { xs: 1, md: 180 },\r\n            }}\r\n          >\r\n            <InputLabel>{Translate(\"departments\")}</InputLabel>\r\n\r\n            <Select\r\n              multiple\r\n              value={filters.departments}\r\n              onChange={(event) => {\r\n                  const allItems = departmentOptions;\r\n                  const selected = event.target.value;\r\n                  const lastIndex = selected.length - 1;\r\n                  const lastSelectedItem = selected[lastIndex];\r\n\r\n                  console.log(selected);\r\n\r\n                  if (selected[lastIndex] === \"All\") { // Selected All\r\n                    handleFilterDepartment(allItems);\r\n                  } else if(selected[0] === \"All\"){ // Selected All previously then deselected other value\r\n                    handleFilterDepartment(selected.slice(1));\r\n                  } else if(selected === allItems.slice(1)){ // Selected All previously then deselected All\r\n                    handleFilterDepartment([]);\r\n                  } else  {\r\n                    handleFilterDepartment(selected);\r\n                  }\r\n                  // handleFilterDepartment(event);\r\n                }\r\n              }\r\n              input={<OutlinedInput label={Translate(\"departments\")} />}\r\n              renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n              sx={{ textTransform: 'capitalize' }}\r\n            >\r\n              {departmentOptions.map((option, index) => (\r\n                <MenuItem key={index} value={option}>\r\n                  <Checkbox disableRipple size=\"small\" checked={filters.departments.includes(option)} />\r\n                  {index === 0 ? Translate('all') : option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder={Translate(\"searchCustomerName\")}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          {/* <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton> */}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover> */}\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableToolbar.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  departmentOptions: PropTypes.array,\r\n};\r\n","import * as React from 'react';\r\nimport { useLocales } from 'src/locales';\r\nimport { useState, useCallback, useEffect } from 'react';\r\n// @mui\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider  from '@mui/material/Divider';\r\nimport Button from '@mui/material/Button';\r\n\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n\r\n// DATA ACCESS\r\nimport { getAllInvoices } from 'src/data-access/invoice'\r\n\r\nimport { _departments } from 'src/lists/departments'\r\nimport { _statusList } from 'src/lists/paidStatus'\r\nimport { getAllCustomers, deleteCustomer } from 'src/data-access/customers';\r\nimport { getAllUsers, getUsersRoles } from 'src/data-access/users';\r\n//\r\nimport InvoiceTableFiltersResult from 'src/sections/invoice/invoice-table-filters-result';\r\nimport UserTableRow from './userTableRow';\r\nimport UserTableToolbar from './userTableToolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  service: [],\r\n  paidStatus: [],\r\n  departments: [],\r\n  status: 'all',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserListView() {\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [userRoles, setUserRoles] = useState([]);\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const result = await getAllUsers();\r\n        setTableData(result);\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching customers:', error);\r\n      }\r\n    };\r\n\r\n    const fetchRoles = async () => {\r\n      try {\r\n        const result = await getUsersRoles();\r\n        setUserRoles(result);\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching customers:', error);\r\n      }\r\n    };\r\n\r\n    fetchRoles();\r\n    fetchUsers();\r\n    \r\n  }, []);\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'firstName', label: Translate(\"firstName\")  },\r\n    { id: 'lastName', label: Translate(\"lastName\")  },\r\n    { id: 'userName', label: Translate(\"userName\")  },\r\n    { id: 'roles', label: Translate(\"roles\")  },\r\n  ];\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const handleRefresh = () => {\r\n    setRefreshKey((prevKey) => prevKey + 1);\r\n  };\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    !!filters.service.length ||\r\n    filters.status !== 'all' ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  // const handleDeleteRow = useCallback(\r\n  //   (id) => {\r\n  //     const deleteRow = tableData.filter((row) => row.id !== id);\r\n  //     setTableData(deleteRow);\r\n\r\n  //     table.onUpdatePageDeleteRow(dataInPage.length);\r\n  //   },\r\n  //   [dataInPage.length, table, tableData]\r\n  // );\r\n\r\n  const handleDeleteRow = (id) => {\r\n    let success = true;\r\n    const deleteData = async () => {\r\n      try {\r\n        success = await deleteCustomer(id);          \r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      } \r\n      console.log(\"Success status: \", success);\r\n      if (success) {\r\n        // Fetch data only if deletion was successful\r\n        try {\r\n          const result = await getAllInvoices();\r\n          setTableData(result);\r\n        } catch (error) {\r\n          console.error('Error fetching invoices:', error);\r\n        }\r\n    \r\n        // Update refresh state after fetching data\r\n        setRefresh(!refresh);\r\n      }\r\n    };\r\n    \r\n    deleteData();\r\n};\r\n\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      console.log(paths.customers.edit(id));\r\n      router.push(paths.customers.edit(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\"List\"\r\n          links={[\r\n            {\r\n              name: Translate(\"app\"),\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: Translate(\"customer\"),\r\n              \r\n            },\r\n            {\r\n              name: Translate(\"list\"),\r\n            },\r\n          ]}\r\n          action= {\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <Button\r\n                onClick={() => navigate(paths.customers.create)}\r\n                variant=\"contained\"\r\n                startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n              >\r\n                {Translate(\"newCustomer\")}\r\n              </Button>\r\n              \r\n          </Stack>\r\n            \r\n          }\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card>\r\n          <UserTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            departmentOptions={userRoles.map((option) => option.name)}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  // onSelectAllRows={(checked) =>\r\n                  //   table.onSelectAllRows(\r\n                  //     checked,\r\n                  //     tableData.map((row) => row.id)\r\n                  //   )\r\n                  // }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <UserTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        handleOpenInquiry={() => console.log(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n    \r\n  );\r\n}\r\n\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n    const { name, departments } = filters;\r\n  \r\n    const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n  \r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n  \r\n    inputData = stabilizedThis.map((el) => el[0]);\r\n  \r\n    if (name) {\r\n      inputData = inputData.filter(\r\n        (user) =>\r\n          user.firstName.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          user.lastName.indexOf(name.toLowerCase()) !== -1 ||\r\n          user.userName.toLowerCase().indexOf(name.toLowerCase()) !== -1 \r\n          \r\n          // invoice.invoiceTo.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n      );\r\n    }\r\n  \r\n    // if (status !== 'all') {\r\n    //   inputData = inputData.filter((invoice) => invoice.status === status);\r\n    // }\r\n  \r\n    // if (service.length) {\r\n    //   inputData = inputData.filter((invoice) =>\r\n    //     // service.map((serviceName) => serviceName.toLowerCase()).includes(invoice.department)\r\n    //     service.includes('All') || service.includes(invoice.department)\r\n    //   );\r\n    // }\r\n    \r\n    if (departments.length) {\r\n      inputData = inputData.filter((user) =>\r\n        user.roles.every(element => departments.includes(element)) || departments.includes('All')\r\n      )\r\n    }\r\n\r\n    // if (!dateError) {\r\n    //   if (startDate && endDate) {\r\n    //     inputData = inputData.filter(\r\n    //       (invoice) =>\r\n    //         fTimestamp(invoice.issueInvoiceDate) >= fTimestamp(startDate) &&\r\n    //         fTimestamp(invoice.issueInvoiceDate) <= fTimestamp(endDate)\r\n    //     );\r\n    //   }\r\n    // }\r\n  \r\n    return inputData;\r\n  }","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport  UserListView  from 'src/screens/components/user/all/userListView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserListViewMain() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Users List</title>\r\n      </Helmet>\r\n\r\n      <UserListView />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n// components\nimport Iconify from 'src/components/iconify';\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceTableFiltersResult({\n  filters,\n  onFilters,\n  //\n  onResetFilters,\n  //\n  results,\n  ...other\n}) {\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\n\n  const handleRemoveService = (inputValue) => {\n    const newValue = filters.service.filter((item) => item !== inputValue);\n    onFilters('service', newValue);\n  };\n\n  const handleRemoveStatus = () => {\n    onFilters('status', 'all');\n  };\n\n  const handleRemoveDate = () => {\n    onFilters('startDate', null);\n    onFilters('endDate', null);\n  };\n\n  return (\n    <Stack spacing={1.5} {...other}>\n      <Box sx={{ typography: 'body2' }}>\n        <strong>{results}</strong>\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\n          results found\n        </Box>\n      </Box>\n\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n        {!!filters.service.length && (\n          <Block label=\"Service:\">\n            {filters.service.map((item) => (\n              <Chip\n                key={item}\n                label={item}\n                size=\"small\"\n                onDelete={() => handleRemoveService(item)}\n              />\n            ))}\n          </Block>\n        )}\n\n        {filters.status !== 'all' && (\n          <Block label=\"Status:\">\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\n          </Block>\n        )}\n\n        {filters.startDate && filters.endDate && (\n          <Block label=\"Date:\">\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\n          </Block>\n        )}\n\n        <Button\n          color=\"error\"\n          onClick={onResetFilters}\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n        >\n          Clear\n        </Button>\n      </Stack>\n    </Stack>\n  );\n}\n\nInvoiceTableFiltersResult.propTypes = {\n  filters: PropTypes.object,\n  onFilters: PropTypes.func,\n  onResetFilters: PropTypes.func,\n  results: PropTypes.number,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Block({ label, children, sx, ...other }) {\n  return (\n    <Stack\n      component={Paper}\n      variant=\"outlined\"\n      spacing={1}\n      direction=\"row\"\n      sx={{\n        p: 1,\n        borderRadius: 1,\n        overflow: 'hidden',\n        borderStyle: 'dashed',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\n        {label}\n      </Box>\n\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {children}\n      </Stack>\n    </Stack>\n  );\n}\n\nBlock.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  sx: PropTypes.object,\n};\n"],"names":["baseUrl","getAllCustomers","_getAllCustomers","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","list","wrap","_context","prev","next","fetch","concat","mode","then","result","json","invoices","catch","error","console","log","abrupt","stop","GetAllCustomersWithAll","_GetAllCustomersWithAll","_callee2","_context2","push","_toConsumableArray","getSalesPersonList","_getSalesPersonList","_callee3","_context3","getCustomerById","_x","_getCustomerById","_callee4","id","response","invoice","_context4","sent","ok","status","statusText","t0","deleteCustomer","_x2","_deleteCustomer","_callee5","success","_context5","method","headers","Cache","res","Error","getUsersByRole","_getUsersByRole","role","users","getAllUsers","_getAllUsers","getInvoicesForUser","_getInvoicesForUser","getUsersRoles","_getUsersRoles","roles","UserTableRow","_ref","row","onEditRow","selected","onSelectRow","onViewRow","onDeleteRow","firstName","handleOpenInquiry","lastName","userName","t","useLocales","Translate","text","concatRoles","reduce","acc","slice","confirm","useBoolean","popover","usePopover","_jsxs","_Fragment","children","TableRow","hover","_jsx","TableCell","CustomPopover","open","onClose","arrow","sx","width","MenuItem","onClick","Iconify","icon","Divider","borderStyle","onTrue","color","ConfirmDialog","value","onFalse","title","content","action","Button","variant","UserTableToolbar","filters","onFilters","departmentOptions","handleFilterDepartment","useCallback","handleFilterName","event","target","Stack","spacing","alignItems","xs","md","direction","p","pr","flexGrow","FormControl","flexShrink","InputLabel","Select","multiple","departments","onChange","allItems","lastIndex","length","input","OutlinedInput","label","renderValue","map","join","textTransform","option","index","Checkbox","disableRipple","size","checked","includes","TextField","fullWidth","name","placeholder","InputProps","startAdornment","InputAdornment","position","defaultFilters","service","paidStatus","startDate","endDate","UserListView","settings","useSettingsContext","router","useRouter","table","useTable","defaultOrderBy","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","tableData","setTableData","_useState3","_useState4","userRoles","setUserRoles","_useState5","_useState6","setFilters","_useState7","_useState8","refresh","setRefresh","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","useEffect","fetchUsers","fetchRoles","_ref2","TABLE_HEAD","dateError","getTime","dataFiltered","_ref4","inputData","comparator","stabilizedThis","el","sort","a","b","order","filter","user","toLowerCase","indexOf","every","element","applyFilter","getComparator","orderBy","denseHeight","page","rowsPerPage","dense","canReset","notFound","handleFilters","onResetPage","prevState","_objectSpread","_defineProperty","handleEditRow","paths","customers","edit","handleViewRow","dashboard","details","handleResetFilters","Container","maxWidth","themeStretch","CustomBreadcrumbs","heading","links","href","root","divider","orientation","flexItem","py","create","startIcon","mb","Card","InvoiceTableFiltersResult","onResetFilters","results","pt","TableContainer","overflow","Scrollbar","Table","minWidth","TableHeadCustom","headLabel","rowCount","numSelected","onSort","TableBody","deleteData","_ref3","getAllInvoices","t1","handleDeleteRow","TableEmptyRows","height","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","UserListViewMain","Helmet","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","Box","typography","component","ml","flexWrap","Block","item","Chip","onDelete","inputValue","newValue","handleRemoveService","_excluded2","Paper","borderRadius"],"sourceRoot":""}