{"version":3,"file":"static/js/4926.49a8915c.chunk.js","mappings":"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","sources":["data-access/invoice.js","data-access/users.js","screens/components/reports/invoiceForCustomers/customersListDialog.js","screens/components/reports/invoiceByUsers/InvoiceTableToolbar.js","screens/components/reports/invoiceByUsers/tableRow.js","screens/components/reports/invoiceByUsers/usersListDialog.js","screens/components/reports/invoiceByUsers/invoiceByUserView.js","screens/reports/invoiceByUsers.js"],"sourcesContent":["\r\nimport { result } from \"lodash\";\r\nimport { paths } from \"src/routes/paths\"\r\n\r\nconst baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\n\r\nexport async function getAllInvoices() {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/invoices`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async function getInvoicesByDepartment(id) {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/Invoices/Department/${id}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async function getInvoicesBySalesConfirmation(confirmStatus) {\r\n    let list = []\r\n    let url = '';\r\n    if(confirmStatus) {\r\n        url = `${baseUrl}/api/Invoices/GetInvoicesBySalesConfirmation?salesConfirm=${confirmStatus}`;\r\n    }\r\n    else {\r\n        url = `${baseUrl}/api/Invoices/NotConfirmedBySales`;\r\n    }\r\n    \r\n    await fetch(url, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async  function getInvoicesById(id) {\r\n    try {\r\n        const response = await fetch(`${baseUrl}/api/invoices/${id}`, {\r\n            mode: 'cors'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const invoice = await response.json();\r\n            return invoice;\r\n        } \r\n            // Handle non-successful response here if needed.\r\n            console.error(`Failed to fetch invoice: ${response.status} - ${response.statusText}`);\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return {}; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceEditUrl(departmentId, invoiceId) {\r\n\r\n    let url = ''\r\n    switch (departmentId) {\r\n        case -1:\r\n        case 0:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Operation`\r\n            break;\r\n        case 1:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/installation`\r\n            break;\r\n        case 2:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Sales`\r\n            break;\r\n        case 3:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Collection`\r\n            break;   \r\n        case 4:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/TenderAndContracts`\r\n            break;     \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return url; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceRedirectUrl(departmentId) {\r\n\r\n    let url = ''\r\n    switch (departmentId) {\r\n        case -1:\r\n        case 0:\r\n            url = paths.departments.operation.list;\r\n            break;\r\n        case 1:\r\n            url = paths.departments.installation.list;\r\n            break;\r\n        case 2:\r\n            url = paths.departments.sales.list;\r\n            break;\r\n        case 3:\r\n            url = paths.departments.collection.list;\r\n            break;   \r\n        case 4:\r\n            url = paths.departments.tenderAndConract.list;\r\n            break;     \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return url; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceImportUrl() {\r\n\r\n    const url = `${baseUrl}/api/ExcelImport/import-invoices`\r\n    return url; \r\n    \r\n}\r\n\r\nexport function getAddAttachmentUrl(id) {\r\n\r\n    const url = `${baseUrl}/api/Attachments/${id}`\r\n    return url; \r\n    \r\n}\r\n\r\nexport async function getCollectionData() {\r\n    let list = [];\r\n    await fetch(`${baseUrl}/api/CollectionData`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list;\r\n}\r\n\r\nexport async function getInvoiceInquiryData(id) {\r\n    let data = {};\r\n    console.log(`${baseUrl}/api/Invoices/${id}/Inquiry`);\r\n    await fetch(`${baseUrl}/api/Invoices/${id}/Inquiry`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        data = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return data;\r\n}\r\n\r\nexport async function getInvoiceForCustomers(customers) {\r\n    let list = [];\r\n\r\n    if(!customers)\r\n        return list;\r\n\r\n    const queryData = customers.reduce((acc, customer) => `${acc}customerIds=${customer}&`, '');\r\n    // queryData = queryData.slice(-1);\r\n\r\n    await fetch(`${baseUrl}/api/Invoices/GetInvoicesForCustomers?${queryData}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices;\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n        list = [];\r\n        \r\n    })\r\n\r\n    console.log('Result: ', list)\r\n   \r\n\r\n    return list;\r\n}\r\n\r\nexport async function deleteInvoice(id) {\r\n    let success = true;\r\n    await fetch(`${baseUrl}/api/Invoices/${id}/Delete`, {\r\n        mode:'cors',\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        Cache: 'default'\r\n    })\r\n    .then(res => {\r\n        // Check if the status code is 200 or 204\r\n        if (res.ok) {\r\n          // Check if the status code is 200 or 204\r\n          if (res.status === 204) {\r\n            return null; // Handle 204 No Content\r\n          }  if (res.status === 200) {\r\n            return res.json(); // Parse JSON for other successful responses\r\n          } \r\n\r\n          throw new Error(`Unexpected status code: ${res.status}`);\r\n          \r\n        } \r\n\r\n        throw new Error('Network response was not ok');\r\n      })\r\n    .then(invoices => {\r\n        console.log(\"Deleted successfuly\")\r\n    })\r\n    .catch(error => {\r\n        console.log(error) \r\n        success = false;\r\n    })\r\n\r\n    return success;\r\n}","const baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\nexport async function getUsersByRole(role) {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/User/UsersNameByRole/${role}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getAllUsers() {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/User`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getInvoicesForUser(id) {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/Invoices/GetInvoicesForUser?User=${id}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getUsersRoles() {\r\n    const roles = [{\r\n        \"id\": \"0\",\r\n        \"name\": \"All\",\r\n    }];\r\n    \r\n    await fetch(`${baseUrl}/api/User/roles`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        roles.push(...res);\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return roles\r\n}","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomersListDialog({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n  \r\n  const [searchAddress, setSearchAddress] = useState('');\r\n  const [selectedCustomer, setSelectedCustomers] = useState(['']);  \r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [ onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address, index) => (\r\n        <Stack\r\n         \r\n          key={index}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\">{Translate(\"code\")}: {address.customerCode}</Typography>\r\n\r\n            {/* {address.primary && <Label color=\"info\">Default</Label>} */}\r\n          </Stack>\r\n\r\n          {/* {address.company && (\r\n            <Box sx={{ color: 'primary.main', typography: 'caption' }}>{address.company}</Box>\r\n          )} */}\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"nameEnglish\")}: {address.customerNameEn}\r\n          </Typography>\r\n\r\n          \r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"nameArabic\")}: {address.customerNameAr}\r\n          </Typography>\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        \r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder={Translate(\"searchCustomer\")}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n      \r\n      {action && action}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nCustomersListDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.customerCode.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameEn.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameAr.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useLocales } from 'src/locales';\r\n\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  onChange,\r\n  users,\r\n  handleOpen,\r\n  selectedCustomers,\r\n}) {\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  return (\r\n    <Stack\r\n      spacing={2}\r\n      alignItems={{ xs: 'flex-end', md: 'center' }}\r\n      justifyContent=\"flex-end\"\r\n      direction={{\r\n        xs: 'column',\r\n        md: 'row',\r\n      }}\r\n      sx={{\r\n        p: 2.5,\r\n        pr: { xs: 2.5, md: 1 },\r\n      }}\r\n    >\r\n\r\n\r\n    \r\n\r\n       <Button \r\n        variant='contained'\r\n        color='success'\r\n        endIcon={<Iconify icon=\"mdi:search\" />}\r\n        onClick={handleOpen}\r\n       >\r\n        {Translate(\"searchUsers\")}\r\n      </Button> \r\n\r\n  </Stack>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  onChange: PropTypes.func,\r\n  handleOpen: PropTypes.func,\r\n  users: PropTypes.array.isRequired,\r\n  selectedCustomers: PropTypes.array\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useLocales } from 'src/locales';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\n// hooks\r\n// utils\r\n// components\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableRowNew({\r\n  row,\r\n  selected,\r\n  isPercentage,\r\n}) {\r\n  const { id, invoiceNo, issueInvoiceDate, invoiceAmount, daysToCollected, customerNameEn, customerNameAr, productNameEn, productNameAr, paidStatus, department } = row;\r\n\r\n  const { currentLang } = useLocales();\r\n\r\n  const customerName = currentLang.value === 'ar' ? customerNameAr : customerNameEn;\r\n  const productName = currentLang.value === 'ar' ? productNameAr : productNameEn;\r\n\r\n\r\n  return (\r\n    <TableRow hover selected={selected}>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={customerName} sx={{ mr: 2 }}>\r\n            {customerName.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {customerName}\r\n              </Typography>\r\n            }\r\n            // secondary={\r\n            //   <Link\r\n            //     noWrap\r\n            //     variant=\"body2\"\r\n            //     onClick={onViewRow}\r\n            //     sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n            //   >\r\n            //     {invoiceNo}\r\n            //   </Link>\r\n            // }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(issueInvoiceDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(issueInvoiceDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell >{daysToCollected}</TableCell>\r\n        \r\n        <TableCell >${invoiceAmount}</TableCell>\r\n\r\n\r\n        <TableCell >{productName}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{paidStatus}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{department}</TableCell>\r\n        {/* <TableCell>{fCurrency(department)}</TableCell> */}\r\n\r\n        \r\n      </TableRow>\r\n  );\r\n}\r\n\r\nTableRowNew.propTypes = {\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n  isPercentage: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UsersListDialog({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n  \r\n  const [searchAddress, setSearchAddress] = useState('');\r\n  const [selectedCustomer, setSelectedCustomers] = useState(['']);  \r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [ onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((user, index) => (\r\n        <Stack\r\n         \r\n          key={index}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${user.id}`)}\r\n          onClick={() => handleSelectAddress(user)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\">{Translate(\"code\")}: {user.customerCode}</Typography>\r\n\r\n            {/* {user.primary && <Label color=\"info\">Default</Label>} */}\r\n          </Stack>\r\n\r\n          {/* {user.company && (\r\n            <Box sx={{ color: 'primary.main', typography: 'caption' }}>{user.company}</Box>\r\n          )} */}\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"firstName\")}: {user.firstName}\r\n          </Typography>\r\n\r\n          \r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"lastName\")}: {user.lastName}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"userName\")}: {user.userName}\r\n          </Typography>\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        \r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder={Translate(\"searchCustomer\")}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n      \r\n      {action && action}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nUsersListDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (user) =>\r\n        user.firstName.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        user.lastName.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        user.userName.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport CustomersListDialog from 'src/screens/components/reports/invoiceForCustomers/customersListDialog';\r\n// Data Access\r\nimport { getAllUsers, getInvoicesForUser } from 'src/data-access/users';\r\nimport { GetAllCustomersWithAll } from 'src/data-access/customers';\r\nimport { getInvoiceForCustomers } from 'src/data-access/invoice';\r\n\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n// DATA ACCESS\r\nimport { getAgingReport } from 'src/data-access/reports';\r\nimport InvoiceTableToolbar from './InvoiceTableToolbar';\r\n// COMPONENTS\r\nimport TableRowNew from './tableRow';\r\nimport UsersListDialog from './usersListDialog';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\nconst defaultFilters = {\r\n  name: '',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceByUserView() {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const result = await getAllUsers();\r\n        console.log('Result: ', result);\r\n        setUserList(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await getInvoicesForUser(selectedUser.id);\r\n        setTableData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedUser]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  \r\n  // const dataInPage = dataFiltered.slice(\r\n  //   table.page * table.rowsPerPage,\r\n  //   table.page * table.rowsPerPage + table.rowsPerPage\r\n  // );\r\n\r\n\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'invoiceNumber', label: Translate(\"invoiceNumber\") },\r\n    { id: 'issueInvoiceDate', label: Translate(\"issueInvoiceDate\") },\r\n    { id: 'daysToCollected', label: Translate(\"daysToCollected\") },\r\n    { id: 'invoiceAmount', label: Translate(\"invoiceAmount\") },\r\n    { id: 'productName', label: Translate(\"productName\") },\r\n    { id: 'paidStatus', label: Translate(\"paidStatus\"), align: 'center' },\r\n    { id: 'department', label: Translate(\"department\"), align: 'center' },\r\n  ];\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading={Translate(\"invoiceByUser\")}\r\n          links={[\r\n            {\r\n              name: Translate(\"app\"),\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: Translate(\"reports\"),\r\n            },\r\n            {\r\n              name: Translate(\"invoiceByUser\"),\r\n            },\r\n          ]}\r\n          \r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card sx={{ mb: 3 }}>\r\n          <InvoiceTableToolbar \r\n            handleOpen={() => setOpen(true)}\r\n            users={userList}\r\n            selectedCustomers={selectedCustomers}\r\n            onChange={(value) => setSelectedCustomers(value)}\r\n          />\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  // onSelectAllRows={(checked) =>\r\n                  //   table.onSelectAllRows(\r\n                  //     checked,\r\n                  //     tableData.map((row) => row.id)\r\n                  //   )\r\n                  // }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered.length > 0 && dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row, index) => (\r\n                      <TableRowNew\r\n                        key={index}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  {/* <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  /> */}\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length || 0}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n\r\n\r\n           \r\n        </Card>\r\n        {/* <Card  sx={{ display:'flex', justifyContent: 'center', mb: 3 }}>\r\n          <DonutChart data={dataFiltered}/>  \r\n        </Card>     */}\r\n\r\n        <UsersListDialog\r\n          title={Translate(\"customers\")}\r\n          list={userList}  \r\n          open={open}\r\n          onClose={() => setOpen(false)}  \r\n          selected={(id) => selectedUser === id}        \r\n          onSelect={(value) => setSelectedUser(value)}\r\n        />\r\n      </Container>\r\n      \r\n  );\r\n}\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  console.log(inputData)\r\n  return inputData;\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport InvoiceByUserView from '../components/reports/invoiceByUsers/invoiceByUserView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceByUsersViewMain() {\r\n\r\n  return (\r\n    <>\r\n        <Helmet>\r\n            <title> Invoice By Users Report</title>\r\n        </Helmet>\r\n        <InvoiceByUserView />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n"],"names":["baseUrl","getAllInvoices","_getAllInvoices","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","list","wrap","_context","prev","next","fetch","concat","mode","then","response","json","invoices","catch","error","console","log","abrupt","stop","getInvoicesByDepartment","_x","_getInvoicesByDepartment","_callee2","id","_context2","getInvoicesBySalesConfirmation","_x2","_getInvoicesBySalesConfirmation","_callee3","confirmStatus","url","_context3","getInvoicesById","_x3","_getInvoicesById","_callee4","invoice","_context4","sent","ok","status","statusText","t0","getInvoiceEditUrl","departmentId","invoiceId","getInvoiceRedirectUrl","paths","departments","operation","installation","sales","collection","tenderAndConract","getInvoiceImportUrl","getAddAttachmentUrl","getCollectionData","_getCollectionData","_callee5","_context5","getInvoiceInquiryData","_x4","_getInvoiceInquiryData","_callee6","data","_context6","getInvoiceForCustomers","_x5","_getInvoiceForCustomers","_callee7","customers","queryData","_context7","reduce","acc","customer","deleteInvoice","_x6","_deleteInvoice","_callee8","success","_context8","method","headers","Cache","res","Error","getUsersByRole","_getUsersByRole","role","users","result","getAllUsers","_getAllUsers","getInvoicesForUser","_getInvoicesForUser","getUsersRoles","_getUsersRoles","roles","push","_toConsumableArray","CustomersListDialog","_ref","_ref$title","title","action","open","onClose","selected","onSelect","_useState","useState","_useState2","_slicedToArray","searchAddress","setSearchAddress","_useState3","_useState4","dataFiltered","_ref3","inputData","query","filter","address","customerCode","toLowerCase","indexOf","customerNameEn","customerNameAr","applyFilter","t","useLocales","Translate","text","notFound","length","handleSearchAddress","useCallback","event","target","value","handleSelectAddress","renderList","_jsx","Stack","spacing","sx","p","maxHeight","overflowX","children","map","index","_jsxs","component","ListItemButton","onClick","_defineProperty","py","px","borderRadius","flexDirection","alignItems","listItemButtonClasses","bgcolor","direction","Typography","variant","color","Dialog","fullWidth","maxWidth","justifyContent","pr","pt","TextField","onChange","placeholder","InputProps","startAdornment","InputAdornment","position","Iconify","icon","SearchNotFound","pb","InvoiceTableToolbar","handleOpen","selectedCustomers","xs","md","Button","endIcon","TableRowNew","row","issueInvoiceDate","isPercentage","invoiceNo","invoiceAmount","daysToCollected","productNameEn","productNameAr","paidStatus","department","currentLang","customerName","productName","TableRow","hover","TableCell","display","Avatar","alt","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","noWrap","format","Date","secondary","primaryTypographyProps","typography","secondaryTypographyProps","mt","align","UsersListDialog","user","firstName","lastName","userName","defaultFilters","name","startDate","endDate","InvoiceByUserView","useTheme","settings","useSettingsContext","useRouter","table","useTable","defaultOrderBy","tableData","setTableData","userList","setUserList","_useState5","_useState6","selectedUser","setSelectedUser","_useState7","_useState8","setSelectedCustomers","_useState9","_useState10","setOpen","useEffect","fetchUsers","fetchData","_ref2","_useState11","_useState12","filters","dateError","getTime","comparator","getComparator","order","orderBy","canReset","dense","TABLE_HEAD","label","Container","themeStretch","CustomBreadcrumbs","heading","links","href","dashboard","root","mb","Card","TableContainer","overflow","Scrollbar","Table","size","minWidth","TableHeadCustom","headLabel","rowCount","numSelected","onSort","TableBody","slice","page","rowsPerPage","includes","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","InvoiceByUsersViewMain","_Fragment","Helmet"],"sourceRoot":""}