{"version":3,"file":"static/js/3111.f0f7481d.chunk.js","mappings":"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","sources":["data-access/users.js","screens/components/invoice/departments/InvoiceTableFiltersResult.js","screens/components/invoice/departments/InvoiceTableRow.js","screens/components/invoice/departments/InvoiceTableToolbar.js","screens/components/invoice/departments/InvoiceListView.js","screens/invoice/departments/InvoiceListViewByDepartment.js","sections/invoice/invoice-analytic.js","utils/export.js","utils/format-number.js"],"sourcesContent":["const baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\nexport async function getUsersByRole(role) {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/User/UsersNameByRole/${role}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getAllUsers() {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/User`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getInvoicesForUser(id) {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/Invoices/GetInvoicesForUser?User=${id}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}\r\n\r\nexport async function getUsersRoles() {\r\n    const roles = [{\r\n        \"id\": \"0\",\r\n        \"name\": \"All\",\r\n    }];\r\n    \r\n    await fetch(`${baseUrl}/api/User/roles`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        roles.push(...res);\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return roles\r\n}","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useLocales } from 'src/locales';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n  const { t } = useLocales()\r\n\r\n  const Translate = (text) => t(text);\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters('startDate', null);\r\n    onFilters('endDate', null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          {Translate(\"resultsfound\")}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        \r\n\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nInvoiceTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableRow({\r\n  row,\r\n  selected,\r\n  salesStatus,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n  handleOpen,\r\n  handleConfirmAndReject,\r\n}) {\r\n  const { id, invoiceNo, issueInvoiceDate, invoiceAmount, region, customerNameEn, customerNameAr, productNameEn, productNameAr, sales } = row;\r\n\r\n  const { t, currentLang } = useLocales()\r\n\r\n  const customerName = currentLang.value === 'ar' ? customerNameAr : customerNameEn;\r\n  const productName = currentLang.value === 'ar' ? productNameAr : productNameEn;\r\n\r\n  const Translate = (text) => t(text);\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  const editMenuItem = salesStatus === undefined ?\r\n       <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:pen-bold\" />\r\n          {Translate(\"edit\")}\r\n        </MenuItem>\r\n    :  null;\r\n\r\n  const acceptButton = salesStatus === 0 ?\r\n    <TableCell>\r\n      <Button \r\n        variant='contained' \r\n        color='success'\r\n        onClick={() => handleConfirmAndReject(id, 'Confirm')}\r\n      >\r\n        {Translate(\"accept\")}\r\n      </Button>\r\n    </TableCell>\r\n  :  null;\r\n\r\n  const rejectButton = salesStatus === 0 ?\r\n    <TableCell>\r\n      <Button \r\n        variant='contained' \r\n        color='error'\r\n        onClick={() => handleConfirmAndReject(id, 'Reject')}\r\n      >\r\n        {Translate(\"reject\")}\r\n      </Button>\r\n    </TableCell>\r\n  :  null;\r\n\r\n  const assignUser = salesStatus > 0 ?\r\n    <TableCell>\r\n      <Button \r\n        variant='contained' \r\n        color='success'\r\n        onClick={() => handleOpen(id)}\r\n      >\r\n        {Translate(\"assign\")} {salesStatus === 1 ? Translate(\"engineer\") : Translate(\"collector\")}\r\n      </Button>\r\n    </TableCell>\r\n  :  null;\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={customerName} sx={{ mr: 2 }}>\r\n            {customerName.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {customerName}\r\n              </Typography>\r\n            }\r\n            secondary={\r\n              <Link\r\n                noWrap\r\n                variant=\"body2\"\r\n                onClick={onViewRow}\r\n                sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n              >\r\n                {invoiceNo}\r\n              </Link>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(issueInvoiceDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(issueInvoiceDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        \r\n        <TableCell >${invoiceAmount}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{region}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{productName}</TableCell>\r\n\r\n        {acceptButton}\r\n\r\n        {rejectButton}\r\n\r\n        {assignUser}\r\n\r\n         <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell> \r\n\r\n        \r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          {Translate(\"view\")}\r\n        </MenuItem>\r\n\r\n        \r\n        {editMenuItem}\r\n\r\n        {/* <Divider sx={{ borderStyle: 'dashed' }} /> */}\r\n\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title={Translate(\"delete\")}\r\n        content={Translate(\"deleteDialogContent\")}\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            {Translate(\"delete\")}\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  handleOpen: PropTypes.func,\r\n  handleConfirmAndReject: PropTypes.func,\r\n  row: PropTypes.object,\r\n  salesStatus: PropTypes.number,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  dateError,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('startDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('endDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        \r\n        <DatePicker\r\n          label={Translate(\"startDate\")}\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label={Translate(\"endDate\")}\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              error: dateError,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder={Translate(\"searchInvoiceNamePlaceHolder\")}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          {/* <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton> */}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          {Translate(\"print\")}\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          {Translate(\"import\")}\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          {Translate(\"export\")}\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n};\r\n","import sumBy from 'lodash/sumBy';\r\nimport React, { useState, useCallback, useEffect, useMemo  } from 'react';\r\nimport { useNavigate  } from 'react-router-dom';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Alert from '@mui/material/Alert';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport { Icon } from '@iconify/react';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n// @mui Dialog\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// _mock\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport Iconify from 'src/components/iconify';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TablePaginationCustom,\r\n  TableSelectedAction,\r\n} from 'src/components/table';\r\n// DATA ACCESS\r\nimport { _departments } from 'src/lists/departments'\r\nimport { _statusList } from 'src/lists/paidStatus'\r\nimport { getUsersByRole } from 'src/data-access/users';\r\n// Utility\r\nimport { exportToExcel } from 'src/utils/export';\r\n// COMPONENTS\r\nimport InvoiceAnalytic from 'src/sections/invoice/invoice-analytic';\r\nimport InvoiceTableFiltersResult from 'src/screens/components/invoice/departments/InvoiceTableFiltersResult';\r\nimport { getInvoicesByDepartment, getInvoicesBySalesConfirmation  } from 'src/data-access/invoice'\r\nimport InvoiceTableRow from './InvoiceTableRow';\r\nimport InvoiceTableToolbar from './InvoiceTableToolbar';\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\nconst defaultFilters = {\r\n  name: '',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListView({department, salesStatus}) {\r\n  const theme = useTheme();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const { t, currentLang } = useLocales()\r\n  const currentLanguage = currentLang.value;\r\n  const Translate = (text) => t(text);\r\n  \r\n  const [assignedUsers, setAssignedUsers] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [dataUpdated, setDataUpdated] = useState(false);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    let role = '';\r\n    if (salesStatus === 1) {\r\n      role = 'installation';\r\n    } else if (salesStatus === 3) {\r\n      role = 'collection';\r\n    } \r\n    \r\n\r\n    const fetchData = async () => {\r\n      try {\r\n\r\n        if (department !== undefined) {\r\n          const departmentId = department === -1 ? 0 : department\r\n          const result = await getInvoicesByDepartment(departmentId);\r\n          setTableData(result);\r\n        } else {\r\n          const result = await getInvoicesBySalesConfirmation(Boolean(salesStatus));\r\n          setTableData(result);\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n\r\n        if (role) {\r\n          const result = await getUsersByRole(role);\r\n          console.log(result);\r\n          setAssignUser(result.length ? result[0].username : '') ;\r\n          setAssignedUsers(result);\r\n        } \r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching users list:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchUsers();\r\n  }, [ department, salesStatus]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const [isConfirmReport, setIsConfirmReport] = useState(department === undefined);\r\n  const [openAssignUser, setOpenAssignUser] = useState(false);\r\n  const [assignUser, setAssignUser] = useState('');\r\n  const [invoiceId, setInvoiceId] = useState(0);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('Success');\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const handleClose = () => {\r\n    setOpenAssignUser(false);\r\n  }\r\n\r\n  const handleOpen = (id) => {\r\n\r\n    setInvoiceId(id);\r\n    setOpenAssignUser(true);\r\n  }\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'invoiceNumber', label: Translate(\"invoiceNumber\") },\r\n    { id: 'issueInvoiceDate', label: Translate(\"issueDate\") },\r\n    { id: 'invoiceAmount', label: Translate(\"amount\") },\r\n    { id: 'region', label: Translate(\"region\"), align: 'center' },\r\n    { id: 'productName', label: Translate(\"productName\"), align: 'center' },\r\n    { id: '6', label: '' },\r\n  ];\r\n\r\n  const exportHeaderRow = [\r\n    Translate(\"invoiceNumber\"),\r\n    Translate(\"customerName\"),\r\n    Translate(\"issueDate\"),\r\n    Translate(\"amount\"),\r\n    Translate(\"region\"),\r\n    Translate(\"productName\")\r\n  ];\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  // Fetch data\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.editOperation(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('paidStatus', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const handleConfirmInvoice = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  \r\n  const getHeading = (id, salesConfirmStatus) => {\r\n    let text = '';\r\n    if (id) {\r\n      switch(id) {\r\n        case -1:\r\n          text = Translate(\"operation\");\r\n          break;\r\n        case 1:\r\n          text = Translate(\"installation\");\r\n          break;\r\n        case 2:\r\n          text = Translate(\"sales\");\r\n          break;\r\n        case 3:\r\n          text = Translate(\"collection\");\r\n          break;\r\n        case 4:\r\n          text = Translate(\"tenderAndContracts\");\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      switch(salesConfirmStatus) {\r\n        case 0:\r\n          text = Translate(\"confirm_invoices\");\r\n          break;\r\n        case 1:\r\n          text = Translate(\"assign_engineer\");\r\n          break;\r\n        case 2:\r\n          text = Translate(\"assign_collector\");\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return text;\r\n  }\r\n  \r\n  const heading = getHeading(department, salesStatus)\r\n\r\n  // Add Empty headers for Accept and reject\r\n  if(isConfirmReport && salesStatus === 0){\r\n    TABLE_HEAD.push({ id: '7', label: '' });\r\n    TABLE_HEAD.push({ id: '8', label: '' });\r\n  }\r\n\r\n  // Add Empty headers for Assign collecter/engineer\r\n  if(isConfirmReport && salesStatus > 0){\r\n    TABLE_HEAD.push({ id: '7', label: '' });\r\n    \r\n  }\r\n\r\n  const handleConfirmAndReject = async (id, state) => {    \r\n    try {\r\n      console.log(`https://invoicecollectionsystemapi.azurewebsites.net/api/Invoices/${id}/${state}BySales`)\r\n      const redirectUrl = paths.departments.sales.confirm_invoices;\r\n      // Send create invoice request\r\n      \r\n      fetch(`https://invoicecollectionsystemapi.azurewebsites.net/api/Invoices/${id}/${state}BySales`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        // body: JSON.stringify(body),\r\n        Cache: 'default'\r\n      })\r\n      .then(res => {\r\n        // Check if the status code is 200 or 204\r\n        if (res.ok) {\r\n          setDataUpdated(!dataUpdated);\r\n          // Check if the status code is 200 or 204\r\n          if (res.status === 204) {\r\n            return null; // Handle 204 No Content\r\n          }  if (res.status === 200) {\r\n            return res.json(); // Parse JSON for other successful responses\r\n          } \r\n          throw new Error(`Unexpected status code: ${res.status}`);\r\n          \r\n        } \r\n        throw new Error('Network response was not ok');\r\n      })\r\n      .then(res => {\r\n        setAlertMessage(Translate(\"success\"));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setAlertMessage(error)\r\n      })\r\n\r\n\r\n      \r\n      // console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setOpenAlert(true);\r\n    }\r\n  };\r\n\r\n  const handleAssignUser = async () => {    \r\n    try {\r\n      const endpoint = salesStatus === 1 ? 'setResponsibleEngineerByUsername' : 'setCollectorByUsername';\r\n      const url = `https://invoicecollectionsystemapi.azurewebsites.net/api/Invoices/${invoiceId}/${endpoint}`;\r\n      console.log(url);\r\n\r\n      const body= {\r\n        userName: assignUser\r\n      };\r\n\r\n      console.log(body);\r\n\r\n      // Send create invoice request\r\n      setOpenAssignUser(false);\r\n      \r\n\r\n      fetch(url, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        Cache: 'default'\r\n      })\r\n      .then(res => {\r\n        // Check if the status code is 200 or 204\r\n        if (res.ok) {\r\n          // Check if the status code is 200 or 204\r\n          if (res.status === 204) {\r\n            return null; // Handle 204 No Content\r\n          }  if (res.status === 200) {\r\n            return res.json(); // Parse JSON for other successful responses\r\n          } \r\n\r\n          throw new Error(`Unexpected status code: ${res.status}`);\r\n          \r\n        } \r\n\r\n        throw new Error('Network response was not ok');\r\n      })\r\n      .then(res => {\r\n        setAlertMessage(Translate(\"success\"));\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        setAlertMessage(error);\r\n      });\r\n\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setOpenAlert(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading={heading}\r\n          links={[\r\n            {\r\n              name: Translate(\"app\"),\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: Translate(\"invoice\"),\r\n              href: paths.dashboard.invoice.root,\r\n            },\r\n            {\r\n              name: Translate(\"list\"),\r\n            },\r\n          ]}\r\n          action= {\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color='primary'\r\n                onClick={() => exportToExcel(tableData, exportHeaderRow, currentLanguage, 'InvoiceByDepartments', 'ExportFile')}\r\n                startIcon={<Iconify icon=\"eva:download-outline\" />}\r\n              >\r\n                {Translate(\"export\")}\r\n              </Button>\r\n            </Stack>\r\n            \r\n          }\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <InvoiceAnalytic\r\n                title={Translate(\"total\")}\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={sumBy(tableData, 'invoiceAmount')}\r\n                icon=\"solar:bill-list-bold-duotone\"\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n              \r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n           \r\n\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            dateError={dateError}\r\n            serviceOptions={_departments().map((option) => option)}\r\n            paidStatusOptions={_statusList().map((option) => option)}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            {/* <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) => {\r\n                  console.log('Selected:', checked);\r\n                  table.onSelectAllRows(\r\n                    checked,\r\n                    tableData.map((row) => row.id)\r\n                  );\r\n                  \r\n                }\r\n              }\r\n              action={\r\n                <Stack direction=\"row\">\r\n                  <Tooltip title=\"Sent\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"iconamoon:send-fill\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Download\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"eva:download-outline\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Print\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Stack>\r\n              }\r\n            /> */}\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <InvoiceTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        salesStatus={salesStatus}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        handleOpen={(id) => handleOpen(id)}\r\n                        handleConfirmAndReject={(id, state) => handleConfirmAndReject(id, state)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n\r\n        <Box sx={{ width: '50%', flex: 1, marginLeft:'auto', marginTop:'10px' }}>\r\n          <Collapse in={openAlert}>\r\n            <Alert\r\n              severity={alertMessage === 'Success' ? 'success' : 'error'}\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setOpenAlert(false);\r\n                  }}\r\n                >\r\n                  <Icon icon=\"ic:round-close\" />\r\n                </IconButton>\r\n              }\r\n              sx={{ mb: 2 }}\r\n            >\r\n              {alertMessage}\r\n            </Alert>\r\n          </Collapse>\r\n        </Box>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title={Translate(\"Delete\")}\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            {Translate(\"Delete\")}\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <Dialog\r\n        open={openAssignUser}\r\n        color=\"#ef5350\"\r\n        // TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n\r\n      >\r\n        <DialogTitle>{Translate(\"assignUser\")}</DialogTitle>\r\n        <DialogContent>\r\n          <Select\r\n            value={assignUser}\r\n            onChange={(newValue) => {\r\n              console.log(newValue.target.value);\r\n              setAssignUser(newValue.target.value);\r\n            }}\r\n            input={<OutlinedInput label=\"\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{ textTransform: 'capitalize', fullWidth: true }}\r\n          >\r\n            {assignedUsers.map((option) => (\r\n              <MenuItem key={option.id} value={option.username}>\r\n                {option.username}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>{Translate(\"close\")}</Button>\r\n          <Button onClick={handleAssignUser}>{Translate(\"save\")}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      \r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n    const { name, status, service, startDate, paidStatus, endDate } = filters;\r\n  \r\n    const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n  \r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n  \r\n    inputData = stabilizedThis.map((el) => el[0]);\r\n  \r\n    if (name) {\r\n      inputData = inputData.filter(\r\n        (invoice) =>\r\n          invoice.customerNameEn.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.invoiceNo.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.customerNameAr.indexOf(name) !== -1\r\n      );\r\n    }\r\n  \r\n    if (!dateError) {\r\n      if (startDate && endDate) {\r\n        inputData = inputData.filter(\r\n          (invoice) =>\r\n            fTimestamp(invoice.issueInvoiceDate) >= fTimestamp(startDate) &&\r\n            fTimestamp(invoice.issueInvoiceDate) <= fTimestamp(endDate)\r\n        );\r\n      }\r\n    }\r\n  \r\n    return inputData;\r\n  }\r\n\r\n  InvoiceListView.propTypes = {\r\n    department: PropTypes.number,\r\n    salesStatus: PropTypes.number,\r\n  }","import { Helmet } from 'react-helmet-async';\r\nimport PropTypes from 'prop-types';\r\n// sections\r\nimport  InvoiceListView  from 'src/screens/components/invoice/departments/InvoiceListView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListViewByDepartment({ id, salesStatus }) {\r\n    console.log(id)\r\n    const list = id \r\n    ? <InvoiceListView department={id} />\r\n    : <InvoiceListView salesStatus={salesStatus} />\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Invoice List</title>\r\n      </Helmet>\r\n      \r\n      {list}\r\n    </>\r\n  );\r\n}\r\nInvoiceListViewByDepartment.propTypes = {\r\n    id: PropTypes.number,\r\n    salesStatus: PropTypes.number\r\n  }","import PropTypes from 'prop-types';\nimport { useLocales } from 'src/locales';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\n// utils\nimport { fShortenNumber, fCurrency } from 'src/utils/format-number';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceAnalytic({ title, total, icon, color, percent, price }) {\n  const { t } = useLocales()\n\n  const Translate = (text) => t(text);\n  \n\n  return (\n    <Stack\n      spacing={2.5}\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{ width: 1, minWidth: 200 }}\n    >\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ position: 'relative' }}>\n        <Iconify icon={icon} width={32} sx={{ color, position: 'absolute' }} />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={percent}\n          size={56}\n          thickness={2}\n          sx={{ color, opacity: 0.48 }}\n        />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={100}\n          size={56}\n          thickness={3}\n          sx={{\n            top: 0,\n            left: 0,\n            opacity: 0.48,\n            position: 'absolute',\n            color: (theme) => alpha(theme.palette.grey[500], 0.16),\n          }}\n        />\n      </Stack>\n\n      <Stack spacing={0.5}>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n\n        <Box component=\"span\" sx={{ color: 'text.disabled', typography: 'body2' }}>\n          {fShortenNumber(total)} {Translate(\"invoices\")}\n        </Box>\n\n        <Typography variant=\"subtitle2\">{fCurrency(price)}</Typography>\n      </Stack>\n    </Stack>\n  );\n}\n\nInvoiceAnalytic.propTypes = {\n  color: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  percent: PropTypes.number,\n  price: PropTypes.number,\n  title: PropTypes.string,\n  total: PropTypes.number,\n};\n","import React from 'react';\r\nimport ExcelJS from 'exceljs';\r\n\r\nexport const exportToExcel = (data, headers, language, reportName, fileName) => {\r\n  console.log(data);\r\n  let filteredData = [];\r\n  if(reportName.toLowerCase() === 'invoicebydepartments')\r\n    filteredData = prepareDataForInvoiceByDepartment(data, headers, language);\r\n  else if(reportName.toLowerCase() === 'allinvoices')\r\n    filteredData = prepareDataForAllInvoices(data, headers, language);\r\n  \r\n  console.log(\"Headers: \", headers);\r\n  console.log(\"filteredData: \", filteredData);\r\n\r\n  const workbook = new ExcelJS.Workbook();\r\n  const worksheet = workbook.addWorksheet('Sheet1');\r\n\r\n  \r\n  // Add headers\r\n  const headerRow = worksheet.addRow(headers);\r\n  \r\n\r\n  // Add data\r\n  filteredData.forEach(row => {\r\n    const rowValues = headers.map(header => row[header]);\r\n    worksheet.addRow(rowValues);\r\n  });\r\n  \r\n  // // Set the font for Arabic text\r\n  worksheet.columns.forEach(column => {\r\n    column.width = 19;\r\n    column.eachCell(cell => {\r\n      cell.font = { name: 'Arial', size: 10, family: 4, bold: false, italic: false };\r\n      cell.alignment = { vertical: 'middle', horizontal: 'left', wrapText: false };\r\n    });\r\n  });\r\n\r\n  // Set font style for the header row\r\n  headerRow.font = { name: 'Arial', bold: true, size: 10,  color: { argb: 'FF000000' } }; \r\n\r\n  console.log(\"Rows count: \", worksheet.rowCount);\r\n  // Create a buffer and write the workbook to it\r\n  workbook.xlsx.writeBuffer().then(buffer => {\r\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n    const link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = `${fileName}.xlsx`;\r\n    link.click();\r\n  });\r\n};\r\n\r\nconst prepareDataForInvoiceByDepartment = (data, headers, language) => data.map((invoice) => {\r\n  // console.log(invoice);\r\n  const returnObj = {\r\n    [headers[0]]: invoice.invoiceNo,\r\n    [headers[1]]: language === 'ar' ? invoice.customerNameAr : invoice.customerNameEn,\r\n    [headers[2]]: invoice.issueInvoiceDate,\r\n    [headers[3]]: invoice.invoiceAmount,\r\n    [headers[4]]: invoice.region,\r\n    [headers[5]]: language === 'ar' ? invoice.productNameAr : invoice.productNameEn\r\n  }\r\n  // console.log(returnObj);\r\n  return returnObj;\r\n});\r\n\r\nconst prepareDataForAllInvoices = (data, headers, language) => data.map((invoice) => {\r\n  // console.log(invoice);\r\n  const returnObj = {\r\n    [headers[0]]: invoice.invoiceNo,\r\n    [headers[1]]: language === 'ar' ? invoice.customerNameAr : invoice.customerNameEn,\r\n    [headers[2]]: invoice.issueInvoiceDate,\r\n    [headers[3]]: invoice.daysToCollected,\r\n    [headers[4]]: invoice.invoiceAmount,\r\n    [headers[5]]: invoice.paidStatus,\r\n    [headers[6]]: invoice.department\r\n  }\r\n  // console.log(returnObj);\r\n  return returnObj;\r\n});\r\n\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('SAR0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["baseUrl","getUsersByRole","_x","_getUsersByRole","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","role","users","wrap","_context","prev","next","fetch","concat","mode","then","result","json","res","catch","error","console","log","abrupt","stop","getAllUsers","_getAllUsers","_callee2","_context2","getInvoicesForUser","_x2","_getInvoicesForUser","_callee3","id","_context3","getUsersRoles","_getUsersRoles","_callee4","roles","_context4","push","_toConsumableArray","InvoiceTableFiltersResult","_ref","text","filters","onFilters","onResetFilters","results","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","startDate","endDate","t","useLocales","_jsxs","Stack","_objectSpread","spacing","children","Box","sx","typography","_jsx","component","color","ml","flexGrow","direction","flexWrap","alignItems","Block","label","Chip","size","onDelete","Button","onClick","startIcon","Iconify","icon","_ref2","_excluded2","Paper","variant","p","borderRadius","overflow","borderStyle","InvoiceTableRow","row","selected","salesStatus","onSelectRow","onViewRow","onEditRow","onDeleteRow","handleOpen","handleConfirmAndReject","invoiceNo","issueInvoiceDate","invoiceAmount","region","customerNameEn","customerNameAr","productNameEn","productNameAr","_useLocales","sales","currentLang","customerName","value","productName","Translate","confirm","useBoolean","popover","usePopover","editMenuItem","undefined","MenuItem","onClose","acceptButton","TableCell","rejectButton","assignUser","_Fragment","TableRow","hover","padding","Checkbox","checked","display","Avatar","alt","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","Typography","noWrap","secondary","Link","cursor","format","Date","primaryTypographyProps","secondaryTypographyProps","mt","align","px","IconButton","open","onOpen","CustomPopover","arrow","width","ConfirmDialog","onFalse","title","content","action","InvoiceTableToolbar","dateError","handleFilterName","useCallback","event","target","handleFilterStartDate","newValue","handleFilterEndDate","xs","md","pr","DatePicker","onChange","slotProps","textField","fullWidth","maxWidth","TextField","name","placeholder","InputProps","startAdornment","InputAdornment","position","defaultFilters","InvoiceListView","department","theme","useTheme","settings","useNavigate","useSettingsContext","router","useRouter","table","useTable","defaultOrderBy","currentLanguage","_useState","useState","_useState2","_slicedToArray","assignedUsers","setAssignedUsers","_useState3","_useState4","tableData","setTableData","_useState5","_useState6","dataUpdated","setDataUpdated","useEffect","fetchData","departmentId","_result","getInvoicesByDepartment","sent","getInvoicesBySalesConfirmation","Boolean","t0","fetchUsers","_ref3","setAssignUser","length","username","_useState7","_useState8","setFilters","_useState9","_useState10","isConfirmReport","_useState11","_useState12","openAssignUser","setOpenAssignUser","_useState13","_useState14","_useState15","_useState16","invoiceId","setInvoiceId","_useState17","_useState18","openAlert","setOpenAlert","_useState19","_useState20","alertMessage","setAlertMessage","getTime","dataFiltered","_ref6","inputData","comparator","status","service","paidStatus","stabilizedThis","map","el","index","sort","a","b","order","filter","invoice","toLowerCase","indexOf","fTimestamp","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","handleClose","denseHeight","dense","canReset","notFound","TABLE_HEAD","exportHeaderRow","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRow","deleteRow","onUpdatePageDeleteRow","handleDeleteRows","deleteRows","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","paths","dashboard","editOperation","handleViewRow","details","handleResetFilters","heading","salesConfirmStatus","getHeading","_ref4","state","departments","confirm_invoices","method","headers","Cache","ok","Error","handleAssignUser","_ref5","endpoint","url","body","userName","JSON","stringify","Container","themeStretch","CustomBreadcrumbs","links","href","root","divider","Divider","orientation","flexItem","py","exportToExcel","mb","Card","Scrollbar","InvoiceAnalytic","total","percent","price","sumBy","palette","info","main","serviceOptions","_departments","option","paidStatusOptions","_statusList","pt","TableContainer","Table","minWidth","TableHeadCustom","headLabel","rowCount","numSelected","onSort","onSelectAllRows","TableBody","TableEmptyRows","height","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","flex","marginLeft","marginTop","Collapse","in","Alert","severity","Icon","Dialog","keepMounted","DialogTitle","DialogContent","Select","input","OutlinedInput","renderValue","textTransform","DialogActions","InvoiceListViewByDepartment","list","Helmet","justifyContent","CircularProgress","thickness","opacity","top","left","alpha","grey","fShortenNumber","fCurrency","data","language","reportName","fileName","filteredData","prepareDataForInvoiceByDepartment","prepareDataForAllInvoices","workbook","ExcelJS","worksheet","addWorksheet","headerRow","addRow","forEach","rowValues","header","columns","column","eachCell","cell","font","family","bold","italic","alignment","vertical","horizontal","wrapText","argb","xlsx","writeBuffer","buffer","blob","Blob","type","link","document","createElement","window","URL","createObjectURL","download","click","_returnObj","_returnObj2","daysToCollected","fNumber","number","numeral","fPercent","Number","fData","key","replace"],"sourceRoot":""}