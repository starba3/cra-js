{"version":3,"file":"static/js/9125.ddf52062.chunk.js","mappings":"unBAAMA,EAAU,uDAET,SAAeC,EAAcC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAYnC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAZM,SAAAC,EAA8BC,GAAI,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACvB,OAAVJ,EAAQ,GAAEE,EAAAE,KAAA,EACRC,MAAM,GAADC,OAAIjB,EAAO,8BAAAiB,OAA6BP,GAAQ,CACvDQ,KAAK,SAERC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,MAAM,IAC5BF,MAAK,SAAAG,GACFX,EAAQW,CACZ,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,KAAK,IAAC,cAAAb,EAAAc,OAAA,SAEvBhB,GAAK,wBAAAE,EAAAe,OAAA,GAAAnB,EAAA,MACfL,MAAA,KAAAC,UAAA,C,mKCDc,SAASwB,GAAyBC,GAQ7C,IAPFC,EAAOD,EAAPC,QACAC,EAASF,EAATE,UAEAC,EAAcH,EAAdG,eAEAC,EAAOJ,EAAPI,QACGC,GAAKC,EAAAA,EAAAA,GAAAN,EAAAO,GAEFC,GAAaC,EAAAA,EAAAA,IAAeR,EAAQS,UAAWT,EAAQU,SAQ7D,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACC,QAAS,KAASV,GAAK,IAAAW,SAAA,EAC5BJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CAAEC,WAAY,SAAUH,SAAA,EAC/BI,EAAAA,EAAAA,KAAA,UAAAJ,SAASZ,KACTgB,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACI,UAAU,OAAOH,GAAI,CAAEI,MAAO,iBAAkBC,GAAI,KAAOP,SAAC,sBAKnEJ,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACW,SAAU,EAAGT,QAAS,EAAGU,UAAU,MAAMC,SAAS,OAAOC,WAAW,SAAQX,SAAA,CAIhFf,EAAQS,WAAaT,EAAQU,UAC5BS,EAAAA,EAAAA,KAACQ,GAAK,CAACC,MAAM,QAAOb,UAClBI,EAAAA,EAAAA,KAACU,EAAAA,EAAI,CAACC,KAAK,QAAQF,MAAOrB,EAAYwB,SApBvB,WACvB9B,EAAU,YAAa,MACvBA,EAAU,UAAW,KACvB,OAqBMkB,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLX,MAAM,QACNY,QAAS/B,EACTgC,WAAWf,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,+BAAgCrB,SAC1D,gBAMT,CAWA,SAASY,GAAKU,GAAqC,IAAlCT,EAAKS,EAALT,MAAOb,EAAQsB,EAARtB,SAAUE,EAAEoB,EAAFpB,GAAOb,GAAKC,EAAAA,EAAAA,GAAAgC,EAAAC,IAC5C,OACE3B,EAAAA,EAAAA,MAACC,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJO,UAAWmB,EAAAA,EACXC,QAAQ,WACR1B,QAAS,EACTU,UAAU,MACVP,IAAEJ,EAAAA,EAAAA,GAAA,CACA4B,EAAG,EACHC,aAAc,EACdC,SAAU,SACVC,YAAa,UACV3B,IAEDb,GAAK,IAAAW,SAAA,EAETI,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACI,UAAU,OAAOH,GAAI,CAAEC,WAAY,aAAcH,SACnDa,KAGHT,EAAAA,EAAAA,KAACP,EAAAA,EAAK,CAACE,QAAS,EAAGU,UAAU,MAAMC,SAAS,OAAMV,SAC/CA,OAIT,C,8ICrEe,SAAS8B,GAAe9C,GAUnC,IATF+C,EAAG/C,EAAH+C,IACAC,EAAQhD,EAARgD,SACAC,EAAWjD,EAAXiD,YACAC,EAAWlD,EAAXkD,YACAC,EAASnD,EAATmD,UACAC,EAASpD,EAAToD,UACAC,EAAWrD,EAAXqD,YACAC,EAAUtD,EAAVsD,WACAC,EAAsBvD,EAAtBuD,uBAEQC,EAAkGT,EAAlGS,GAAIC,EAA8FV,EAA9FU,UAAWC,EAAmFX,EAAnFW,iBAAkBC,EAAiEZ,EAAjEY,cAAeC,EAAkDb,EAAlDa,OAAQC,EAA0Cd,EAA1Cc,eAAgBC,EAA0Bf,EAA1Be,eAE1EC,GAFoGhB,EAAViB,OAEhFC,EAAAA,EAAAA,MAEVC,GAAUC,EAAAA,GAAAA,KAEVC,OAA+BC,IAAhBpB,GAChBrC,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CACNpC,QAAS,WACPkB,IACAc,EAAQK,SACV,EAAEvD,SAAA,EAEFI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,mBAAmB,UAGpC,KAECmC,EAA+B,IAAhBvB,GACnB7B,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAAAzD,UACRI,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLQ,QAAQ,YACRnB,MAAM,UACNY,QAAS,kBAAMqB,EAAuBC,EAAI,UAAU,EAACxC,SACtD,aAIF,KAEG0D,EAA+B,IAAhBzB,GACnB7B,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAAAzD,UACRI,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLQ,QAAQ,YACRnB,MAAM,QACNY,QAAS,kBAAMqB,EAAuBC,EAAI,SAAS,EAACxC,SACrD,aAIF,KAEG2D,EAAa1B,EAAc,GAC/B7B,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAAAzD,UACRJ,EAAAA,EAAAA,MAACqB,EAAAA,EAAM,CACLQ,QAAQ,YACRnB,MAAM,UACNY,QAASoB,EAAWtC,SAAA,CACrB,UACyB,IAAhBiC,EAAoB,WAAa,iBAG5C,KAEH,OACErC,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAA5D,SAAA,EACEJ,EAAAA,EAAAA,MAACiE,GAAAA,EAAQ,CAACC,OAAK,EAAC9B,SAAUA,EAAShC,SAAA,EACjCI,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAACM,QAAQ,WAAU/D,UAC3BI,EAAAA,EAAAA,KAAC4D,GAAAA,EAAQ,CAACC,QAASjC,EAAUd,QAASgB,OAGxCtC,EAAAA,EAAAA,MAAC6D,GAAAA,EAAS,CAACvD,GAAI,CAAEgE,QAAS,OAAQvD,WAAY,UAAWX,SAAA,EACvDI,EAAAA,EAAAA,KAAC+D,GAAAA,EAAM,CAACC,IAAKvB,EAAgB3C,GAAI,CAAEmE,GAAI,GAAIrE,SACxC6C,EAAeyB,OAAO,GAAGC,iBAG5BnE,EAAAA,EAAAA,KAACoE,GAAAA,EAAY,CACXC,mBAAiB,EACjBC,SACEtE,EAAAA,EAAAA,KAACuE,GAAAA,EAAU,CAAClD,QAAQ,QAAQmD,QAAM,EAAA5E,SAC/B6C,IAGLgC,WACEzE,EAAAA,EAAAA,KAAC0E,GAAAA,EAAI,CACHF,QAAM,EACNnD,QAAQ,QACRP,QAASiB,EACTjC,GAAI,CAAEI,MAAO,gBAAiByE,OAAQ,WAAY/E,SAEjDyC,UAMTrC,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAAAzD,UACRI,EAAAA,EAAAA,KAACoE,GAAAA,EAAY,CACXE,SAASM,EAAAA,GAAAA,GAAO,IAAIC,KAAKvC,GAAmB,eAC5CmC,WAAWG,EAAAA,GAAAA,GAAO,IAAIC,KAAKvC,GAAmB,KAC9CwC,uBAAwB,CAAE/E,WAAY,QAASyE,QAAQ,GACvDO,yBAA0B,CACxBC,GAAI,GACJ/E,UAAW,OACXF,WAAY,gBAKlBP,EAAAA,EAAAA,MAAC6D,GAAAA,EAAS,CAAAzD,SAAA,CAAE,IAAE2C,MAedvC,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAAC4B,MAAM,SAAQrF,SAAG4C,KAE5BxC,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAAC4B,MAAM,SAAQrF,SAAG8C,IAkB3BU,EAEAE,EAEAC,GAEAvD,EAAAA,EAAAA,KAACqD,GAAAA,EAAS,CAAC4B,MAAM,QAAQnF,GAAI,CAAEoF,GAAI,GAAItF,UACtCI,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CAACjF,MAAO4C,EAAQsC,KAAO,UAAY,UAAWtE,QAASgC,EAAQuC,OAAOzF,UAC/EI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,mCAOpBzB,EAAAA,EAAAA,MAAC8F,GAAAA,EAAa,CACZF,KAAMtC,EAAQsC,KACdjC,QAASL,EAAQK,QACjBoC,MAAM,YACNzF,GAAI,CAAE0F,MAAO,KAAM5F,SAAA,EAEnBJ,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CACPpC,QAAS,WACPiB,IACAe,EAAQK,SACV,EAAEvD,SAAA,EAEFI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,mBAAmB,UAKlC+B,MAgBHhD,EAAAA,EAAAA,KAACyF,EAAAA,EAAa,CACZL,KAAMzC,EAAQ+C,MACdvC,QAASR,EAAQgD,QACjBC,MAAM,SACNC,QAAQ,+BACRC,QACE9F,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACQ,QAAQ,YAAYnB,MAAM,QAAQY,QAASmB,EAAYrC,SAAC,eAO1E,C,wCCpNe,SAASmG,GAAmBnH,GAIvC,IAHFC,EAAOD,EAAPC,QACAC,EAASF,EAATE,UACAkH,EAASpH,EAAToH,UAEMlD,GAAUC,EAAAA,GAAAA,KAEVkD,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACCrH,EAAU,OAAQqH,EAAMC,OAAOV,MACjC,GACA,CAAC5G,IAGGuH,GAAwBH,EAAAA,EAAAA,cAC5B,SAACI,GACCxH,EAAU,YAAawH,EACzB,GACA,CAACxH,IAGGyH,GAAsBL,EAAAA,EAAAA,cAC1B,SAACI,GACCxH,EAAU,UAAWwH,EACvB,GACA,CAACxH,IAGH,OACEU,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAA5D,SAAA,EACEJ,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJE,QAAS,EACTY,WAAY,CAAEiG,GAAI,WAAYC,GAAI,UAClCpG,UAAW,CACTmG,GAAI,SACJC,GAAI,OAEN3G,GAAI,CACFwB,EAAG,IACHoF,GAAI,CAAEF,GAAI,IAAKC,GAAI,IACnB7G,SAAA,EAMFI,EAAAA,EAAAA,KAAC2G,GAAAA,EAAU,CACTlG,MAAM,aACNiF,MAAO7G,EAAQS,UACfsH,SAAUP,EACVQ,UAAW,CAAEC,UAAW,CAAEC,WAAW,IACrCjH,GAAI,CACFkH,SAAU,CAAEP,GAAI,SAIpBzG,EAAAA,EAAAA,KAAC2G,GAAAA,EAAU,CACTlG,MAAM,WACNiF,MAAO7G,EAAQU,QACfqH,SAAUL,EACVM,UAAW,CACTC,UAAW,CACTC,WAAW,EACXzI,MAAO0H,IAGXlG,GAAI,CACFkH,SAAU,CAAEP,GAAI,SAIpBjH,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACY,UAAU,MAAME,WAAW,SAASZ,QAAS,EAAGS,SAAU,EAAGN,GAAI,CAAE0F,MAAO,GAAI5F,SAAA,EACnFI,EAAAA,EAAAA,KAACiH,GAAAA,EAAS,CACRF,WAAS,EACTrB,MAAO7G,EAAQqI,KACfN,SAAUX,EACVkB,YAAY,uCACZC,WAAY,CACVC,gBACErH,EAAAA,EAAAA,KAACsH,GAAAA,EAAc,CAACC,SAAS,QAAO3H,UAC9BI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,kBAAkBnB,GAAI,CAAEI,MAAO,yBAMrDF,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CAACrE,QAASgC,EAAQuC,OAAOzF,UAClCI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,oCAKpBzB,EAAAA,EAAAA,MAAC8F,GAAAA,EAAa,CACZF,KAAMtC,EAAQsC,KACdjC,QAASL,EAAQK,QACjBoC,MAAM,YACNzF,GAAI,CAAE0F,MAAO,KAAM5F,SAAA,EAEnBJ,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CACPpC,QAAS,WACPgC,EAAQK,SACV,EAAEvD,SAAA,EAEFI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,oCAAoC,YAIpDzB,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CACPpC,QAAS,WACPgC,EAAQK,SACV,EAAEvD,SAAA,EAEFI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,sBAAsB,aAItCzB,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CACPpC,QAAS,WACPgC,EAAQK,SACV,EAAEvD,SAAA,EAEFI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,sBAAsB,iBAM9C,CC/EA,IAAMuG,GAAiB,CACrBN,KAAM,GACN5H,UAAW,KACXC,QAAS,MAII,SAASkI,GAAe7I,GAA6B,IAA3B8I,EAAU9I,EAAV8I,WAAY7F,EAAWjD,EAAXiD,YAC7C8F,GAAQC,EAAAA,EAAAA,KAIRC,IAFWC,EAAAA,EAAAA,OAEAC,EAAAA,EAAAA,OAEXC,GAASC,EAAAA,EAAAA,MAETC,GAAQC,EAAAA,EAAAA,IAAS,CAAEC,eAAgB,qBAEnCzF,GAAUE,EAAAA,EAAAA,KAEhBwF,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,IAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAsCT,EAAAA,EAAAA,WAAS,GAAMU,IAAAR,EAAAA,EAAAA,GAAAO,GAAA,GAA9CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,IAElCG,EAAAA,EAAAA,YAAU,WACR,IAAI3L,EAAO,GACS,IAAhBqE,EACFrE,EAAO,eACkB,IAAhBqE,IACTrE,EAAO,cAET,IAAM4L,EAAS,eAAAlI,GAAA9D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA8L,EAAAnL,EAAAoL,EAAA,OAAAjM,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI0B,GAJ1BF,EAAAC,KAAA,EAGdW,QAAQC,IAAI,cAAekJ,GAC3BnJ,QAAQC,IAAI,eAAgBqD,QACToB,IAAfyE,EAAwB,CAAA/J,EAAAE,KAAA,SAC6B,OAAjDwL,GAA+B,IAAhB3B,EAAoB,EAAIA,EAAU/J,EAAAE,KAAA,GAClC0L,EAAAA,GAAAA,IAAwBF,GAAc,KAAD,EAApDnL,EAAMP,EAAA6L,KACZV,GAAa5K,GAAQP,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,IAEA4L,EAAAA,GAAAA,IAA+BC,QAAQ7H,IAAc,KAAD,GAAnE3D,EAAMP,EAAA6L,KACZV,GAAa5K,GAAQ,QAAAP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgM,GAAAhM,EAAA,SAIvBY,QAAQD,MAAM,2BAA0BX,EAAAgM,IAAS,yBAAAhM,EAAAe,OAAA,GAAAnB,EAAA,mBAEpD,kBAjBc,OAAA2D,EAAAhE,MAAA,KAAAC,UAAA,KAmBTyM,EAAU,eAAAC,GAAAzM,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwM,IAAA,IAAA5L,EAAA,OAAAb,EAAAA,EAAAA,KAAAK,MAAA,SAAAqM,GAAA,cAAAA,EAAAnM,KAAAmM,EAAAlM,MAAA,OAGW,GAHXkM,EAAAnM,KAAA,EAGfW,QAAQC,IAAI,QAAShB,IACjBA,EAAK,CAADuM,EAAAlM,KAAA,eAAAkM,EAAAlM,KAAA,EACed,EAAeS,GAAM,KAAD,EAAnCU,EAAM6L,EAAAP,KACZd,EAAiBxK,GAAQ,OAAA6L,EAAAlM,KAAA,gBAAAkM,EAAAnM,KAAA,EAAAmM,EAAAJ,GAAAI,EAAA,SAI3BxL,QAAQD,MAAM,6BAA4ByL,EAAAJ,IAAS,yBAAAI,EAAArL,OAAA,GAAAoL,EAAA,kBAEtD,kBAZe,OAAAD,EAAA3M,MAAA,KAAAC,UAAA,KAchBiM,IACAQ,GACF,GAAG,CAAElC,EAAY7F,EAAaoH,KAE9B,IAAAe,IAA8B1B,EAAAA,EAAAA,UAASd,IAAeyC,IAAAzB,EAAAA,EAAAA,GAAAwB,GAAA,GAA/CnL,GAAOoL,GAAA,GAAEC,GAAUD,GAAA,GAC1BE,IAA8C7B,EAAAA,EAAAA,eAAwBrF,IAAfyE,GAAyB0C,IAAA5B,EAAAA,EAAAA,GAAA2B,GAAA,GAAzEE,GAAeD,GAAA,GACtBE,IAD0CF,GAAA,IACE9B,EAAAA,EAAAA,WAAS,IAAMiC,IAAA/B,EAAAA,EAAAA,GAAA8B,GAAA,GAApDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GAElCvE,MACJnH,GAAQS,YAAaT,GAAQU,UACzBV,GAAQS,UAAUoL,UAAY7L,GAAQU,QAAQmL,UAG9CC,GAwbR,SAAoBC,GAAiD,IAA9CC,EAASD,EAATC,UAAWC,EAAUF,EAAVE,WAAYjM,EAAO+L,EAAP/L,QAASmH,EAAS4E,EAAT5E,UAC3CkB,EAA0DrI,EAA1DqI,KAAuB5H,GAAmCT,EAApDkM,OAAoDlM,EAA5CmM,QAA4CnM,EAAnCS,WAAuBC,GAAYV,EAAxBoM,WAAwBpM,EAAZU,SAEhD2L,EAAiBL,EAAUM,KAAI,SAACC,EAAIC,GAAK,MAAK,CAACD,EAAIC,EAAM,IAE/DH,EAAeI,MAAK,SAACC,EAAGC,GACtB,IAAMC,EAAQX,EAAWS,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVC,EAAoBA,EACjBF,EAAE,GAAKC,EAAE,EAClB,IAEAX,EAAYK,EAAeC,KAAI,SAACC,GAAE,OAAKA,EAAG,EAAE,IAExClE,IACF2D,EAAYA,EAAUa,QACpB,SAACC,GAAO,OACgE,IAAtEA,EAAQlJ,eAAemJ,cAAcC,QAAQ3E,EAAK0E,iBACe,IAAjED,EAAQtJ,UAAUuJ,cAAcC,QAAQ3E,EAAK0E,iBACH,IAA1CD,EAAQjJ,eAAemJ,QAAQ3E,EAAY,KAI5ClB,GACC1G,GAAaC,IACfsL,EAAYA,EAAUa,QACpB,SAACC,GAAO,OACNG,EAAAA,EAAAA,IAAWH,EAAQrJ,oBAAqBwJ,EAAAA,EAAAA,IAAWxM,KACnDwM,EAAAA,EAAAA,IAAWH,EAAQrJ,oBAAqBwJ,EAAAA,EAAAA,IAAWvM,EAAQ,KAKnE,OAAOsL,CACT,CAzdqBkB,CAAY,CAC/BlB,UAAWhC,GACXiC,YAAYkB,EAAAA,EAAAA,IAAc9D,EAAMuD,MAAOvD,EAAM+D,SAC7CpN,QAAAA,GACAmH,UAAAA,KAGIkG,GAAavB,GAAawB,MAC9BjE,EAAMkE,KAAOlE,EAAMmE,YACnBnE,EAAMkE,KAAOlE,EAAMmE,YAAcnE,EAAMmE,aAGnCC,GAAc,WAClB7B,IAAkB,EACpB,EAMM8B,GAAcrE,EAAMsE,MAAQ,GAAK,GAEjCC,KACF5N,GAAQqI,QACPrI,GAAQS,aAAeT,GAAQU,QAE9BmN,IAAa/B,GAAagC,QAAUF,KAAc9B,GAAagC,OAE/DC,GAAa,CACjB,CAAExK,GAAI,IAAK3B,MAAO,kBAClB,CAAE2B,GAAI,IAAK3B,MAAO,cAClB,CAAE2B,GAAI,IAAK3B,MAAO,UAClB,CAAE2B,GAAI,IAAK3B,MAAO,SAAUwE,MAAO,UACnC,CAAE7C,GAAI,IAAK3B,MAAO,cAAgBwE,MAAO,UACzC,CAAE7C,GAAI,IAAK3B,MAAO,KAGdoM,IAAgB3G,EAAAA,EAAAA,cACpB,SAACgB,EAAMxB,GACLwC,EAAM4E,cACN5C,IAAW,SAAC6C,GAAS,OAAArN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBqN,GAAS,IAAAC,EAAAA,EAAAA,GAAA,GACX9F,EAAOxB,GAAK,GAEjB,GACA,CAACwC,IAOG+E,IAAkB/G,EAAAA,EAAAA,cACtB,SAAC9D,GACC,IAAM8K,EAAYrE,GAAU6C,QAAO,SAAC/J,GAAG,OAAKA,EAAIS,KAAOA,CAAE,IACzD0G,GAAaoE,GAEbhF,EAAMiF,sBAAsBjB,GAAWS,OACzC,GACA,CAACT,GAAWS,OAAQzE,EAAOW,KAGvBuE,IAAmBlH,EAAAA,EAAAA,cAAY,WACnC,IAAMmH,EAAaxE,GAAU6C,QAAO,SAAC/J,GAAG,OAAMuG,EAAMtG,SAAS0L,SAAS3L,EAAIS,GAAG,IAC7E0G,GAAauE,GAEbnF,EAAMqF,uBAAuB,CAC3BC,UAAW3E,GAAU8D,OACrBc,gBAAiBvB,GAAWS,OAC5Be,kBAAmB/C,GAAagC,QAEpC,GAAG,CAAChC,GAAagC,OAAQT,GAAWS,OAAQzE,EAAOW,KAE7C8E,IAAgBzH,EAAAA,EAAAA,cACpB,SAAC9D,GACC4F,EAAO4F,KAAKC,EAAAA,EAAMC,UAAUnC,QAAQoC,cAAc3L,GACpD,GACA,CAAC4F,IAGGgG,IAAgB9H,EAAAA,EAAAA,cACpB,SAAC9D,GACC4F,EAAO4F,KAAKC,EAAAA,EAAMC,UAAUnC,QAAQsC,QAAQ7L,GAC9C,GACA,CAAC4F,IAUGkG,KAPqBhI,EAAAA,EAAAA,cACzB,SAACC,EAAOG,GACNuG,GAAc,aAAcvG,EAC9B,GACA,CAACuG,MAGwB3G,EAAAA,EAAAA,cAAY,WACrCgE,GAAW1C,GACb,GAAG,KAgDG2G,KA9CuBjI,EAAAA,EAAAA,cAAY,WACvCgE,GAAW1C,GACb,GAAG,IAGgB,SAACpF,EAAIgM,GACtB,IAAIC,EAAO,GACX,GAAIjM,EACF,OAAOA,GACL,KAAM,EACJiM,EAAO,YACP,MACF,KAAK,EACHA,EAAO,eACP,MACF,KAAK,EACHA,EAAO,QACP,MACF,KAAK,EACHA,EAAO,aACP,MACF,KAAK,EACHA,EAAO,2BAMX,OAAOD,GACL,KAAK,EACHC,EAAO,mBACP,MACF,KAAK,EACHA,EAAO,kBACP,MACF,KAAK,EACHA,EAAO,mBAOb,OAAOA,CACT,CAEgBC,CAAW5G,EAAY7F,IAGpCwI,IAAmC,IAAhBxI,IACpB+K,GAAWgB,KAAK,CAAExL,GAAI,IAAK3B,MAAO,KAClCmM,GAAWgB,KAAK,CAAExL,GAAI,IAAK3B,MAAO,MAIjC4J,IAAmBxI,EAAc,GAClC+K,GAAWgB,KAAK,CAAExL,GAAI,IAAK3B,MAAO,KAGpC,IAAM0B,GAAsB,eAAAoM,GAAAnR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkR,EAAOpM,EAAIqM,GAAK,IAAAC,EAAA,OAAArR,EAAAA,EAAAA,KAAAK,MAAA,SAAAiR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,OAC7C,IACEU,QAAQC,IAAI,qEAADT,OAAsEqE,EAAE,KAAArE,OAAI0Q,EAAK,YACtFC,EAAcb,EAAAA,EAAMe,YAAYhM,MAAMiM,iBAG5C/Q,MAAM,qEAADC,OAAsEqE,EAAE,KAAArE,OAAI0Q,EAAK,WAAW,CAC/FK,OAAQ,QACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAGlBC,MAAO,YAER/Q,MAAK,SAAAG,GAEJ,GAAIA,EAAI6Q,GAAI,CAEV,GAAmB,MAAf7Q,EAAI2M,OAEN,OADA7B,IAAgBD,IACT,KACN,GAAmB,MAAf7K,EAAI2M,OAET,OADA7B,IAAgBD,IACT7K,EAAID,OAEX,MAAM,IAAI+Q,MAAM,2BAADnR,OAA4BK,EAAI2M,QAEnD,CAEE,MAAM,IAAImE,MAAM,8BACpB,IACCjR,MAAK,SAAAG,GACN,IACCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAEd,IAGE0J,EAAOmH,QAAQT,EAKnB,CAAE,MAAOpQ,GACPC,QAAQD,MAAM,SAAUA,EAC1B,CAAC,wBAAAqQ,EAAAjQ,OAAA,GAAA8P,EAAA,KACF,gBAhD2BxR,EAAAoS,GAAA,OAAAb,EAAArR,MAAA,KAAAC,UAAA,KAkD5B,OACEqC,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAA5D,SAAA,EACEJ,EAAAA,EAAAA,MAAC6P,EAAAA,EAAS,CAACrI,UAAUa,EAASyH,cAAuB,KAAK1P,SAAA,EACxDI,EAAAA,EAAAA,KAACuP,EAAAA,EAAiB,CAChBpB,QAASA,GACTqB,MAAO,CACL,CACEtI,KAAM,YACNuI,KAAM5B,EAAAA,EAAMC,UAAU4B,MAExB,CACExI,KAAM,UACNuI,KAAM5B,EAAAA,EAAMC,UAAUnC,QAAQ+D,MAEhC,CACExI,KAAM,SAIVpH,GAAI,CACF6P,GAAI,CAAEnJ,GAAI,EAAGC,GAAI,OAIrBzG,EAAAA,EAAAA,KAAC4P,EAAAA,EAAI,CACH9P,GAAI,CACF6P,GAAI,CAAEnJ,GAAI,EAAGC,GAAI,IACjB7G,UAEFI,EAAAA,EAAAA,KAAC6P,EAAAA,EAAS,CAAAjQ,UACRI,EAAAA,EAAAA,KAACP,EAAAA,EAAK,CACJY,UAAU,MACVyP,SAAS9P,EAAAA,EAAAA,KAAC+P,EAAAA,EAAO,CAACC,YAAY,WAAWC,UAAQ,EAACnQ,GAAI,CAAE2B,YAAa,YACrE3B,GAAI,CAAEoQ,GAAI,GAAItQ,UAEdI,EAAAA,EAAAA,KAACmQ,EAAAA,EAAe,CACdvK,MAAM,QACNwK,MAAOvH,GAAU8D,OACjB0D,QAAS,IACTC,MAAOC,IAAM1H,GAAW,iBACxB5H,KAAK,+BACLf,MAAOyH,EAAM6I,QAAQC,KAAKC,cAQlClR,EAAAA,EAAAA,MAACoQ,EAAAA,EAAI,CAAAhQ,SAAA,EAGHI,EAAAA,EAAAA,KAAC+F,GAAmB,CAClBlH,QAASA,GACTC,UAAW+N,GACX7G,UAAWA,GACX2K,gBAAgBC,EAAAA,EAAAA,KAAezF,KAAI,SAAC0F,GAAM,OAAKA,CAAM,IACrDC,mBAAmBC,EAAAA,EAAAA,KAAc5F,KAAI,SAAC0F,GAAM,OAAKA,CAAM,MAGxDpE,KACCzM,EAAAA,EAAAA,KAACrB,GAAyB,CACxBE,QAASA,GACTC,UAAW+N,GAEX9N,eAAgBmP,GAEhBlP,QAAS2L,GAAagC,OACtB7M,GAAI,CAAEwB,EAAG,IAAK0P,GAAI,MAItBxR,EAAAA,EAAAA,MAACyR,EAAAA,EAAc,CAACnR,GAAI,CAAEyH,SAAU,WAAY/F,SAAU,SAAU5B,SAAA,EAC9DI,EAAAA,EAAAA,KAACkR,EAAAA,GAAmB,CAClB1E,MAAOtE,EAAMsE,MACb2E,YAAajJ,EAAMtG,SAAS+K,OAC5ByE,SAAUvI,GAAU8D,OACpB0E,gBAAiB,SAACxN,GAAO,OACvBqE,EAAMmJ,gBACJxN,EACAgF,GAAUsC,KAAI,SAACxJ,GAAG,OAAKA,EAAIS,EAAE,IAC9B,EAEH0D,QACEtG,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACY,UAAU,MAAKT,SAAA,EACpBI,EAAAA,EAAAA,KAACsR,EAAAA,EAAO,CAAC1L,MAAM,OAAMhG,UACnBI,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CAACjF,MAAM,UAASN,UACzBI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,6BAIlBjB,EAAAA,EAAAA,KAACsR,EAAAA,EAAO,CAAC1L,MAAM,WAAUhG,UACvBI,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CAACjF,MAAM,UAASN,UACzBI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,8BAIlBjB,EAAAA,EAAAA,KAACsR,EAAAA,EAAO,CAAC1L,MAAM,QAAOhG,UACpBI,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CAACjF,MAAM,UAASN,UACzBI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,yCAIlBjB,EAAAA,EAAAA,KAACsR,EAAAA,EAAO,CAAC1L,MAAM,SAAQhG,UACrBI,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CAACjF,MAAM,UAAUY,QAAS6B,EAAQ4O,OAAO3R,UAClDI,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,KAAK,yCAOxBjB,EAAAA,EAAAA,KAAC6P,EAAAA,EAAS,CAAAjQ,UACRJ,EAAAA,EAAAA,MAACgS,EAAAA,EAAK,CAAC7Q,KAAMuH,EAAMsE,MAAQ,QAAU,SAAU1M,GAAI,CAAE2R,SAAU,KAAM7R,SAAA,EACnEI,EAAAA,EAAAA,KAAC0R,EAAAA,EAAe,CACdjG,MAAOvD,EAAMuD,MACbQ,QAAS/D,EAAM+D,QACf0F,UAAW/E,GACXwE,SAAUvI,GAAU8D,OACpBwE,YAAajJ,EAAMtG,SAAS+K,OAC5BiF,OAAQ1J,EAAM0J,OACdP,gBAAiB,SAACxN,GAAO,OACvBqE,EAAMmJ,gBACJxN,EACAgF,GAAUsC,KAAI,SAACxJ,GAAG,OAAKA,EAAIS,EAAE,IAC9B,KAIL5C,EAAAA,EAAAA,MAACqS,EAAAA,EAAS,CAAAjS,SAAA,CACP+K,GACEwB,MACCjE,EAAMkE,KAAOlE,EAAMmE,YACnBnE,EAAMkE,KAAOlE,EAAMmE,YAAcnE,EAAMmE,aAExClB,KAAI,SAACxJ,GAAG,OACP3B,EAAAA,EAAAA,KAAC0B,GAAe,CAEdC,IAAKA,EACLE,YAAaA,EACbD,SAAUsG,EAAMtG,SAAS0L,SAAS3L,EAAIS,IACtCN,YAAa,kBAAMoG,EAAMpG,YAAYH,EAAIS,GAAG,EAC5CL,UAAW,kBAAMiM,GAAcrM,EAAIS,GAAG,EACtCJ,UAAW,kBAAM2L,GAAchM,EAAIS,GAAG,EACtCH,YAAa,kBAAMgL,GAAgBtL,EAAIS,GAAG,EAC1CF,WAAY,WA/UhCuI,IAAkB,EA+UgC,EAC9BtI,uBAAwB,SAACC,EAAIqM,GAAK,OAAKtM,GAAuBC,EAAIqM,EAAM,GATnE9M,EAAIS,GAUT,KAGNpC,EAAAA,EAAAA,KAAC8R,EAAAA,GAAc,CACbC,OAAQxF,GACRyF,WAAWA,EAAAA,EAAAA,IAAU9J,EAAMkE,KAAMlE,EAAMmE,YAAaxD,GAAU8D,WAGhE3M,EAAAA,EAAAA,KAACiS,EAAAA,GAAW,CAACvF,SAAUA,iBAM/B1M,EAAAA,EAAAA,KAACkS,EAAAA,GAAqB,CACpBC,MAAOxH,GAAagC,OACpBP,KAAMlE,EAAMkE,KACZC,YAAanE,EAAMmE,YACnB+F,aAAclK,EAAMmK,aACpBC,oBAAqBpK,EAAMqK,oBAE3B/F,MAAOtE,EAAMsE,MACbgG,cAAetK,EAAMsK,uBAK3BxS,EAAAA,EAAAA,KAACyF,EAAAA,EAAa,CACZL,KAAMzC,EAAQ+C,MACdvC,QAASR,EAAQgD,QACjBC,MAAM,SACNC,SACErG,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAA5D,SAAA,CAAE,gCAC4BJ,EAAAA,EAAAA,MAAA,UAAAI,SAAA,CAAQ,IAAEsI,EAAMtG,SAAS+K,OAAO,OAAU,aAG1E7G,QACE9F,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLQ,QAAQ,YACRnB,MAAM,QACNY,QAAS,WACPsM,KACAzK,EAAQgD,SACV,EAAE/F,SACH,cAMLJ,EAAAA,EAAAA,MAACiT,EAAAA,EAAM,CACLrN,KAAMoF,GACNtK,MAAM,UAENwS,aAAW,EACXvP,QAASmJ,GAAY1M,SAAA,EAGrBI,EAAAA,EAAAA,KAAC2S,EAAAA,EAAW,CAAA/S,SAAC,iBACbI,EAAAA,EAAAA,KAAC4S,EAAAA,EAAa,CAAAhT,UACZI,EAAAA,EAAAA,KAAC6S,EAAAA,EAAM,CACLnN,MAAO+C,EAAckE,OAASlE,EAAc,GAAGqK,SAAW,GAC1DlM,SAAU,SAACN,GACT/H,QAAQC,IAAI8H,EAASF,OAAOV,MAC9B,EACAqN,OAAO/S,EAAAA,EAAAA,KAACgT,EAAAA,EAAa,CAACvS,MAAM,KAC5BwS,YAAa,SAACrR,GAAQ,OAAKA,CAAQ,EACnC9B,GAAI,CAAEoT,cAAe,aAAcnM,WAAW,GAAOnH,SAEpD6I,EAAc0C,KAAI,SAAC0F,GAAM,OACxB7Q,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CAAiBwC,MAAOmL,EAAOiC,SAASlT,SAC9CiR,EAAOiC,UADKjC,EAAOzO,GAEX,SAIjB5C,EAAAA,EAAAA,MAAC2T,EAAAA,EAAa,CAAAvT,SAAA,EACZI,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASwL,GAAY1M,SAAC,WAC9BI,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAASwL,GAAY1M,SAAC,iBAMxC,CChkBe,SAASwT,GAA2BxU,GAAuB,IAApBwD,EAAExD,EAAFwD,GAAIP,EAAWjD,EAAXiD,YACtDtD,QAAQC,IAAI4D,GACZ,IAAMiR,EAAOjR,GACXpC,EAAAA,EAAAA,KAACyH,GAAe,CAACC,WAAYtF,KAC7BpC,EAAAA,EAAAA,KAACyH,GAAe,CAAC5F,YAAaA,IAClC,OACErC,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAA5D,SAAA,EACEI,EAAAA,EAAAA,KAACsT,EAAAA,GAAM,CAAA1T,UACLI,EAAAA,EAAAA,KAAA,SAAAJ,SAAO,+BAGRyT,IAGP,C","sources":["data-access/users.js","screens/components/invoice/departments/InvoiceTableFiltersResult.js","screens/components/invoice/departments/InvoiceTableRow.js","screens/components/invoice/departments/InvoiceTableToolbar.js","screens/components/invoice/departments/InvoiceListView.js","screens/invoice/departments/InvoiceListViewByDepartment.js"],"sourcesContent":["const baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\nexport async function getUsersByRole(role) {\r\n    let users = []\r\n    await fetch(`${baseUrl}/api/User/UsersNameByRole/${role}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(res => {\r\n        users = res\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return users\r\n}","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters('startDate', null);\r\n    onFilters('endDate', null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        \r\n\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nInvoiceTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableRow({\r\n  row,\r\n  selected,\r\n  salesStatus,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n  handleOpen,\r\n  handleConfirmAndReject,\r\n}) {\r\n  const { id, invoiceNo, issueInvoiceDate, invoiceAmount, region, customerNameEn, customerNameAr, sales } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  const editMenuItem = salesStatus === undefined ?\r\n       <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:pen-bold\" />\r\n          Edit\r\n        </MenuItem>\r\n    :  null;\r\n\r\n  const acceptButton = salesStatus === 0 ?\r\n    <TableCell>\r\n      <Button \r\n        variant='contained' \r\n        color='success'\r\n        onClick={() => handleConfirmAndReject(id, 'Confirm')}\r\n      >\r\n        Accept\r\n      </Button>\r\n    </TableCell>\r\n  :  null;\r\n\r\n  const rejectButton = salesStatus === 0 ?\r\n    <TableCell>\r\n      <Button \r\n        variant='contained' \r\n        color='error'\r\n        onClick={() => handleConfirmAndReject(id, 'Reject')}\r\n      >\r\n        Reject\r\n      </Button>\r\n    </TableCell>\r\n  :  null;\r\n\r\n  const assignUser = salesStatus > 0 ?\r\n    <TableCell>\r\n      <Button \r\n        variant='contained' \r\n        color='success'\r\n        onClick={handleOpen}\r\n      >\r\n        Assign {salesStatus === 1 ? 'Engineer' : 'Collector'}\r\n      </Button>\r\n    </TableCell>\r\n  :  null;\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={customerNameEn} sx={{ mr: 2 }}>\r\n            {customerNameEn.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {customerNameEn}\r\n              </Typography>\r\n            }\r\n            secondary={\r\n              <Link\r\n                noWrap\r\n                variant=\"body2\"\r\n                onClick={onViewRow}\r\n                sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n              >\r\n                {invoiceNo}\r\n              </Link>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(issueInvoiceDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(issueInvoiceDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        \r\n        <TableCell >${invoiceAmount}</TableCell>\r\n\r\n        {/* <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(dueDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(dueDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell> */}\r\n\r\n        <TableCell align=\"center\" >{region}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{customerNameAr}</TableCell>\r\n        {/* <TableCell>{fCurrency(department)}</TableCell> */}\r\n\r\n\r\n        {/* <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === 'paid' && 'success') ||\r\n              (status === 'pending' && 'warning') ||\r\n              (status === 'overdue' && 'error') ||\r\n              'default'\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell> */}\r\n\r\n        {acceptButton}\r\n\r\n        {rejectButton}\r\n\r\n        {assignUser}\r\n\r\n         <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell> \r\n\r\n        \r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        \r\n        {editMenuItem}\r\n\r\n        {/* <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem> */}\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  handleOpen: PropTypes.func,\r\n  handleConfirmAndReject: PropTypes.func,\r\n  row: PropTypes.object,\r\n  salesStatus: PropTypes.number,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  dateError,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('startDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('endDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        \r\n\r\n        \r\n\r\n        <DatePicker\r\n          label=\"Start date\"\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label=\"End date\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              error: dateError,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search customer or invoice number...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n};\r\n","import sumBy from 'lodash/sumBy';\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { useNavigate  } from 'react-router-dom';\r\n// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\nimport Tab from '@mui/material/Tab';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\n\r\n// @mui Dialog\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// _mock\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n// DATA ACCESS\r\nimport { _departments } from 'src/lists/departments'\r\nimport { _statusList } from 'src/lists/paidStatus'\r\nimport { getUsersByRole } from 'src/data-access/users';\r\n// COMPONENTS\r\nimport InvoiceAnalytic from 'src/sections/invoice/invoice-analytic';\r\nimport InvoiceTableFiltersResult from 'src/screens/components/invoice/departments/InvoiceTableFiltersResult';\r\nimport { getInvoicesByDepartment, getInvoicesBySalesConfirmation  } from 'src/data-access/invoice'\r\nimport { reject } from 'lodash';\r\nimport InvoiceTableRow from './InvoiceTableRow';\r\nimport InvoiceTableToolbar from './InvoiceTableToolbar';\r\n\r\n// ----------------------------------------------------------------------\r\nconst defaultFilters = {\r\n  name: '',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListView({department, salesStatus}) {\r\n  const theme = useTheme();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const confirm = useBoolean();\r\n  \r\n  const [assignedUsers, setAssignedUsers] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [dataUpdated, setDataUpdated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let role = '';\r\n    if (salesStatus === 1) {\r\n      role = 'installation';\r\n    } else if (salesStatus === 3) {\r\n      role = 'collection';\r\n    } \r\n    const fetchData = async () => {\r\n      try {\r\n\r\n        console.log('Department:', department)\r\n        console.log('salesStatus:', salesStatus)\r\n        if (department !== undefined) {\r\n          const departmentId = department === -1 ? 0 : department\r\n          const result = await getInvoicesByDepartment(departmentId);\r\n          setTableData(result);\r\n        } else {\r\n          const result = await getInvoicesBySalesConfirmation(Boolean(salesStatus));\r\n          setTableData(result);\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n\r\n        console.log('Role:', role)\r\n        if (role) {\r\n          const result = await getUsersByRole(role);\r\n          setAssignedUsers(result);\r\n        } \r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching users list:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchUsers();\r\n  }, [ department, salesStatus, dataUpdated]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const [isConfirmReport, setIsConfirmReport] = useState(department === undefined);\r\n  const [openAssignUser, setOpenAssignUser] = useState(false);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const handleClose = () => {\r\n    setOpenAssignUser(false)\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpenAssignUser(true)\r\n  }\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const TABLE_HEAD = [\r\n    { id: '1', label: 'Invoice Number' },\r\n    { id: '2', label: 'Issue Date' },\r\n    { id: '3', label: 'Amount' },\r\n    { id: '4', label: 'Region', align: 'center' },\r\n    { id: '5', label: 'Name Arabic' , align: 'center' },\r\n    { id: '6', label: '' },\r\n  ];\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  // Fetch data\r\n  \r\n\r\n  \r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.editOperation(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('paidStatus', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const handleConfirmInvoice = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  \r\n  const getHeading = (id, salesConfirmStatus) => {\r\n    let text = '';\r\n    if (id) {\r\n      switch(id) {\r\n        case -1:\r\n          text = 'Operation';\r\n          break;\r\n        case 1:\r\n          text = 'Installation'\r\n          break;\r\n        case 2:\r\n          text = 'Sales'\r\n          break;\r\n        case 3:\r\n          text = 'collection';\r\n          break;\r\n        case 4:\r\n          text = 'Tender And Contract';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      switch(salesConfirmStatus) {\r\n        case 0:\r\n          text = 'Confirm Invoices';\r\n          break;\r\n        case 1:\r\n          text = 'Assign Engineer'\r\n          break;\r\n        case 2:\r\n          text = 'Assign Collector'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return text;\r\n  }\r\n  \r\n  const heading = getHeading(department, salesStatus)\r\n\r\n  // Add Empty headers for Accept and reject\r\n  if(isConfirmReport && salesStatus === 0){\r\n    TABLE_HEAD.push({ id: '7', label: '' })\r\n    TABLE_HEAD.push({ id: '8', label: '' })\r\n  }\r\n\r\n  // Add Empty headers for Assign collecter/engineer\r\n  if(isConfirmReport && salesStatus > 0){\r\n    TABLE_HEAD.push({ id: '7', label: '' })\r\n  }\r\n\r\n  const handleConfirmAndReject = async (id, state) => {    \r\n    try {\r\n      console.log(`https://invoicecollectionsystemapi.azurewebsites.net/api/Invoices/${id}/${state}BySales`)\r\n      const redirectUrl = paths.departments.sales.confirm_invoices;\r\n      // Send create invoice request\r\n      \r\n      fetch(`https://invoicecollectionsystemapi.azurewebsites.net/api/Invoices/${id}/${state}BySales`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        // body: JSON.stringify(body),\r\n        Cache: 'default'\r\n      })\r\n      .then(res => {\r\n        // Check if the status code is 200 or 204\r\n        if (res.ok) {\r\n          // Check if the status code is 200 or 204\r\n          if (res.status === 204) {\r\n            setDataUpdated(!dataUpdated);\r\n            return null; // Handle 204 No Content\r\n          }  if (res.status === 200) {\r\n            setDataUpdated(!dataUpdated);\r\n            return res.json(); // Parse JSON for other successful responses\r\n          } \r\n            throw new Error(`Unexpected status code: ${res.status}`);\r\n          \r\n        } \r\n\r\n          throw new Error('Network response was not ok');\r\n      })\r\n      .then(res => {\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        // redirectUrl = ''\r\n      })\r\n\r\n      // if(redirectUrl) {\r\n        router.replace(redirectUrl);\r\n      // }\r\n\r\n      \r\n      // console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading={heading}\r\n          links={[\r\n            {\r\n              name: 'Dashboard',\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: 'Invoice',\r\n              href: paths.dashboard.invoice.root,\r\n            },\r\n            {\r\n              name: 'List',\r\n            },\r\n          ]}\r\n          \r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <InvoiceAnalytic\r\n                title=\"Total\"\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={sumBy(tableData, 'invoiceAmount')}\r\n                icon=\"solar:bill-list-bold-duotone\"\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n              \r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n           \r\n\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            dateError={dateError}\r\n            serviceOptions={_departments().map((option) => option)}\r\n            paidStatusOptions={_statusList().map((option) => option)}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Stack direction=\"row\">\r\n                  <Tooltip title=\"Sent\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"iconamoon:send-fill\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Download\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"eva:download-outline\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Print\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Stack>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <InvoiceTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        salesStatus={salesStatus}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        handleOpen={() => handleOpen()}\r\n                        handleConfirmAndReject={(id, state) => handleConfirmAndReject(id, state)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <Dialog\r\n        open={openAssignUser}\r\n        color=\"#ef5350\"\r\n        // TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n\r\n      >\r\n        <DialogTitle>Assign User</DialogTitle>\r\n        <DialogContent>\r\n          <Select\r\n            value={assignedUsers.length ? assignedUsers[0].username : ''}\r\n            onChange={(newValue) => {\r\n              console.log(newValue.target.value);\r\n            }}\r\n            input={<OutlinedInput label=\"\" />}\r\n            renderValue={(selected) => selected}\r\n            sx={{ textTransform: 'capitalize', fullWidth: true }}\r\n          >\r\n            {assignedUsers.map((option) => (\r\n              <MenuItem key={option.id} value={option.username}>\r\n                {option.username}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n          <Button onClick={handleClose}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n    const { name, status, service, startDate, paidStatus, endDate } = filters;\r\n  \r\n    const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n  \r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n  \r\n    inputData = stabilizedThis.map((el) => el[0]);\r\n  \r\n    if (name) {\r\n      inputData = inputData.filter(\r\n        (invoice) =>\r\n          invoice.customerNameEn.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.invoiceNo.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.customerNameAr.indexOf(name) !== -1\r\n      );\r\n    }\r\n  \r\n    if (!dateError) {\r\n      if (startDate && endDate) {\r\n        inputData = inputData.filter(\r\n          (invoice) =>\r\n            fTimestamp(invoice.issueInvoiceDate) >= fTimestamp(startDate) &&\r\n            fTimestamp(invoice.issueInvoiceDate) <= fTimestamp(endDate)\r\n        );\r\n      }\r\n    }\r\n  \r\n    return inputData;\r\n  }\r\n\r\n  InvoiceListView.propTypes = {\r\n    department: PropTypes.number,\r\n    salesStatus: PropTypes.number,\r\n  }","import { Helmet } from 'react-helmet-async';\r\nimport PropTypes from 'prop-types';\r\n// sections\r\nimport  InvoiceListView  from 'src/screens/components/invoice/departments/InvoiceListView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListViewByDepartment({ id, salesStatus }) {\r\n    console.log(id)\r\n    const list = id \r\n    ? <InvoiceListView department={id} />\r\n    : <InvoiceListView salesStatus={salesStatus} />\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Invoice List</title>\r\n      </Helmet>\r\n      \r\n      {list}\r\n    </>\r\n  );\r\n}\r\nInvoiceListViewByDepartment.propTypes = {\r\n    id: PropTypes.number,\r\n    salesStatus: PropTypes.number\r\n  }"],"names":["baseUrl","getUsersByRole","_x","_getUsersByRole","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","role","users","wrap","_context","prev","next","fetch","concat","mode","then","result","json","res","catch","error","console","log","abrupt","stop","InvoiceTableFiltersResult","_ref","filters","onFilters","onResetFilters","results","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","startDate","endDate","_jsxs","Stack","_objectSpread","spacing","children","Box","sx","typography","_jsx","component","color","ml","flexGrow","direction","flexWrap","alignItems","Block","label","Chip","size","onDelete","Button","onClick","startIcon","Iconify","icon","_ref2","_excluded2","Paper","variant","p","borderRadius","overflow","borderStyle","InvoiceTableRow","row","selected","salesStatus","onSelectRow","onViewRow","onEditRow","onDeleteRow","handleOpen","handleConfirmAndReject","id","invoiceNo","issueInvoiceDate","invoiceAmount","region","customerNameEn","customerNameAr","confirm","sales","useBoolean","popover","usePopover","editMenuItem","undefined","MenuItem","onClose","acceptButton","TableCell","rejectButton","assignUser","_Fragment","TableRow","hover","padding","Checkbox","checked","display","Avatar","alt","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","Typography","noWrap","secondary","Link","cursor","format","Date","primaryTypographyProps","secondaryTypographyProps","mt","align","px","IconButton","open","onOpen","CustomPopover","arrow","width","ConfirmDialog","value","onFalse","title","content","action","InvoiceTableToolbar","dateError","handleFilterName","useCallback","event","target","handleFilterStartDate","newValue","handleFilterEndDate","xs","md","pr","DatePicker","onChange","slotProps","textField","fullWidth","maxWidth","TextField","name","placeholder","InputProps","startAdornment","InputAdornment","position","defaultFilters","InvoiceListView","department","theme","useTheme","settings","useNavigate","useSettingsContext","router","useRouter","table","useTable","defaultOrderBy","_useState","useState","_useState2","_slicedToArray","assignedUsers","setAssignedUsers","_useState3","_useState4","tableData","setTableData","_useState5","_useState6","dataUpdated","setDataUpdated","useEffect","fetchData","departmentId","_result","getInvoicesByDepartment","sent","getInvoicesBySalesConfirmation","Boolean","t0","fetchUsers","_ref3","_callee2","_context2","_useState7","_useState8","setFilters","_useState9","_useState10","isConfirmReport","_useState11","_useState12","openAssignUser","setOpenAssignUser","getTime","dataFiltered","_ref5","inputData","comparator","status","service","paidStatus","stabilizedThis","map","el","index","sort","a","b","order","filter","invoice","toLowerCase","indexOf","fTimestamp","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","handleClose","denseHeight","dense","canReset","notFound","length","TABLE_HEAD","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRow","deleteRow","onUpdatePageDeleteRow","handleDeleteRows","deleteRows","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","push","paths","dashboard","editOperation","handleViewRow","details","handleResetFilters","heading","salesConfirmStatus","text","getHeading","_ref4","_callee3","state","redirectUrl","_context3","departments","confirm_invoices","method","headers","Cache","ok","Error","replace","_x2","Container","themeStretch","CustomBreadcrumbs","links","href","root","mb","Card","Scrollbar","divider","Divider","orientation","flexItem","py","InvoiceAnalytic","total","percent","price","sumBy","palette","info","main","serviceOptions","_departments","option","paidStatusOptions","_statusList","pt","TableContainer","TableSelectedAction","numSelected","rowCount","onSelectAllRows","Tooltip","onTrue","Table","minWidth","TableHeadCustom","headLabel","onSort","TableBody","TableEmptyRows","height","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","Dialog","keepMounted","DialogTitle","DialogContent","Select","username","input","OutlinedInput","renderValue","textTransform","DialogActions","InvoiceListViewByDepartment","list","Helmet"],"sourceRoot":""}