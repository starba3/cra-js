{"version":3,"file":"static/js/5585.9e3ab7fd.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","sections/_examples/mui/dialog-view/form-dialog.js","sections/_examples/mui/dialog-view/alert-dialog.js","sections/_examples/mui/dialog-view/scroll-dialog.js","sections/_examples/mui/dialog-view/simple-dialog.js","sections/_examples/mui/dialog-view/max-width-dialog.js","sections/_examples/mui/dialog-view/full-screen-dialog.js","sections/_examples/mui/dialog-view/transitions-dialog.js","sections/_examples/mui/dialog-view/index.js","pages/components/mui/dialog.js","sections/_examples/component-block.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\n// routes\nimport { RouterLink } from 'src/routes/components';\n\n// ----------------------------------------------------------------------\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    typography: 'body2',\n    alignItems: 'center',\n    color: 'text.primary',\n    display: 'inline-flex',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} href={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n\nBreadcrumbsLink.propTypes = {\n  activeLast: PropTypes.bool,\n  disabled: PropTypes.bool,\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.node,\n    name: PropTypes.string,\n  }),\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\n//\nimport LinkItem from './link-item';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nCustomBreadcrumbs.propTypes = {\n  sx: PropTypes.object,\n  action: PropTypes.node,\n  links: PropTypes.array,\n  heading: PropTypes.string,\n  moreLink: PropTypes.array,\n  activeLast: PropTypes.bool,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        width: 4,\n        height: 4,\n        borderRadius: '50%',\n        bgcolor: 'text.disabled',\n      }}\n    />\n  );\n}\n","// @mui\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n\n// ----------------------------------------------------------------------\n\nexport default function FormDialog() {\n  const dialog = useBoolean();\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"warning\" onClick={dialog.onTrue}>\n        Form Dialogs\n      </Button>\n\n      <Dialog open={dialog.value} onClose={dialog.onFalse}>\n        <DialogTitle>Subscribe</DialogTitle>\n\n        <DialogContent>\n          <Typography sx={{ mb: 3 }}>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </Typography>\n\n          <TextField\n            autoFocus\n            fullWidth\n            type=\"email\"\n            margin=\"dense\"\n            variant=\"outlined\"\n            label=\"Email Address\"\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={dialog.onFalse} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={dialog.onFalse} variant=\"contained\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","// @mui\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n\n// ----------------------------------------------------------------------\n\nexport default function AlertDialog() {\n  const dialog = useBoolean();\n\n  return (\n    <>\n      <Button color=\"info\" variant=\"outlined\" onClick={dialog.onTrue}>\n        Open alert dialog\n      </Button>\n\n      <Dialog open={dialog.value} onClose={dialog.onFalse}>\n        <DialogTitle>{`Use Google's location service?`}</DialogTitle>\n\n        <DialogContent sx={{ color: 'text.secondary' }}>\n          Let Google help apps determine location. This means sending anonymous location data to\n          Google, even when no apps are running.\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={dialog.onFalse}>\n            Disagree\n          </Button>\n          <Button variant=\"contained\" onClick={dialog.onFalse} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { useState, useRef, useEffect, useCallback } from 'react';\n// @mui\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContentText from '@mui/material/DialogContentText';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n\n// ----------------------------------------------------------------------\n\nexport default function ScrollDialog() {\n  const dialog = useBoolean();\n\n  const [scroll, setScroll] = useState('paper');\n\n  const handleClickOpen = useCallback(\n    (scrollType) => () => {\n      dialog.onTrue();\n      setScroll(scrollType);\n    },\n    [dialog]\n  );\n\n  const descriptionElementRef = useRef(null);\n\n  useEffect(() => {\n    if (dialog.value) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement) {\n        descriptionElement.focus();\n      }\n    }\n  }, [dialog.value]);\n\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={handleClickOpen('paper')} sx={{ mr: 2 }}>\n        scroll=paper\n      </Button>\n\n      <Button variant=\"outlined\" onClick={handleClickOpen('body')}>\n        scroll=body\n      </Button>\n\n      <Dialog open={dialog.value} onClose={dialog.onFalse} scroll={scroll}>\n        <DialogTitle sx={{ pb: 2 }}>Subscribe</DialogTitle>\n\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText ref={descriptionElementRef} tabIndex={-1}>\n            {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\n              )\n              .join('\\n')}\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={dialog.onFalse}>Cancel</Button>\n\n          <Button variant=\"contained\" onClick={dialog.onFalse}>\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\n// @mui\nimport List from '@mui/material/List';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// components\nimport Iconify from 'src/components/iconify';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n\n// ----------------------------------------------------------------------\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nexport default function SimpleDialog() {\n  const dialog = useBoolean();\n\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\n\n  const handleClose = useCallback(\n    (value) => {\n      dialog.onFalse();\n      setSelectedValue(value);\n    },\n    [dialog]\n  );\n\n  return (\n    <>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={dialog.onTrue}>\n        Open simple dialog\n      </Button>\n\n      <Dialog open={dialog.value} onClose={() => handleClose(selectedValue)}>\n        <DialogTitle>Set backup account</DialogTitle>\n        <List>\n          {emails.map((email) => (\n            <ListItemButton onClick={() => handleClose(email)} key={email}>\n              <Avatar\n                sx={{\n                  mr: 2,\n                  color: 'info.lighter',\n                  bgcolor: 'info.darker',\n                }}\n              >\n                <Iconify icon=\"solar:user-rounded-bold\" />\n              </Avatar>\n              <ListItemText primary={email} />\n            </ListItemButton>\n          ))}\n\n          <ListItemButton autoFocus onClick={() => handleClose('addAccount')}>\n            <Avatar sx={{ mr: 2 }}>\n              <Iconify icon=\"mingcute:add-line\" />\n            </Avatar>\n            <ListItemText primary=\"Add account\" />\n          </ListItemButton>\n        </List>\n      </Dialog>\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Switch from '@mui/material/Switch';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport Typography from '@mui/material/Typography';\nimport FormControl from '@mui/material/FormControl';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Dialog from '@mui/material/Dialog';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Select from '@mui/material/Select';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n\n// ----------------------------------------------------------------------\n\nexport default function MaxWidthDialog() {\n  const dialog = useBoolean();\n\n  const [fullWidth, setFullWidth] = useState(true);\n\n  const [maxWidth, setMaxWidth] = useState('sm');\n\n  const handleMaxWidthChange = useCallback((event) => {\n    setMaxWidth(\n      // @ts-expect-error autofill of arbitrary value is not handled.\n      event.target.value\n    );\n  }, []);\n\n  const handleFullWidthChange = useCallback((event) => {\n    setFullWidth(event.target.checked);\n  }, []);\n\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={dialog.onTrue}>\n        Max Width Dialog\n      </Button>\n\n      <Dialog\n        open={dialog.value}\n        maxWidth={maxWidth}\n        onClose={dialog.onFalse}\n        fullWidth={fullWidth}\n      >\n        <DialogTitle>Optional sizes</DialogTitle>\n\n        <DialogContent>\n          <Typography sx={{ color: 'text.secondary' }}>\n            You can set my maximum width and whether to adapt or not.\n          </Typography>\n\n          <Box\n            component=\"form\"\n            noValidate\n            sx={{\n              margin: 'auto',\n              display: 'flex',\n              width: 'fit-content',\n              flexDirection: 'column',\n            }}\n          >\n            <FormControl sx={{ my: 3, minWidth: 160 }}>\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                autoFocus\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                label=\"maxWidth\"\n                inputProps={{\n                  name: 'max-width',\n                  id: 'max-width',\n                }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\n              label=\"Full width\"\n              sx={{ mt: 1 }}\n            />\n          </Box>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={dialog.onFalse} variant=\"contained\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { forwardRef } from 'react';\n// @mui\nimport List from '@mui/material/List';\nimport Slide from '@mui/material/Slide';\nimport Button from '@mui/material/Button';\nimport AppBar from '@mui/material/AppBar';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function FullScreenDialog() {\n  const dialog = useBoolean();\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"error\" onClick={dialog.onTrue}>\n        Full Screen Dialogs\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={dialog.value}\n        onClose={dialog.onFalse}\n        TransitionComponent={Transition}\n      >\n        <AppBar position=\"relative\" color=\"default\">\n          <Toolbar>\n            <IconButton color=\"inherit\" edge=\"start\" onClick={dialog.onFalse}>\n              <Iconify icon=\"mingcute:close-line\" />\n            </IconButton>\n\n            <Typography variant=\"h6\" sx={{ flex: 1, ml: 2 }}>\n              Sound\n            </Typography>\n\n            <Button autoFocus color=\"inherit\" variant=\"contained\" onClick={dialog.onFalse}>\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          <ListItemButton>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItemButton>\n\n          <Divider />\n\n          <ListItemButton>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItemButton>\n        </List>\n      </Dialog>\n    </>\n  );\n}\n","import { forwardRef } from 'react';\n// @mui\nimport Slide from '@mui/material/Slide';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n\n// ----------------------------------------------------------------------\n\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function TransitionsDialog() {\n  const dialog = useBoolean();\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"success\" onClick={dialog.onTrue}>\n        Transitions Dialogs\n      </Button>\n\n      <Dialog\n        keepMounted\n        open={dialog.value}\n        TransitionComponent={Transition}\n        onClose={dialog.onFalse}\n      >\n        <DialogTitle>{`Use Google's location service?`}</DialogTitle>\n\n        <DialogContent sx={{ color: 'text.secondary' }}>\n          Let Google help apps determine location. This means sending anonymous location data to\n          Google, even when no apps are running.\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={dialog.onFalse}>\n            Disagree\n          </Button>\n          <Button variant=\"contained\" onClick={dialog.onFalse} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n// routes\nimport { paths } from 'src/routes/paths';\n// components\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport FormDialog from './form-dialog';\nimport AlertDialog from './alert-dialog';\nimport ScrollDialog from './scroll-dialog';\nimport SimpleDialogs from './simple-dialog';\nimport MaxWidthDialog from './max-width-dialog';\nimport FullScreenDialog from './full-screen-dialog';\nimport TransitionsDialog from './transitions-dialog';\nimport ComponentBlock from '../../component-block';\n\n// ----------------------------------------------------------------------\n\nexport default function DialogView() {\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Dialog\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Dialog' },\n            ]}\n            moreLink={['https://mui.com/components/dialogs']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 3 }} spacing={3}>\n          <ComponentBlock title=\"Simple\">\n            <SimpleDialogs />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Alerts\">\n            <AlertDialog />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Transitions\">\n            <TransitionsDialog />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Form\">\n            <FormDialog />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Full Screen\">\n            <FullScreenDialog />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Max Width Dialog\">\n            <MaxWidthDialog />\n          </ComponentBlock>\n\n          <ComponentBlock title=\"Scrolling Content Dialogs\">\n            <ScrollDialog />\n          </ComponentBlock>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport DialogView from 'src/sections/_examples/mui/dialog-view';\n\n// ----------------------------------------------------------------------\n\nexport default function DialogPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: Dialog</title>\n      </Helmet>\n\n      <DialogView />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport CardHeader from '@mui/material/CardHeader';\nimport Stack from '@mui/material/Stack';\n\n// ----------------------------------------------------------------------\n\nexport default function ComponentBlock({ title, sx, children, ...other }) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        borderStyle: 'dashed',\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n\n      <Stack\n        spacing={3}\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexWrap=\"wrap\"\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n        {...other}\n      >\n        {children}\n      </Stack>\n    </Paper>\n  );\n}\n\nComponentBlock.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n  title: PropTypes.string,\n};\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","FormDialog","dialog","useBoolean","Button","onClick","onTrue","Dialog","open","value","onClose","onFalse","DialogTitle","DialogContent","mb","TextField","autoFocus","fullWidth","type","margin","label","DialogActions","AlertDialog","ScrollDialog","_useState","useState","_useState2","_slicedToArray","scroll","setScroll","handleClickOpen","useCallback","scrollType","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","pb","dividers","DialogContentText","ref","tabIndex","_toConsumableArray","Array","join","emails","SimpleDialog","selectedValue","setSelectedValue","handleClose","List","email","ListItemButton","Avatar","Iconify","ListItemText","primary","MaxWidthDialog","setFullWidth","_useState3","_useState4","maxWidth","setMaxWidth","handleMaxWidthChange","event","handleFullWidthChange","checked","noValidate","flexDirection","FormControl","my","minWidth","InputLabel","htmlFor","Select","onChange","inputProps","id","MenuItem","FormControlLabel","control","Switch","Transition","forwardRef","props","Slide","FullScreenDialog","fullScreen","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","flex","ml","secondary","Divider","TransitionsDialog","keepMounted","DialogView","py","theme","palette","mode","Container","paths","components","Masonry","columns","xs","md","spacing","ComponentBlock","title","SimpleDialogs","DialogPage","Helmet","Paper","borderStyle","alpha","grey","CardHeader","justifyContent","flexWrap","p","minHeight"],"sourceRoot":""}