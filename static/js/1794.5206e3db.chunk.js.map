{"version":3,"file":"static/js/1794.5206e3db.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","sections/_examples/mui/data-grid-view/data-grid-basic.js","sections/_examples/mui/data-grid-view/data-grid-custom.js","sections/_examples/mui/data-grid-view/index.js","pages/components/mui/data-grid.js","utils/format-number.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\n// routes\nimport { RouterLink } from 'src/routes/components';\n\n// ----------------------------------------------------------------------\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    typography: 'body2',\n    alignItems: 'center',\n    color: 'text.primary',\n    display: 'inline-flex',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} href={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n\nBreadcrumbsLink.propTypes = {\n  activeLast: PropTypes.bool,\n  disabled: PropTypes.bool,\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.node,\n    name: PropTypes.string,\n  }),\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\n//\nimport LinkItem from './link-item';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nCustomBreadcrumbs.propTypes = {\n  sx: PropTypes.object,\n  action: PropTypes.node,\n  links: PropTypes.array,\n  heading: PropTypes.string,\n  moreLink: PropTypes.array,\n  activeLast: PropTypes.bool,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        width: 4,\n        height: 4,\n        borderRadius: '50%',\n        bgcolor: 'text.disabled',\n      }}\n    />\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport IconButton from '@mui/material/IconButton';\nimport { DataGrid } from '@mui/x-data-grid';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  {\n    field: 'id',\n    headerName: 'ID',\n    width: 120,\n  },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 120,\n    editable: true,\n    align: 'center',\n    headerAlign: 'center',\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    flex: 1,\n    valueGetter: (params) => `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    disableColumnMenu: true,\n    renderCell: () => (\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    ),\n  },\n];\n\nexport default function DataGridBasic({ data }) {\n  return <DataGrid columns={columns} rows={data} checkboxSelection disableRowSelectionOnClick />;\n}\n\nDataGridBasic.propTypes = {\n  data: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Rating from '@mui/material/Rating';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { DataGrid, GridToolbar, getGridNumericOperators } from '@mui/x-data-grid';\n// utils\nimport { fPercent } from 'src/utils/format-number';\n// components\nimport Label from 'src/components/label';\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  {\n    field: 'id',\n  },\n  {\n    field: 'avatar',\n    headerName: 'Avatar',\n    align: 'center',\n    headerAlign: 'center',\n    width: 64,\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <Avatar alt={params.row.name} sx={{ width: 36, height: 36 }}>\n        {params.row.name.charAt(0).toUpperCase()}\n      </Avatar>\n    ),\n  },\n  {\n    field: 'name',\n    headerName: 'Name',\n    flex: 1,\n    editable: true,\n  },\n  {\n    field: 'email',\n    headerName: 'Email',\n    flex: 1,\n    editable: true,\n    renderCell: (params) => (\n      <Typography variant=\"body2\" sx={{ textDecoration: 'underline' }} noWrap>\n        {params.row.email}\n      </Typography>\n    ),\n  },\n  {\n    field: 'lastLogin',\n    type: 'dateTime',\n    headerName: 'Last login',\n    align: 'right',\n    headerAlign: 'right',\n    width: 200,\n  },\n  {\n    field: 'rating',\n    type: 'number',\n    headerName: 'Rating',\n    width: 160,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <Rating size=\"small\" value={params.row.rating} precision={0.5} readOnly />\n    ),\n  },\n  {\n    field: 'status',\n    type: 'singleSelect',\n    headerName: 'Status',\n    valueOptions: ['online', 'alway', 'busy'],\n    align: 'center',\n    headerAlign: 'center',\n    width: 120,\n    renderCell: (params) => (\n      <Label\n        variant=\"soft\"\n        color={\n          (params.row.status === 'busy' && 'error') ||\n          (params.row.status === 'alway' && 'warning') ||\n          'success'\n        }\n        sx={{ mx: 'auto' }}\n      >\n        {params.row.status}\n      </Label>\n    ),\n  },\n  {\n    field: 'isAdmin',\n    type: 'boolean',\n    align: 'center',\n    headerAlign: 'center',\n    width: 120,\n\n    renderCell: (params) =>\n      params.row.isAdmin ? (\n        <Iconify icon=\"eva:checkmark-circle-2-fill\" sx={{ color: 'primary.main' }} />\n      ) : (\n        '-'\n      ),\n  },\n  {\n    field: 'performance',\n    type: 'number',\n    headerName: 'Performance',\n    align: 'center',\n    headerAlign: 'center',\n    width: 160,\n    renderCell: (params) => (\n      <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 1, width: 1, height: 1 }}>\n        <LinearProgress\n          value={params.row.performance}\n          variant=\"determinate\"\n          color={\n            (params.row.performance < 30 && 'error') ||\n            (params.row.performance > 30 && params.row.performance < 70 && 'warning') ||\n            'primary'\n          }\n          sx={{ width: 1, height: 6 }}\n        />\n        <Typography variant=\"caption\" sx={{ width: 80 }}>\n          {fPercent(params.row.performance)}\n        </Typography>\n      </Stack>\n    ),\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    align: 'right',\n    width: 80,\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <IconButton onClick={() => console.info('ID', params.row.id)}>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    ),\n  },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function DataGridCustom({ data }) {\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const [columnVisibilityModel, setColumnVisibilityModel] = useState({\n    id: false,\n  });\n\n  if (columns.length) {\n    const ratingColumn = columns.find((column) => column.field === 'rating');\n\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\n\n    const ratingFilterOperators = getGridNumericOperators().map((operator) => ({\n      ...operator,\n      InputComponent: RatingInputValue,\n    }));\n    columns[ratingColIndex] = {\n      ...ratingColumn,\n      filterOperators: ratingFilterOperators,\n    };\n  }\n\n  const handleChangeColumnVisibilityModel = useCallback((newModel) => {\n    setColumnVisibilityModel(newModel);\n  }, []);\n\n  const hiddenFields = ['id', 'action'];\n\n  const getTogglableColumns = () =>\n    columns.filter((column) => !hiddenFields.includes(column.field)).map((column) => column.field);\n\n  const selected = data.filter((row) => selectedRows.includes(row.id));\n\n  console.info('SELECTED ROWS', selected);\n\n  return (\n    <DataGrid\n      checkboxSelection\n      disableRowSelectionOnClick\n      rows={data}\n      columns={columns}\n      onRowSelectionModelChange={(newSelectionModel) => {\n        setSelectedRows(newSelectionModel);\n      }}\n      columnVisibilityModel={columnVisibilityModel}\n      onColumnVisibilityModelChange={handleChangeColumnVisibilityModel}\n      slots={{\n        toolbar: GridToolbar,\n      }}\n      slotProps={{\n        columnsPanel: {\n          getTogglableColumns,\n        },\n      }}\n    />\n  );\n}\n\nDataGridCustom.propTypes = {\n  data: PropTypes.array,\n};\n\n// ----------------------------------------------------------------------\n\nfunction RatingInputValue({ item, applyValue }) {\n  return (\n    <Box sx={{ p: 1, height: 1, alignItems: 'flex-end', display: 'flex' }}>\n      <Rating\n        size=\"small\"\n        precision={0.5}\n        placeholder=\"Filter value\"\n        value={Number(item.value)}\n        onChange={(event, newValue) => {\n          applyValue({ ...item, value: newValue });\n        }}\n      />\n    </Box>\n  );\n}\n\nRatingInputValue.propTypes = {\n  applyValue: PropTypes.func,\n  item: PropTypes.object,\n};\n","// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\n// routes\nimport { paths } from 'src/routes/paths';\n// _mock\nimport { _mock } from 'src/_mock';\n// components\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport DataGridBasic from './data-grid-basic';\nimport DataGridCustom from './data-grid-custom';\n\n// ----------------------------------------------------------------------\n\nconst _dataGrid = [...Array(20)].map((_, index) => {\n  const status =\n    (index % 2 && 'online') || (index % 3 && 'alway') || (index % 4 && 'busy') || 'offline';\n\n  return {\n    id: _mock.id(index),\n    status,\n    email: _mock.email(index),\n    name: _mock.fullName(index),\n    age: _mock.number.age(index),\n    lastLogin: _mock.time(index),\n    isAdmin: _mock.boolean(index),\n    lastName: _mock.lastName(index),\n    rating: _mock.number.rating(index),\n    firstName: _mock.firstName(index),\n    performance: _mock.number.percent(index),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function DataGridView() {\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"DataGrid\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'DataGrid' },\n            ]}\n            moreLink={['https://mui.com/x/react-data-grid/']}\n            sx={{ mb: 0 }}\n          />\n\n          <Typography variant=\"body2\" sx={{ my: 3 }}>\n            This component includes 2 <strong>Free</strong> and <strong>Paid</strong> versions from\n            MUI.\n            <br />\n            Paid version will have more features. Please read more{' '}\n            <Link href=\"https://mui.com/x/react-data-grid/\" target=\"_blank\" rel=\"noopener\">\n              here\n            </Link>\n          </Typography>\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Basic\" sx={{ mb: 2 }} />\n            <Box sx={{ height: 390 }}>\n              <DataGridBasic data={_dataGrid} />\n            </Box>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Custom\" sx={{ mb: 2 }} />\n            <Box sx={{ height: 720 }}>\n              <DataGridCustom data={_dataGrid} />\n            </Box>\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport DataGridView from 'src/sections/_examples/mui/data-grid-view';\n\n// ----------------------------------------------------------------------\n\nexport default function DataGridPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI: DataGrid</title>\n      </Helmet>\n\n      <DataGridView />\n    </>\n  );\n}\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('SAR0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","columns","field","headerName","editable","type","align","headerAlign","description","flex","valueGetter","params","concat","row","firstName","lastName","sortable","disableColumnMenu","renderCell","IconButton","Iconify","DataGridBasic","data","DataGrid","rows","checkboxSelection","disableRowSelectionOnClick","filterable","Avatar","alt","charAt","toUpperCase","textDecoration","noWrap","email","Rating","size","value","rating","precision","readOnly","valueOptions","Label","status","mx","isAdmin","spacing","px","LinearProgress","performance","fPercent","onClick","console","info","id","DataGridCustom","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","_useState3","_useState4","columnVisibilityModel","setColumnVisibilityModel","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericOperators","operator","InputComponent","RatingInputValue","filterOperators","handleChangeColumnVisibilityModel","useCallback","newModel","hiddenFields","selected","filter","includes","onRowSelectionModelChange","newSelectionModel","onColumnVisibilityModelChange","slots","toolbar","GridToolbar","slotProps","columnsPanel","getTogglableColumns","_ref2","item","applyValue","p","placeholder","Number","onChange","event","newValue","_dataGrid","_toConsumableArray","Array","_","index","_mock","fullName","age","number","lastLogin","time","boolean","percent","DataGridView","py","theme","palette","mode","Container","paths","components","mb","my","Card","CardHeader","title","DataGridPage","Helmet","fNumber","numeral","format","fCurrency","result","fShortenNumber","fData","key","arguments","undefined","replace"],"sourceRoot":""}