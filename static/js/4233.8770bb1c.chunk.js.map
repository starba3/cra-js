{"version":3,"file":"static/js/4233.8770bb1c.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","data-access/customers.js","data-access/products.js","screens/components/dialogs/AddressListDialog.js","screens/components/dialogs/AddressListDialogSales.js","screens/components/dialogs/ProductsListDialog.js","screens/components/invoice/create/invoice-new-edit-address.js","screens/components/invoice/create/invoice-new-edit-status-date.js","screens/components/invoice/create/invoice-new-edit-form.js","screens/components/invoice/create/InvoiceCreateView.js","screens/invoice/InvoiceCreatePage.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\n// routes\nimport { RouterLink } from 'src/routes/components';\n\n// ----------------------------------------------------------------------\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    typography: 'body2',\n    alignItems: 'center',\n    color: 'text.primary',\n    display: 'inline-flex',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} href={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n\nBreadcrumbsLink.propTypes = {\n  activeLast: PropTypes.bool,\n  disabled: PropTypes.bool,\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.node,\n    name: PropTypes.string,\n  }),\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\n//\nimport LinkItem from './link-item';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nCustomBreadcrumbs.propTypes = {\n  sx: PropTypes.object,\n  action: PropTypes.node,\n  links: PropTypes.array,\n  heading: PropTypes.string,\n  moreLink: PropTypes.array,\n  activeLast: PropTypes.bool,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        width: 4,\n        height: 4,\n        borderRadius: '50%',\n        bgcolor: 'text.disabled',\n      }}\n    />\n  );\n}\n","const baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\nexport async function getAllCustomers() {\r\n    let list = [];\r\n    await fetch(`${baseUrl}/customer`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices;\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n\r\n}\r\n\r\nexport async function GetAllCustomersWithAll() {\r\n\r\n    const list = [{\r\n        \"id\": \"0\",\r\n        \"customerCode\": \"All\",\r\n        \"customerNameEn\": \"All\",\r\n        \"customerNameAr\": \"All\",\r\n    }];\r\n    await fetch(`${baseUrl}/customer`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n\r\n        // Add all invoices to the list\r\n        list.push(...invoices);\r\n    })\r\n    .catch(error => console.log())\r\n    console.log('List: '. list);\r\n    return list\r\n\r\n}\r\n\r\nexport async function getSalesPersonList() {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/User/UsersNameByRole/sales`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n\r\n}\r\n\r\nexport async  function getCustomerById(id) {\r\n    try {\r\n        const response = await fetch(`${baseUrl}/Customer/${id}`, {\r\n            mode: 'cors'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const invoice = await response.json();\r\n            return invoice;\r\n        } \r\n            // Handle non-successful response here if needed.\r\n            console.error(`Failed to fetch invoice: ${response.status} - ${response.statusText}`);\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return {}; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport async function deleteCustomer(id) {\r\n    let success = true;\r\n    await fetch(`${baseUrl}/Customer/${id}/Delete`, {\r\n        mode:'cors',\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        Cache: 'default'\r\n    })\r\n    .then(res => {\r\n        // Check if the status code is 200 or 204\r\n        if (res.ok) {\r\n          // Check if the status code is 200 or 204\r\n          if (res.status === 204) {\r\n            return null; // Handle 204 No Content\r\n          }  if (res.status === 200) {\r\n            return res.json(); // Parse JSON for other successful responses\r\n          } \r\n\r\n          throw new Error(`Unexpected status code: ${res.status}`);\r\n          \r\n        } \r\n\r\n        throw new Error('Network response was not ok');\r\n      })\r\n    .then(invoices => {\r\n        console.log(\"Deleted successfuly\")\r\n    })\r\n    .catch(error => {\r\n        console.log(error) \r\n        success = false;\r\n    })\r\n\r\n    return success;\r\n}","const baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\nexport async function getAllProducts() {\r\n    let list = [];\r\n    await fetch(`${baseUrl}/Product`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices;\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n\r\n}\r\nexport async function deleteProduct(id) {\r\n    let success = true;\r\n    await fetch(`${baseUrl}/Product/${id}/Delete`, {\r\n        mode:'cors',\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        Cache: 'default'\r\n    })\r\n    .then(res => {\r\n        // Check if the status code is 200 or 204\r\n        if (res.ok) {\r\n          // Check if the status code is 200 or 204\r\n          if (res.status === 204) {\r\n            return null; // Handle 204 No Content\r\n          }  if (res.status === 200) {\r\n            return res.json(); // Parse JSON for other successful responses\r\n          } \r\n\r\n          throw new Error(`Unexpected status code: ${res.status}`);\r\n          \r\n        } \r\n\r\n        throw new Error('Network response was not ok');\r\n      })\r\n    .then(invoices => {\r\n        console.log(\"Deleted successfuly\")\r\n    })\r\n    .catch(error => {\r\n        console.log(error) \r\n        success = false;\r\n    })\r\n\r\n    return success;\r\n}\r\n\r\nexport async  function getProductById(id) {\r\n    try {\r\n        const response = await fetch(`${baseUrl}/Product/${id}`, {\r\n            mode: 'cors'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const invoice = await response.json();\r\n            return invoice;\r\n        } \r\n            // Handle non-successful response here if needed.\r\n            console.error(`Failed to fetch invoice: ${response.status} - ${response.statusText}`);\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return {}; // Return an empty object by default or handle errors as needed.\r\n    \r\n}","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AddressListDialog({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n\r\n  const { t } = useLocales()\r\n\r\n  const Translate = (text) => t(text);\r\n\r\n  const [searchAddress, setSearchAddress] = useState('');\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address) => (\r\n        <Stack\r\n          key={address.id}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\">{Translate(\"code\")}: {address.customerCode}</Typography>\r\n          </Stack>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"nameEnglish\")}: {address.customerNameEn}\r\n          </Typography>\r\n\r\n          \r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"nameArabic\")}: {address.customerNameAr}\r\n          </Typography>\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        {action && action}\r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder={Translate(\"searchCustomer\")}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nAddressListDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.customerCode.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameEn.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameAr.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AddressListDialogSales({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n  const [searchAddress, setSearchAddress] = useState('');\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address) => (\r\n        <Stack\r\n          key={address.id}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\" textTransform=\"bold\">{address.username}</Typography> \r\n        </Stack>\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        {action && action}\r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder=\"Search...\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nAddressListDialogSales.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.username.toLowerCase().indexOf(query.toLowerCase()) !== -1 \r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProductsListDialog({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n\r\n  const { t } = useLocales()\r\n\r\n  const Translate = (text) => t(text);\r\n\r\n  const [searchAddress, setSearchAddress] = useState('');\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (product) => {\r\n      onSelect(product);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address) => (\r\n        <Stack\r\n          key={address.id}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\">{Translate(\"code\")}: {address.code}</Typography>\r\n          </Stack>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"nameEnglish\")}: {address.nameEn}\r\n          </Typography>\r\n\r\n          \r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {Translate(\"nameArabic\")}: {address.nameAr}\r\n          </Typography>\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        {action && action}\r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder={Translate(\"searchCustomer\")}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nProductsListDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.code.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.nameEn.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.nameAr.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import { useState, useCallback, useEffect } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n// lists\r\nimport { getAllCustomers, getSalesPersonList } from 'src/data-access/customers';\r\nimport { getAllProducts } from 'src/data-access/products';\r\nimport  AddressListDialog  from '../../dialogs/AddressListDialog';\r\nimport  AddressListDialogSales  from '../../dialogs/AddressListDialogSales';\r\nimport  ProductsListDialog  from '../../dialogs/ProductsListDialog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditAddress() {\r\n  \r\n  const {\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n  \r\n  const [customersList, setCustomersList] = useState([]);\r\n  const [productsList, setProductsList] = useState([]);\r\n  const [salesPersonList, setSalesPersonList] = useState([]);\r\n  const [openProductDialog, setOpenProductDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCustomers = async () => {\r\n      try {\r\n        const result = await getAllCustomers();\r\n        setCustomersList(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const result = await getAllProducts();\r\n        setProductsList(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchSalesPersonList = async () => {\r\n      try {\r\n        const result = await getSalesPersonList();\r\n        setSalesPersonList(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomers();\r\n    fetchProducts();\r\n    fetchSalesPersonList();\r\n    \r\n  }, []);\r\n\r\n\r\n  const selectedCustomer = {};\r\n  const selectedSalesPerson = {};\r\n\r\n  // const updateCustomer = (customer) => {\r\n  //   console.log(customer)\r\n  //   selectedCustomer.customerCode = customer.customerCode\r\n  //   selectedCustomer.customerNameAr = customer.customerNameAr\r\n  //   selectedCustomer.customerNameEn = customer.customerNameEn\r\n  //   console.log('selectedCustomer', customer)\r\n  // }\r\n\r\n  // const updateSalesPerson = (person) => {\r\n  //   getSalesPersonList.username = person.salesPeople\r\n  // }\r\n\r\n  // const updateProduct = (product) => {\r\n  //   selectedSalesPerson.username = person.salesPeople\r\n  // }\r\n\r\n\r\n  const mdUp = useResponsive('up', 'md');\r\n\r\n  const values = watch();\r\n\r\n  const { customerId, customerCode, productCode, salesPerson, customerObj, productObj, salesPersonObj } = values;\r\n\r\n  console.log('values', values)\r\n\r\n  const from = useBoolean();\r\n\r\n  const to = useBoolean();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={{ xs: 3, md: 5 }}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        divider={\r\n          <Divider\r\n            flexItem\r\n            orientation={mdUp ? 'vertical' : 'horizontal'}\r\n            sx={{ borderStyle: 'dashed' }}\r\n          />\r\n        }\r\n        sx={{ p: 3 }}\r\n      >\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n            {Translate(\"customer\")}:\r\n            </Typography>\r\n\r\n            <IconButton onClick={from.onTrue}>\r\n              <Iconify icon=\"solar:pen-bold\" />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"subtitle2\">{Translate(\"code\")}: {customerObj?.customerCode}</Typography>\r\n            <Typography variant=\"body2\">{Translate(\"nameEnglish\")}: {customerObj?.customerNameEn}</Typography>\r\n            <Typography variant=\"body2\">{Translate(\"nameArabic\")}:  {customerObj?.customerNameAr}</Typography> \r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n            {Translate(\"salesPerson\")}:\r\n            </Typography>\r\n\r\n            <IconButton onClick={to.onTrue}>\r\n              <Iconify icon={salesPersonList ? 'solar:pen-bold' : 'mingcute:add-line'} />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          {salesPersonList ? (\r\n            <Stack spacing={1}>\r\n              <Typography variant=\"subtitle2\">{salesPersonObj?.username}</Typography>\r\n            </Stack>\r\n          ) : (\r\n            <Typography typography=\"caption\" sx={{ color: 'error.main' }}>\r\n              {errors.salesPeople?.message}\r\n            </Typography>\r\n          )}\r\n        </Stack>\r\n\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n            {Translate(\"product\")}:\r\n            </Typography>\r\n\r\n            <IconButton onClick={() => setOpenProductDialog(true)}>\r\n              <Iconify icon=\"solar:pen-bold\" />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"subtitle2\">{Translate(\"code\")}: {productObj?.code}</Typography>\r\n            <Typography variant=\"body2\">{Translate(\"nameEnglish\")}: {productObj?.nameEn}</Typography>\r\n            <Typography variant=\"body2\">{Translate(\"nameArabic\")}:  {productObj?.nameAr}</Typography> \r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <AddressListDialog\r\n        title={Translate(\"customers\")}\r\n        open={from.value}\r\n        onClose={from.onFalse}\r\n        selected={(selectedId) => customersList.id === selectedId}\r\n        onSelect={(customer) =>  {\r\n          setValue('customerObj', customer)\r\n          setValue('customerId', customer.id)\r\n          setValue('customerCode', customer.customerCode)\r\n        } }\r\n        list={customersList}\r\n        // action={\r\n        //   <Button\r\n        //     size=\"small\"\r\n        //     startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n        //     sx={{ alignSelf: 'flex-end' }}\r\n        //   >\r\n        //     New\r\n        //   </Button>\r\n        // }\r\n      />\r\n        \r\n       <AddressListDialogSales\r\n        title={Translate(\"sales\")}\r\n        open={to.value}\r\n        onClose={to.onFalse}\r\n        selected={(selectedId) => salesPersonList?.id === selectedId}\r\n        onSelect={(person) => {\r\n          setValue( 'salesPersonObj', person)\r\n          setValue('salesPerson', person.username)\r\n        }}\r\n        list={salesPersonList}\r\n        // action={\r\n        //   <Button\r\n        //     size=\"small\"\r\n        //     startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n        //     sx={{ alignSelf: 'flex-end' }}\r\n        //   >\r\n        //     New\r\n        //   </Button>\r\n        // }\r\n      /> \r\n\r\n      <ProductsListDialog\r\n        title={Translate(\"product\")}\r\n        open={openProductDialog}\r\n        onClose={() => setOpenProductDialog(false)}\r\n        selected={(selectedId) => productsList?.id === selectedId}\r\n        onSelect={(person) => {\r\n          setValue('productObj', person)\r\n          setValue('productCode', person.code)\r\n        }}\r\n        list={productsList}\r\n        // action={\r\n        //   <Button\r\n        //     size=\"small\"\r\n        //     startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n        //     sx={{ alignSelf: 'flex-end' }}\r\n        //   >\r\n        //     New\r\n        //   </Button>\r\n        // }\r\n      /> \r\n    </>\r\n  );\r\n}\r\n","import { useFormContext, Controller } from 'react-hook-form';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport { RHFSelect, RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditStatusDate() {\r\n  const { control, watch } = useFormContext();\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const values = watch();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        direction={{ xs: 'column', sm: 'row' }}\r\n        sx={{ p: 3 }}\r\n      >\r\n        <RHFTextField\r\n          name=\"invoiceNumber\"\r\n          label={Translate(\"invoiceNumber\")}\r\n          value={values.invoiceNumber}\r\n        />\r\n        \r\n        <Controller\r\n          name=\"createDate\"\r\n          control={control}\r\n          render={({ field, fieldState: { error } }) => (\r\n            <DatePicker\r\n              label={Translate(\"createDate\")}\r\n              value={field.value}\r\n              onChange={(newValue) => {\r\n                field.onChange(newValue);\r\n              }}\r\n              slotProps={{\r\n                textField: {\r\n                  fullWidth: true,\r\n                  error: !!error,\r\n                  helperText: error?.message,\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"deliveryDate\"\r\n          control={control}\r\n          render={({ field, fieldState: { error } }) => (\r\n            <DatePicker\r\n              label={Translate(\"deliveryDate\")}\r\n              value={field.value}\r\n              onChange={(newValue) => {\r\n                field.onChange(newValue);\r\n              }}\r\n              slotProps={{\r\n                textField: {\r\n                  fullWidth: true,\r\n                  error: !!error,\r\n                  helperText: error?.message,\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <RHFTextField\r\n          name=\"invoiceAmount\"\r\n          label={Translate(\"invoiceAmount\")}\r\n          value={values.invoiceAmount}\r\n          type=\"number\"\r\n        />\r\n\r\n\r\n        \r\n        \r\n        \r\n      </Stack>\r\n\r\n      <Stack\r\n      spacing={2}\r\n      direction={{ xs: 'column', sm: 'row' }}\r\n      sx={{ p: 3 }}\r\n      >\r\n        <RHFTextField\r\n          name=\"currency\"\r\n          label={Translate(\"currency\")}\r\n          value={values.currency}\r\n        />\r\n\r\n        <RHFTextField\r\n          name=\"region\"\r\n          label={Translate(\"region\")}\r\n          value={values.region}\r\n        />\r\n\r\n        <RHFTextField\r\n          name=\"customerPO\"\r\n          label={Translate(\"PoNumber\")}\r\n          value={values.customerPO}\r\n        />\r\n\r\n        <RHFTextField\r\n          name=\"poValue\"\r\n          label={Translate(\"POValue\")}\r\n          value={values.poValue}\r\n          type=\"number\"\r\n        />\r\n\r\n        <RHFTextField\r\n          name=\"contractNo\"\r\n          label={Translate(\"contract\")}\r\n          value={values.contractNo}\r\n        />\r\n      </Stack>\r\n\r\n    </>\r\n\r\n    \r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useLocales } from 'src/locales';\r\nimport { useMemo } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport FormProvider from 'src/components/hook-form';\r\nimport InvoiceNewEditAddress from './invoice-new-edit-address';\r\nimport InvoiceNewEditStatusDate from './invoice-new-edit-status-date';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditForm({ currentInvoice }) {\r\n  const router = useRouter();\r\n\r\n  const loadingSave = useBoolean();\r\n\r\n  const loadingSend = useBoolean();\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  const NewInvoiceSchema = Yup.object().shape({\r\n    customerId: Yup.mixed().nullable().required('Customer is required'),\r\n    createDate: Yup.mixed().nullable().required('Create date is required'),\r\n    deliveryDate: Yup.mixed().nullable().required('Delivery date is required'),\r\n    invoiceNumber: Yup.string().required('Invoice number is required'),\r\n    invoiceAmount: Yup.date().required('Invoice amount is required'),\r\n    currency: Yup.string().required('Currency is required'),\r\n    customerCode: Yup.string().required('Customer code is required'),\r\n    region: Yup.string().required('Region is required'),\r\n    productCode: Yup.string().required('Product code is required'),\r\n    customerPO: Yup.string(),\r\n    poValue: Yup.number(),\r\n    contractNo: Yup.string(),\r\n    salesPerson: Yup.string().required('salesPerson is required'),\r\n\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      customerObj: {},\r\n      productObj: {},\r\n      salesPersonObj: {},\r\n      invoiceNumber: currentInvoice?.invoiceNumber,\r\n      createDate: currentInvoice?.createDate || new Date(),\r\n      invoiceAmount: currentInvoice?.invoiceAmount,\r\n      currency: currentInvoice?.currency,\r\n      customerId: currentInvoice?.customerId,\r\n      customerCode: currentInvoice?.customerCode,\r\n      region: currentInvoice?.region,\r\n      customerPO: currentInvoice?.customerPO,\r\n      productCode: currentInvoice?.productCode,\r\n      poValue: currentInvoice?.poValue,\r\n      contractNo: currentInvoice?.contractNo,\r\n      salesPerson: currentInvoice?.salesPerson,\r\n      deliveryDate: currentInvoice?.deliveryDate || new Date(),\r\n      \r\n    }),\r\n    [currentInvoice]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewInvoiceSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const handleCreateAndSend = handleSubmit(async (data) => {\r\n    loadingSend.onTrue(); \r\n    \r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      \r\n      const {invoiceNumber, createDate, invoiceAmount, currency, customerCode, productCode, region, customerPO, poValue, contractNo, salesPerson, deliveryDate} = watch()\r\n      const body = {\r\n        invoiceNo: invoiceNumber,\r\n        issueInvoiceDate: createDate,\r\n        invoiceAmount,\r\n        currency,\r\n        customerCode,\r\n        productCode,\r\n        region,\r\n        customerPO,\r\n        poValue,\r\n        contractNo,\r\n        salesTakerUsername: salesPerson,\r\n        deliveryDate\r\n      }\r\n\r\n\r\n      reset();\r\n      loadingSend.onFalse();\r\n\r\n      let redirectUrl = paths.dashboard.invoice.root\r\n      // Send create invoice request\r\n      \r\n      console.log(body)\r\n      fetch('https://invoicecollectionsystemapi.azurewebsites.net/api/Invoices', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        Cache: 'default'\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res)\r\n        \r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        redirectUrl = ''\r\n      })\r\n\r\n      if(redirectUrl) {\r\n        router.replace(redirectUrl);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      loadingSend.onFalse();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleCreateAndSend} >\r\n      <Card>\r\n        <InvoiceNewEditAddress />\r\n        <InvoiceNewEditStatusDate />\r\n\r\n      </Card>\r\n\r\n      <Stack justifyContent=\"flex-end\" direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n        <LoadingButton\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          loading={loadingSend.value && isSubmitting}\r\n          type='submit'\r\n        >\r\n          {currentInvoice ? Translate(\"update\") : Translate(\"create\")} \r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nInvoiceNewEditForm.propTypes = {\r\n  currentInvoice: PropTypes.object,\r\n};\r\n","// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport { useLocales } from 'src/locales';\r\nimport InvoiceNewEditForm from './invoice-new-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceCreateView() {\r\n  const settings = useSettingsContext();\r\n\r\n  const { t } = useLocales()\r\n  const Translate = (text) => t(text);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Create a new invoice\"\r\n        links={[\r\n          {\r\n            name: Translate(\"app\"),\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: Translate(\"invoice\"),\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          {\r\n            name: Translate(\"newInvoice\"),\r\n          },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <InvoiceNewEditForm />\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport  InvoiceCreateView  from 'src/screens/components/invoice/create/InvoiceCreateView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceCreatePage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Create a new invoice</title>\r\n      </Helmet>\r\n\r\n      <InvoiceCreateView />\r\n    </>\r\n  );\r\n}\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","baseUrl","getAllCustomers","_getAllCustomers","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","list","wrap","_context","prev","next","fetch","concat","mode","then","result","json","invoices","catch","error","console","log","abrupt","stop","GetAllCustomersWithAll","_GetAllCustomersWithAll","_callee2","_context2","push","_toConsumableArray","getSalesPersonList","_getSalesPersonList","_callee3","_context3","getCustomerById","_x","_getCustomerById","_callee4","id","response","invoice","_context4","sent","ok","status","statusText","t0","deleteCustomer","_x2","_deleteCustomer","_callee5","success","_context5","method","headers","Cache","res","Error","getAllProducts","_getAllProducts","deleteProduct","_deleteProduct","getProductById","_getProductById","AddressListDialog","_ref$title","title","open","onClose","selected","onSelect","t","useLocales","Translate","text","_useState","useState","_useState2","_slicedToArray","searchAddress","setSearchAddress","dataFiltered","_ref3","inputData","query","filter","address","customerCode","toLowerCase","indexOf","customerNameEn","customerNameAr","applyFilter","notFound","handleSearchAddress","useCallback","event","value","handleSelectAddress","renderList","spacing","p","maxHeight","overflowX","ListItemButton","onClick","_defineProperty","py","px","flexDirection","listItemButtonClasses","Dialog","fullWidth","maxWidth","justifyContent","pr","pt","TextField","onChange","placeholder","InputProps","startAdornment","InputAdornment","position","Iconify","SearchNotFound","pb","AddressListDialogSales","username","textTransform","ProductsListDialog","code","nameEn","nameAr","product","InvoiceNewEditAddress","_errors$salesPeople","_useFormContext","useFormContext","watch","setValue","errors","formState","customersList","setCustomersList","_useState3","_useState4","productsList","setProductsList","_useState5","_useState6","salesPersonList","setSalesPersonList","_useState7","_useState8","openProductDialog","setOpenProductDialog","useEffect","fetchCustomers","fetchProducts","_ref2","fetchSalesPersonList","mdUp","useResponsive","values","customerObj","customerId","productCode","salesPerson","productObj","salesPersonObj","from","useBoolean","to","xs","md","divider","Divider","flexItem","orientation","borderStyle","mb","IconButton","onTrue","salesPeople","message","onFalse","selectedId","customer","person","InvoiceNewEditStatusDate","control","sm","RHFTextField","label","invoiceNumber","Controller","render","field","fieldState","DatePicker","newValue","slotProps","textField","helperText","invoiceAmount","type","currency","region","customerPO","poValue","contractNo","InvoiceNewEditForm","currentInvoice","router","useRouter","loadingSend","NewInvoiceSchema","Yup","shape","nullable","required","createDate","deliveryDate","defaultValues","useMemo","Date","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","handleCreateAndSend","data","_watch","body","redirectUrl","Promise","resolve","setTimeout","invoiceNo","issueInvoiceDate","salesTakerUsername","paths","dashboard","root","JSON","stringify","replace","FormProvider","onSubmit","Card","LoadingButton","size","loading","InvoiceCreateView","settings","useSettingsContext","Container","themeStretch","InvoiceCreatePage","Helmet","createSvgIcon","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","marginRight","palette","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","props","_props$slots","slots","_props$slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","breadcrumbsClasses","li","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","React","inProps","ref","useThemeProps","_props$component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","_React$useState2","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","child","clsx","slice","BreadcrumbCollapsed","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}