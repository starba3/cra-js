{"version":3,"file":"static/js/8881.046e797a.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","data-access/invoice.js","sections/invoice/invoice-pdf.js","screens/components/invoice/details/InvoiceDetails.js","screens/components/invoice/details/InvoiceDetailsView.js","screens/invoice/InvoiceDetailsPage.js","utils/format-number.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\n// routes\nimport { RouterLink } from 'src/routes/components';\n\n// ----------------------------------------------------------------------\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    typography: 'body2',\n    alignItems: 'center',\n    color: 'text.primary',\n    display: 'inline-flex',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} href={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n\nBreadcrumbsLink.propTypes = {\n  activeLast: PropTypes.bool,\n  disabled: PropTypes.bool,\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.node,\n    name: PropTypes.string,\n  }),\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\n//\nimport LinkItem from './link-item';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nCustomBreadcrumbs.propTypes = {\n  sx: PropTypes.object,\n  action: PropTypes.node,\n  links: PropTypes.array,\n  heading: PropTypes.string,\n  moreLink: PropTypes.array,\n  activeLast: PropTypes.bool,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        width: 4,\n        height: 4,\n        borderRadius: '50%',\n        bgcolor: 'text.disabled',\n      }}\n    />\n  );\n}\n","\r\nimport { paths } from \"src/routes/paths\"\r\n\r\nconst baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\n\r\nexport async function getAllInvoices() {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/invoices`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async function getInvoicesByDepartment(id) {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/Invoices/Department/${id}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async function getInvoicesBySalesConfirmation(confirmStatus) {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/Invoices/GetInvoicesBySalesConfirmation?salesConfirm=${confirmStatus}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async  function getInvoicesById(id) {\r\n    try {\r\n        const response = await fetch(`${baseUrl}/api/invoices/${id}`, {\r\n            mode: 'cors'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const invoice = await response.json();\r\n            return invoice;\r\n        } \r\n            // Handle non-successful response here if needed.\r\n            console.error(`Failed to fetch invoice: ${response.status} - ${response.statusText}`);\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return {}; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceEditUrl(departmentId, invoiceId) {\r\n\r\n    let url = ''\r\n    switch (departmentId) {\r\n        case -1:\r\n        case 0:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Operation`\r\n            break;\r\n        case 1:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/installation`\r\n            break;\r\n        case 2:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Sales`\r\n            break;\r\n        case 3:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Collection`\r\n            break;   \r\n        case 4:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/TenderAndContracts`\r\n            break;     \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return url; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceRedirectUrl(departmentId) {\r\n\r\n    let url = ''\r\n    switch (departmentId) {\r\n        case -1:\r\n        case 0:\r\n            url = paths.departments.operation.list;\r\n            break;\r\n        case 1:\r\n            url = paths.departments.installation.list;\r\n            break;\r\n        case 2:\r\n            url = paths.departments.sales.list;\r\n            break;\r\n        case 3:\r\n            url = paths.departments.collection.list;\r\n            break;   \r\n        case 4:\r\n            url = paths.departments.tenderAndConract.list;\r\n            break;     \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return url; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceImportUrl() {\r\n\r\n    const url = `${baseUrl}/api/ExcelImport/import-invoices`\r\n    return url; \r\n    \r\n}\r\n\r\nexport async function getCollectionData() {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/CollectionData`, {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n","import PropTypes from 'prop-types';\nimport { useMemo } from 'react';\nimport { Page, View, Text, Image, Document, Font, StyleSheet } from '@react-pdf/renderer';\n// utils\nimport { fDate } from 'src/utils/format-time';\nimport { fCurrency } from 'src/utils/format-number';\n\n// ----------------------------------------------------------------------\n\nFont.register({\n  family: 'Roboto',\n  fonts: [{ src: '/fonts/Roboto-Regular.ttf' }, { src: '/fonts/Roboto-Bold.ttf' }],\n});\n\nconst useStyles = () =>\n  useMemo(\n    () =>\n      StyleSheet.create({\n        col4: { width: '25%' },\n        col8: { width: '75%' },\n        col6: { width: '50%' },\n        mb4: { marginBottom: 4 },\n        mb8: { marginBottom: 8 },\n        mb40: { marginBottom: 40 },\n        h3: { fontSize: 16, fontWeight: 700 },\n        h4: { fontSize: 13, fontWeight: 700 },\n        body1: { fontSize: 10 },\n        body2: { fontSize: 9 },\n        subtitle1: { fontSize: 10, fontWeight: 700 },\n        subtitle2: { fontSize: 9, fontWeight: 700 },\n        alignRight: { textAlign: 'right' },\n        page: {\n          fontSize: 9,\n          lineHeight: 1.6,\n          fontFamily: 'Roboto',\n          backgroundColor: '#FFFFFF',\n          textTransform: 'capitalize',\n          padding: '40px 24px 120px 24px',\n        },\n        footer: {\n          left: 0,\n          right: 0,\n          bottom: 0,\n          padding: 24,\n          margin: 'auto',\n          borderTopWidth: 1,\n          borderStyle: 'solid',\n          position: 'absolute',\n          borderColor: '#DFE3E8',\n        },\n        gridContainer: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n        },\n        table: {\n          display: 'flex',\n          width: 'auto',\n        },\n        tableRow: {\n          padding: '8px 0',\n          flexDirection: 'row',\n          borderBottomWidth: 1,\n          borderStyle: 'solid',\n          borderColor: '#DFE3E8',\n        },\n        noBorder: {\n          paddingTop: 8,\n          paddingBottom: 0,\n          borderBottomWidth: 0,\n        },\n        tableCell_1: {\n          width: '5%',\n        },\n        tableCell_2: {\n          width: '50%',\n          paddingRight: 16,\n        },\n        tableCell_3: {\n          width: '15%',\n        },\n      }),\n    []\n  );\n\n// ----------------------------------------------------------------------\n\nexport default function InvoicePDF({ invoice, currentStatus }) {\n  const {\n    items,\n    taxes,\n    dueDate,\n    discount,\n    shipping,\n    invoiceTo,\n    createDate,\n    totalAmount,\n    invoiceFrom,\n    invoiceNumber,\n    subTotal,\n  } = invoice;\n\n  const styles = useStyles();\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View style={[styles.gridContainer, styles.mb40]}>\n          <Image source=\"/logo/logo_single.png\" style={{ width: 48, height: 48 }} />\n\n          <View style={{ alignItems: 'flex-end', flexDirection: 'column' }}>\n            <Text style={styles.h3}>{currentStatus}</Text>\n            <Text> {invoiceNumber} </Text>\n          </View>\n        </View>\n\n        <View style={[styles.gridContainer, styles.mb40]}>\n          <View style={styles.col6}>\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice from</Text>\n            <Text style={styles.body2}>{invoiceFrom.name}</Text>\n            <Text style={styles.body2}>{invoiceFrom.fullAddress}</Text>\n            <Text style={styles.body2}>{invoiceFrom.phoneNumber}</Text>\n          </View>\n\n          <View style={styles.col6}>\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice to</Text>\n            <Text style={styles.body2}>{invoiceTo.name}</Text>\n            <Text style={styles.body2}>{invoiceTo.fullAddress}</Text>\n            <Text style={styles.body2}>{invoiceTo.phoneNumber}</Text>\n          </View>\n        </View>\n\n        <View style={[styles.gridContainer, styles.mb40]}>\n          <View style={styles.col6}>\n            <Text style={[styles.subtitle2, styles.mb4]}>Date create</Text>\n            <Text style={styles.body2}>{fDate(createDate)}</Text>\n          </View>\n          <View style={styles.col6}>\n            <Text style={[styles.subtitle2, styles.mb4]}>Due date</Text>\n            <Text style={styles.body2}>{fDate(dueDate)}</Text>\n          </View>\n        </View>\n\n        <Text style={[styles.subtitle1, styles.mb8]}>Invoice Details</Text>\n\n        <View style={styles.table}>\n          <View>\n            <View style={styles.tableRow}>\n              <View style={styles.tableCell_1}>\n                <Text style={styles.subtitle2}>#</Text>\n              </View>\n\n              <View style={styles.tableCell_2}>\n                <Text style={styles.subtitle2}>Description</Text>\n              </View>\n\n              <View style={styles.tableCell_3}>\n                <Text style={styles.subtitle2}>Qty</Text>\n              </View>\n\n              <View style={styles.tableCell_3}>\n                <Text style={styles.subtitle2}>Unit price</Text>\n              </View>\n\n              <View style={[styles.tableCell_3, styles.alignRight]}>\n                <Text style={styles.subtitle2}>Total</Text>\n              </View>\n            </View>\n          </View>\n\n          <View>\n            {items.map((item, index) => (\n              <View style={styles.tableRow} key={item.id}>\n                <View style={styles.tableCell_1}>\n                  <Text>{index + 1}</Text>\n                </View>\n\n                <View style={styles.tableCell_2}>\n                  <Text style={styles.subtitle2}>{item.title}</Text>\n                  <Text>{item.description}</Text>\n                </View>\n\n                <View style={styles.tableCell_3}>\n                  <Text>{item.quantity}</Text>\n                </View>\n\n                <View style={styles.tableCell_3}>\n                  <Text>{item.price}</Text>\n                </View>\n\n                <View style={[styles.tableCell_3, styles.alignRight]}>\n                  <Text>{fCurrency(item.price * item.quantity)}</Text>\n                </View>\n              </View>\n            ))}\n\n            <View style={[styles.tableRow, styles.noBorder]}>\n              <View style={styles.tableCell_1} />\n              <View style={styles.tableCell_2} />\n              <View style={styles.tableCell_3} />\n              <View style={styles.tableCell_3}>\n                <Text>Subtotal</Text>\n              </View>\n              <View style={[styles.tableCell_3, styles.alignRight]}>\n                <Text>{fCurrency(subTotal)}</Text>\n              </View>\n            </View>\n\n            <View style={[styles.tableRow, styles.noBorder]}>\n              <View style={styles.tableCell_1} />\n              <View style={styles.tableCell_2} />\n              <View style={styles.tableCell_3} />\n              <View style={styles.tableCell_3}>\n                <Text>Shipping</Text>\n              </View>\n              <View style={[styles.tableCell_3, styles.alignRight]}>\n                <Text>{fCurrency(-shipping)}</Text>\n              </View>\n            </View>\n\n            <View style={[styles.tableRow, styles.noBorder]}>\n              <View style={styles.tableCell_1} />\n              <View style={styles.tableCell_2} />\n              <View style={styles.tableCell_3} />\n              <View style={styles.tableCell_3}>\n                <Text>Discount</Text>\n              </View>\n              <View style={[styles.tableCell_3, styles.alignRight]}>\n                <Text>{fCurrency(-discount)}</Text>\n              </View>\n            </View>\n\n            <View style={[styles.tableRow, styles.noBorder]}>\n              <View style={styles.tableCell_1} />\n              <View style={styles.tableCell_2} />\n              <View style={styles.tableCell_3} />\n              <View style={styles.tableCell_3}>\n                <Text>Taxes</Text>\n              </View>\n              <View style={[styles.tableCell_3, styles.alignRight]}>\n                <Text>{fCurrency(taxes)}</Text>\n              </View>\n            </View>\n\n            <View style={[styles.tableRow, styles.noBorder]}>\n              <View style={styles.tableCell_1} />\n              <View style={styles.tableCell_2} />\n              <View style={styles.tableCell_3} />\n              <View style={styles.tableCell_3}>\n                <Text style={styles.h4}>Total</Text>\n              </View>\n              <View style={[styles.tableCell_3, styles.alignRight]}>\n                <Text style={styles.h4}>{fCurrency(totalAmount)}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View style={[styles.gridContainer, styles.footer]} fixed>\n          <View style={styles.col8}>\n            <Text style={styles.subtitle2}>NOTES</Text>\n            <Text>\n              We appreciate your business. Should you need us to add VAT or extra notes let us know!\n            </Text>\n          </View>\n          <View style={[styles.col4, styles.alignRight]}>\n            <Text style={styles.subtitle2}>Have a Question?</Text>\n            <Text>support@abcapp.com</Text>\n          </View>\n        </View>\n      </Page>\n    </Document>\n  );\n}\n\nInvoicePDF.propTypes = {\n  currentStatus: PropTypes.string,\n  invoice: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// _mock\r\nimport { INVOICE_STATUS_OPTIONS } from 'src/_mock';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n//\r\nimport InvoiceToolbar from 'src/sections/invoice/invoice-toolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '& td': {\r\n    textAlign: 'right',\r\n    borderBottom: 'none',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceDetails({ invoice }) {\r\n  const [currentInvoice, setCurrentInvoice] = useState(invoice);\r\n\r\n  \r\n\r\n\r\n\r\n  const renderNotes = (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Notes\r\n      </Typography>\r\n      <TableContainer sx={{ overflow: 'unset', mt: 5 }}>\r\n        <Scrollbar>\r\n          <Table sx={{ minWidth: 960 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                <TableCell width={40}>#</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>Note</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {currentInvoice?.notes.map((row, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n\r\n                  <TableCell>\r\n                    {/* <Box sx={{ maxWidth: 560 }}> */}\r\n                      <Typography variant=\"subtitle2\">{row.noteText}</Typography>\r\n                    {/* </Box> */}\r\n                  </TableCell>\r\n\r\n                  {/* <TableCell>{row.quantity}</TableCell> */}\r\n\r\n                  \r\n                </TableRow>\r\n              ))} \r\n\r\n            </TableBody> \r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n    </>  \r\n  );\r\n  \r\n  const renderAttachments = (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n      Attachments\r\n      </Typography>\r\n      <TableContainer sx={{ overflow: 'unset', mt: 5 }}>\r\n        <Scrollbar>\r\n          <Table sx={{ minWidth: 960 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                <TableCell width={40}>#</TableCell>\r\n\r\n                <TableCell sx={{ typography: 'subtitle2' }}>Name</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {currentInvoice?.attachments.map((row, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n\r\n                  <TableCell>\r\n                    {/* <Box sx={{ maxWidth: 560 }}> */}\r\n                      <Typography variant=\"subtitle2\"> <a target='_blank' rel=\"noreferrer\" href={row.attachmentPath}>{row.fileName}</a> </Typography>\r\n                    {/* </Box> */}\r\n                  </TableCell>\r\n\r\n                  {/* <TableCell>{row.quantity}</TableCell> */}\r\n\r\n                  \r\n                </TableRow>\r\n              ))} \r\n\r\n            </TableBody> \r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n\r\n  const renderTotal = (\r\n    <>\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          Subtotal\r\n        </TableCell>\r\n        <TableCell width={120} sx={{ typography: 'subtitle2' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          {/* {fCurrency(invoice.subTotal)} */}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Shipping</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {/* {fCurrency(-invoice.shipping)} */}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Discount</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {/* {fCurrency(-invoice.discount)} */}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Taxes</TableCell>\r\n        {/* <TableCell width={120}>{fCurrency(invoice.taxes)}</TableCell> */}\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ typography: 'subtitle1' }}>Total</TableCell>\r\n        <TableCell width={140} sx={{ typography: 'subtitle1' }}>\r\n          {/* {fCurrency(invoice.totalAmount)} */}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n    </>\r\n  );\r\n\r\n  const renderFooter = (\r\n    <Grid container>\r\n      <Grid xs={12} md={9} sx={{ py: 3 }}>\r\n        <Typography variant=\"subtitle2\">NOTES</Typography>\r\n\r\n        <Typography variant=\"body2\">\r\n          We appreciate your business. Should you need us to add VAT or extra notes let us know!\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3} sx={{ py: 3, textAlign: 'right' }}>\r\n        <Typography variant=\"subtitle2\">Have a Question?</Typography>\r\n\r\n        <Typography variant=\"body2\">support@minimals.cc</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const renderList = (\r\n    <TableContainer sx={{ overflow: 'unset', mt: 5 }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 960 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width={40}>#</TableCell>\r\n\r\n              <TableCell sx={{ typography: 'subtitle2' }}>Description</TableCell>\r\n\r\n              <TableCell>Qty</TableCell>\r\n\r\n              <TableCell align=\"right\">Unit price</TableCell>\r\n\r\n              <TableCell align=\"right\">Total</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {/* {invoice.items.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{index + 1}</TableCell>\r\n\r\n                <TableCell>\r\n                  <Box sx={{ maxWidth: 560 }}>\r\n                    <Typography variant=\"subtitle2\">{row.title}</Typography>\r\n\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n                      {row.description}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n\r\n                <TableCell>{row.quantity}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price)}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price * row.quantity)}</TableCell>\r\n              </TableRow>\r\n            ))} */}\r\n\r\n            {renderTotal}\r\n          </TableBody> \r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n\r\n  return (\r\n    \r\n      <Card sx={{ pt: 5, px: 5 }}>\r\n        <Box\r\n          rowGap={5}\r\n          display=\"grid\"\r\n          alignItems=\"center\"\r\n          gridTemplateColumns={{\r\n            xs: 'repeat(1, 1fr)',\r\n            sm: 'repeat(2, 1fr)',\r\n          }}\r\n        >\r\n          <Box\r\n            component=\"img\"\r\n            alt=\"logo\"\r\n            src=\"/logo/logo_single.svg\"\r\n            sx={{ width: 48, height: 48 }}\r\n          />\r\n\r\n           <Stack spacing={1} alignItems={{ xs: 'flex-start', md: 'flex-end' }}>\r\n            <Label\r\n              variant=\"soft\"\r\n              color= 'default'\r\n              // {\r\n              //   (currentInvoice.department === 'Paid' && 'success') ||\r\n              //   (currentStatus === 'Unpaid' && 'warning') ||\r\n              //   (currentStatus === 'overdue' && 'error') ||\r\n              //   'default'\r\n              // }\r\n            >\r\n              {currentInvoice.department}\r\n            </Label>\r\n\r\n          </Stack> \r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Issue Date: \r\n            </Typography>\r\n              {currentInvoice?.issueInvoiceDate }\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Amount\r\n            </Typography>\r\n            {currentInvoice?.invoiceAmount}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Currency\r\n            </Typography>\r\n            {currentInvoice?.currency}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Customer Code\r\n            </Typography>\r\n            {currentInvoice?.customerCode}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Name English\r\n            </Typography>\r\n            {currentInvoice?.customerNameEn}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Name Arabic\r\n            </Typography>\r\n            {currentInvoice?.customerNameEn}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Po Number\r\n            </Typography>\r\n            {currentInvoice?.customerPO}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            PO Value\r\n            </Typography>\r\n            {currentInvoice?.poValue}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Region\r\n            </Typography>\r\n            {currentInvoice?.region}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Contract Number\r\n            </Typography>\r\n            {currentInvoice?.contractNo}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Delivery Date\r\n            </Typography>\r\n            {currentInvoice?.deliveryDate}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Installation Date\r\n            </Typography>\r\n            {currentInvoice?.installationDate}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Department\r\n            </Typography>\r\n            {currentInvoice?.department}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Installation Status\r\n            </Typography>\r\n            {currentInvoice?.installationStatus}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Days To Collected\r\n            </Typography>\r\n            {currentInvoice?.daysToCollected}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Acknowledge Status\r\n            </Typography>\r\n            {currentInvoice?.acknowledgeStatus}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Collection Source\r\n            </Typography>\r\n            {currentInvoice?.collectionSource}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Claim Status\r\n            </Typography>\r\n            {currentInvoice?.claimStatus}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Claims Detail Status\r\n            </Typography>\r\n            {currentInvoice?.claimsDetailStatus}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Sales Confirm\r\n            </Typography>\r\n            {currentInvoice?.salesConfirm}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Created By\r\n            </Typography>\r\n            {currentInvoice?.createdBy}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Sales Taker\r\n            </Typography>\r\n            {currentInvoice?.salesTakerName}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Collector Name\r\n            </Typography>\r\n            {currentInvoice?.collectorName}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2', mb: 3}}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            Responsible Engineer Name\r\n            </Typography>\r\n            {currentInvoice?.responsibleEngineerName}\r\n          </Stack>\r\n        </Box>\r\n\r\n        {renderNotes}\r\n\r\n        <Divider sx={{ mt: 5, borderStyle: 'dashed', mb: 3}} />\r\n        {renderAttachments}\r\n\r\n        <Divider sx={{ mt: 5, borderStyle: 'dashed' }} />\r\n\r\n        {renderFooter}\r\n      </Card>\r\n    \r\n  );\r\n}\r\n\r\nInvoiceDetails.propTypes = {\r\n  invoice: PropTypes.object,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport Container from '@mui/material/Container';\r\nimport CircularProgress from '@mui/material/CircularProgress';  \r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _invoices } from 'src/_mock';\r\nimport { getInvoicesById } from 'src/data-access/invoice'\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceDetails from 'src/screens/components/invoice/details/InvoiceDetails';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceDetailsView({ id }) {\r\n  const settings = useSettingsContext();\r\n  \r\n  const [currentInvoice, setCurrentInvoice] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const invoice = await getInvoicesById(id);\r\n        setCurrentInvoice(invoice);\r\n      } catch (error) {\r\n        console.error('Error fetching invoice:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  if(loading || !currentInvoice) {\r\n    return (\r\n      <CircularProgress />\r\n    )\r\n  }\r\n\r\n  // Access the value of currentInvoice here\r\n  console.log('currentInvoice', currentInvoice);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading={currentInvoice?.invoiceNo}\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          { name: currentInvoice?.invoiceNo },\r\n        ]}\r\n        sx={{ mb: { xs: 3, md: 5 } }}\r\n      />\r\n\r\n      <InvoiceDetails invoice={currentInvoice} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nInvoiceDetailsView.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","import { Helmet } from 'react-helmet-async';\r\n// routes\r\nimport { useParams } from 'src/routes/hooks';\r\n// sections\r\nimport  InvoiceDetailsView  from 'src/screens/components/invoice/details/InvoiceDetailsView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceDetailsPage() {\r\n  const params = useParams();\r\n\r\n  const { id } = params;\r\n  console.log('Id: ', id)\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Invoice Details</title>\r\n      </Helmet>\r\n\r\n      <InvoiceDetailsView id={id} />\r\n    </>\r\n  );\r\n}\r\n","import numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fCurrency(number) {\n  const format = number ? numeral(number).format('$0,0.00') : '';\n\n  return result(format, '.00');\n}\n\nexport function fPercent(number) {\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\n\n  return result(format, '.0');\n}\n\nexport function fShortenNumber(number) {\n  const format = number ? numeral(number).format('0.00a') : '';\n\n  return result(format, '.00');\n}\n\nexport function fData(number) {\n  const format = number ? numeral(number).format('0.0 b') : '';\n\n  return result(format, '.0');\n}\n\nfunction result(format, key = '.00') {\n  const isInteger = format.includes(key);\n\n  return isInteger ? format.replace(key, '') : format;\n}\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","baseUrl","getAllInvoices","_getAllInvoices","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","list","wrap","_context","prev","next","fetch","concat","mode","then","result","json","invoices","catch","error","console","log","abrupt","stop","getInvoicesByDepartment","_x","_getInvoicesByDepartment","_callee2","id","_context2","getInvoicesBySalesConfirmation","_x2","_getInvoicesBySalesConfirmation","_callee3","confirmStatus","_context3","getInvoicesById","_x3","_getInvoicesById","_callee4","response","invoice","_context4","sent","ok","status","statusText","t0","getInvoiceEditUrl","departmentId","invoiceId","url","getInvoiceRedirectUrl","paths","departments","operation","installation","sales","collection","tenderAndConract","getInvoiceImportUrl","getCollectionData","_getCollectionData","_callee5","_context5","Font","register","family","fonts","src","StyledTableRow","styled","TableRow","theme","textAlign","borderBottom","paddingTop","spacing","paddingBottom","InvoiceDetails","_ref2","_useState","useState","_useState2","_slicedToArray","currentInvoice","renderNotes","TableContainer","overflow","Scrollbar","Table","minWidth","TableHead","TableCell","TableBody","notes","row","index","noteText","renderAttachments","attachments","attachmentPath","fileName","renderTotal","colSpan","renderFooter","Grid","container","xs","md","py","Card","pt","px","rowGap","gridTemplateColumns","sm","alt","Label","department","mb","issueInvoiceDate","invoiceAmount","currency","customerCode","customerNameEn","customerPO","poValue","region","contractNo","deliveryDate","installationDate","installationStatus","daysToCollected","acknowledgeStatus","collectionSource","claimStatus","claimsDetailStatus","salesConfirm","createdBy","salesTakerName","collectorName","responsibleEngineerName","Divider","borderStyle","InvoiceDetailsView","settings","useSettingsContext","setCurrentInvoice","_useState3","_useState4","loading","setLoading","useEffect","fetchData","finish","CircularProgress","Container","maxWidth","themeStretch","invoiceNo","dashboard","root","InvoiceDetailsPage","useParams","Helmet","fNumber","number","numeral","format","fCurrency","fPercent","Number","fShortenNumber","fData","key","undefined","includes","replace"],"sourceRoot":""}