{"version":3,"file":"static/js/3931.86cc26ef.chunk.js","mappings":"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","sources":["screens/components/invoice/all/InvoiceTableRow.js","screens/components/invoice/all/InvoiceTableToolbar.js","screens/components/invoice/all/InvoiceListView.js","screens/invoice/all/InvoiceListPage.js","sections/invoice/invoice-analytic.js","sections/invoice/invoice-table-filters-result.js","utils/export.js","utils/format-number.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n  handleOpenInquiry,\r\n}) {\r\n  const { id, invoiceNo, issueInvoiceDate, invoiceAmount, daysToCollected, customerNameAr, customerNameEn, paidStatus, department } = row;\r\n  \r\n  const { t, currentLang } = useLocales()\r\n  const customerName = currentLang.value === 'ar' ? customerNameAr : customerNameEn;\r\n  \r\n  const Translate = (text) => t(text);\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={customerName} sx={{ mr: 2 }}>\r\n            {customerName.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {customerName}\r\n              </Typography>\r\n            }\r\n            secondary={\r\n              <Link\r\n                noWrap\r\n                variant=\"body2\"\r\n                onClick={onViewRow}\r\n                sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n              >\r\n                {invoiceNo}\r\n              </Link>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(issueInvoiceDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(issueInvoiceDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell >{daysToCollected}</TableCell>\r\n        \r\n        <TableCell >${invoiceAmount}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{paidStatus}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{department}</TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          {Translate(\"view\")}\r\n        </MenuItem>\r\n\r\n        \r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleOpenInquiry();\r\n            // confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"bx:file\" />\r\n          {Translate(\"inquiry\")}\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: 'solid' }} />\r\n        \r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          {Translate(\"delete\")}\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title={Translate(\"delete\")}\r\n        content={Translate(\"deleteComfirmationMessage\")}\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={() => {\r\n            console.log(\"Delete clicked\");\r\n            onDeleteRow();\r\n            confirm.onFalse()\r\n          }}>\r\n            {Translate(\"delete\")}\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  handleOpenInquiry: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  dateError,\r\n  serviceOptions,\r\n  paidStatusOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const { t } = useLocales()\r\n\r\n  const Translate = (text) => t(text);\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterService = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'service',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterPaidStatus = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'paidStatus',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('startDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('endDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n      <FormControl\r\n        sx={{\r\n          flexShrink: 0,\r\n          width: { xs: 1, md: 180 },\r\n        }}\r\n      >\r\n        <InputLabel>{Translate(\"departments\")}</InputLabel>\r\n\r\n        <Select\r\n          multiple\r\n          value={filters.service}\r\n          onChange={handleFilterService}\r\n          input={<OutlinedInput label={Translate(\"departments\")} />}\r\n          renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n          sx={{ textTransform: 'capitalize' }}\r\n        >\r\n          {serviceOptions.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              <Checkbox disableRipple size=\"small\" checked={filters.service.includes(option)} />\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n        <FormControl\r\n          sx={{\r\n            flexShrink: 0,\r\n            width: { xs: 1, md: 180 },\r\n          }}\r\n        >\r\n          <InputLabel>{Translate(\"paidStatus\")}</InputLabel>\r\n          \r\n          <Select\r\n            multiple\r\n            value={filters.paidStatus}\r\n            onChange={handleFilterPaidStatus}\r\n            input={<OutlinedInput label={Translate(\"paidStatus\")} />}\r\n            renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n            sx={{ textTransform: 'capitalize' }}\r\n          >\r\n            {paidStatusOptions.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                <Checkbox disableRipple size=\"small\" checked={filters.paidStatus.includes(option)} />\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <DatePicker\r\n          label={Translate(\"startDate\")}\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label={Translate(\"startDate\")}\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              error: dateError,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder={Translate(\"searchInvoiceNamePlaceHolder\")}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          {/* <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton> */}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          {Translate(\"print\")}\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          {Translate(\"import\")}\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          {Translate(\"export\")}\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  serviceOptions: PropTypes.array,\r\n  paidStatusOptions: PropTypes.array,\r\n};\r\n","import * as React from 'react';\r\nimport sumBy from 'lodash/sumBy';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// @mui Dialog\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\n\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Alert from '@mui/material/Alert';\r\nimport { Icon } from '@iconify/react';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// _mock\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n\r\n// DATA ACCESS\r\nimport { getAllInvoices, getInvoiceImportUrl, getInvoiceInquiryData, deleteInvoice } from 'src/data-access/invoice'\r\nimport { _departments } from 'src/lists/departments'\r\nimport { _statusList } from 'src/lists/paidStatus'\r\n// Utility\r\nimport { exportToExcel } from 'src/utils/export';\r\n//\r\nimport InvoiceAnalytic from 'src/sections/invoice/invoice-analytic';\r\nimport InvoiceTableFiltersResult from 'src/sections/invoice/invoice-table-filters-result';\r\nimport InvoiceTableRow from './InvoiceTableRow';\r\nimport InvoiceTableToolbar from './InvoiceTableToolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  service: [],\r\n  paidStatus: [],\r\n  status: 'all',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListView() {\r\n  const theme = useTheme();\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const { t, currentLang } = useLocales();\r\n  const Translate = (text) => t(text);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openErrorList, setOpenErrorList] = useState(false);\r\n  const [errorList, setErrorList] = useState(['']);\r\n  const [isEmportError, setIsEmportError] = useState(false);\r\n  const [isUploadComplete, setIsUploadComplete] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [openInquiry, setOpenInquiry] = useState(false);\r\n  const [inquiryId, setInquiryId] = useState(0);\r\n  const [inquiryData, setInquiryData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await getAllInvoices();\r\n        setTableData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      }\r\n    };\r\n\r\n    \r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n\r\n        if (inquiryId) {\r\n          const result = await getInvoiceInquiryData(inquiryId);\r\n          setInquiryData(result);\r\n        } else {\r\n          setInquiryData({});\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      }\r\n    };\r\n\r\n    \r\n    fetchData();\r\n  }, [inquiryId]);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    !!filters.service.length ||\r\n    filters.status !== 'all' ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'invoiceNumber', label: Translate(\"invoiceNumber\") },\r\n    { id: 'issueInvoiceDate', label: Translate(\"issueInvoiceDate\") },\r\n    { id: 'daysToCollected', label: Translate(\"daysToCollected\") },\r\n    { id: 'invoiceAmount', label: Translate(\"invoiceAmount\") },\r\n    { id: 'paidStatus', label: Translate(\"paidStatus\"), align: 'center' },\r\n    { id: 'department', label: Translate(\"department\"), align: 'center' },\r\n    { id: '' },\r\n  ];\r\n\r\n  const exportHeaderRow = [\r\n    Translate(\"invoiceNumber\"),\r\n    Translate(\"customerName\"),\r\n    Translate(\"issueInvoiceDate\"),\r\n    Translate(\"daysToCollected\"),\r\n    Translate(\"invoiceAmount\"),\r\n    Translate(\"paidStatus\"),\r\n    Translate(\"department\")\r\n  ];\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const getInvoiceLength = (status) => tableData.filter((item) => item.paidStatus === status).length;\r\n\r\n  const getTotalAmount = (status) =>\r\n    sumBy(\r\n      tableData.filter((item) => item.paidStatus === status),\r\n      'invoiceAmount'\r\n    );\r\n\r\n  const getPercentByStatus = (status) => (getInvoiceLength(status) / tableData.length) * 100;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = (id) => {\r\n      let success = true;\r\n      const deleteData = async () => {\r\n        try {\r\n          success = await deleteInvoice(id);          \r\n        } catch (error) {\r\n          console.error('Error fetching invoices:', error);\r\n        } \r\n        console.log(\"Success status: \", success);\r\n        if (success) {\r\n          // Fetch data only if deletion was successful\r\n          try {\r\n            const result = await getAllInvoices();\r\n            setTableData(result);\r\n          } catch (error) {\r\n            console.error('Error fetching invoices:', error);\r\n          }\r\n      \r\n          // Update refresh state after fetching data\r\n          setRefresh(!refresh);\r\n        }\r\n      };\r\n      \r\n      deleteData();\r\n  };\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.edit(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('paidStatus', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOpenInquiry = (id) => {\r\n    setInquiryId(id);\r\n    setOpenInquiry(true);\r\n  }\r\n\r\n  const handleCloseInquiry = () => {\r\n    setInquiryId(0);\r\n    setOpenInquiry(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setIsUploadComplete(false);\r\n  };\r\n\r\n  const handleClickOpenErrorList = () => {\r\n    setOpenErrorList(true);\r\n  };\r\n\r\n  const handleCloseErrorList = () => {\r\n    setOpenErrorList(false);\r\n  };\r\n  \r\n  const handleFileUpload = () => {\r\n\r\n    \r\n    console.log('Loading:', loading);\r\n\r\n    const formData = new FormData();\r\n    \r\n    const fileInput = document.querySelector(\"#file\").files[0];      \r\n    \r\n    if(fileInput) {\r\n      setLoading(true);\r\n      formData.append('file', fileInput); \r\n      \r\n      try {\r\n        // Send create invoice request\r\n        console.log('Loading', loading)\r\n\r\n        const url = getInvoiceImportUrl()\r\n        console.log('Url', url )\r\n        fetch(url, {\r\n          mode: 'cors',\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n          },\r\n          body: formData,\r\n          Cache: 'default'  \r\n        })\r\n        .then(async response => {\r\n          await new Promise(resolve => setTimeout(resolve, 3000));\r\n          \r\n          if (!response.ok) {\r\n            if (response.status === 400 || response.status === 415) {\r\n\r\n              const error = await response.text();\r\n\r\n              throw new Error(`Bad Request: ${error}`);\r\n            } \r\n            // For other error status codes, throw a generic error\r\n            throw new Error('Network response was not ok');\r\n            \r\n          }\r\n          return response.text(); // Use text() instead of json()\r\n          \r\n        })\r\n        .then(res => {\r\n          setIsEmportError(false)\r\n          setAlertMessage(res)\r\n        })\r\n        .catch(error => {\r\n          console.error('Fetch Error:', error);\r\n          \r\n          setAlertMessage(\"Invalid Data, check the file and try again\")\r\n\r\n          setIsEmportError(true)\r\n        })\r\n         \r\n      } catch (error) {\r\n        // Empty\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    else {\r\n      setIsEmportError(true)\r\n      setAlertMessage('No file selecetd.')\r\n    }\r\n    setIsUploadComplete(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading={Translate(\"list\")}\r\n          links={[\r\n            {\r\n              name: Translate(\"app\"),\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: Translate(\"invoice\"),\r\n            },\r\n            {\r\n              name: Translate(\"list\"),\r\n            },\r\n          ]}\r\n          action= {\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <Button\r\n                component={RouterLink}\r\n                href={paths.dashboard.invoice.new}\r\n                variant=\"contained\"\r\n                startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n              >\r\n                {Translate(\"newInvoice\")}\r\n              </Button>\r\n              <Button\r\n              component={RouterLink}\r\n              variant=\"contained\"\r\n              color='primary'\r\n              onClick={handleClickOpen}\r\n              startIcon={<Iconify icon=\"solar:import-bold\" />}\r\n            >\r\n              {Translate(\"import\")}\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                color='primary'\r\n                onClick={() => exportToExcel(tableData, exportHeaderRow, currentLang.value, 'AllInvoices', 'ExportFile')}\r\n                startIcon={<Iconify icon=\"eva:download-outline\" />}\r\n              >\r\n                {Translate(\"export\")}\r\n              </Button>\r\n          </Stack>\r\n            \r\n          }\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <InvoiceAnalytic\r\n                title={Translate(\"total\")}\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={sumBy(tableData, 'invoiceAmount')}\r\n                icon=\"solar:bill-list-bold-duotone\"\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n               <InvoiceAnalytic\r\n                title={Translate(\"paid\")}\r\n                total={getInvoiceLength('paid')}\r\n                percent={getPercentByStatus('paid')}\r\n                price={getTotalAmount('paid')}\r\n                icon=\"solar:file-check-bold-duotone\"\r\n                color={theme.palette.success.main}\r\n              />\r\n\r\n              <InvoiceAnalytic\r\n                title={Translate(\"unpaid\")}\r\n                total={getInvoiceLength('unpaid')}\r\n                percent={getPercentByStatus('unpaid')}\r\n                price={getTotalAmount('unpaid')}\r\n                icon=\"solar:sort-by-time-bold-duotone\"\r\n                color={theme.palette.warning.main}\r\n              />\r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            dateError={dateError}\r\n            serviceOptions={_departments().map((option) => option)}\r\n            paidStatusOptions={_statusList().map((option) => option)}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <InvoiceTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        handleOpenInquiry={() => handleOpenInquiry(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title={Translate(\"delete\")}\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>File upload</DialogTitle>\r\n        <DialogContent >\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            id=\"file\"\r\n            label={Translate(\"importFile\")}\r\n            type=\"file\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            inputProps={{ accept: '.xls, .xlsx' }}\r\n          />\r\n            <Collapse in={isUploadComplete}>\r\n              <Alert\r\n                severity={isEmportError ? \"error\" : \"success\"}\r\n                action={\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      setIsUploadComplete(false);\r\n                    }}\r\n                    \r\n                  >\r\n                    <Icon icon=\"ic:baseline-close\" />\r\n\r\n                  </IconButton>\r\n                }\r\n                sx={{ mb: 2 }}\r\n              >\r\n                {alertMessage}\r\n              </Alert>\r\n              \r\n            </Collapse>\r\n          \r\n            {loading && <CircularProgress />}\r\n          \r\n        </DialogContent>\r\n        \r\n        <DialogActions>\r\n          <Button onClick={handleClose}>{Translate(\"cancel\")}</Button>\r\n          <Button onClick={handleFileUpload}>{Translate(\"import\")}</Button>\r\n        </DialogActions>\r\n      </Dialog> \r\n\r\n\r\n      <Dialog\r\n        open={openInquiry}\r\n        maxWidth={false}\r\n        color=\"#ef5350\"\r\n        // TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n\r\n      >\r\n        <DialogTitle>{Translate(\"invoiceInquiry\")}</DialogTitle>\r\n        <DialogContent>\r\n          <Stack flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography>{Translate(\"invoiceNumber\")}</Typography>\r\n            <Typography>{Translate(\"createdBy\")}</Typography>\r\n            <Typography>{Translate(\"creationDate\")}</Typography>\r\n          </Stack>\r\n          {Object.prototype.hasOwnProperty.call(inquiryData, 'invoiceData') && \r\n              <Stack flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Typography>{inquiryData.invoiceData.invoiceNO}</Typography>\r\n                <Typography>{inquiryData.invoiceData.createdBy}</Typography>\r\n                <Typography>\r\n                  {\r\n                    inquiryData.invoiceData.createdDate.substring(0, inquiryData.invoiceData.createdDate.indexOf('T'))\r\n                  }\r\n                </Typography>\r\n              </Stack>\r\n          }\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>{Translate(\"property\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"oldValue\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"newValue\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"lastUpdated\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"updatedBy\")}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {Object.prototype.hasOwnProperty.call(inquiryData, 'logs') && inquiryData.logs.map((row) => (\r\n              <TableRow\r\n                key={row.name}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                {row.propertyName}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.oldValue}</TableCell>\r\n                <TableCell align=\"right\">{row.newValue}</TableCell>\r\n                <TableCell align=\"right\">{row.dateModified.substring(0, row.dateModified.indexOf('T'))}</TableCell>\r\n                <TableCell align=\"right\">{row.modifiedBy}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenInquiry(false)}>{Translate(\"close\")}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </>\r\n\r\n    \r\n  );\r\n}\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n    const { name, status, service, startDate, paidStatus, endDate } = filters;\r\n  \r\n    const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n  \r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n  \r\n    inputData = stabilizedThis.map((el) => el[0]);\r\n  \r\n    if (name) {\r\n      inputData = inputData.filter(\r\n        (invoice) =>\r\n          invoice.customerNameEn.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.invoiceNo.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n          \r\n          // invoice.invoiceTo.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n      );\r\n    }\r\n  \r\n    if (status !== 'all') {\r\n      inputData = inputData.filter((invoice) => invoice.status === status);\r\n    }\r\n  \r\n    if (service.length) {\r\n      inputData = inputData.filter((invoice) =>\r\n        // service.map((serviceName) => serviceName.toLowerCase()).includes(invoice.department)\r\n        service.includes('All') || service.includes(invoice.department)\r\n      );\r\n    }\r\n    \r\n    if (paidStatus.length) {\r\n      inputData = inputData.filter((invoice) =>\r\n        paidStatus.includes('All') || paidStatus.map((option) => option.toLowerCase()).includes(invoice.paidStatus)\r\n      );\r\n    }\r\n\r\n    if (!dateError) {\r\n      if (startDate && endDate) {\r\n        inputData = inputData.filter(\r\n          (invoice) =>\r\n            fTimestamp(invoice.issueInvoiceDate) >= fTimestamp(startDate) &&\r\n            fTimestamp(invoice.issueInvoiceDate) <= fTimestamp(endDate)\r\n        );\r\n      }\r\n    }\r\n  \r\n    return inputData;\r\n  }","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport  InvoiceListView  from 'src/screens/components/invoice/all/InvoiceListView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListViewAll() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Invoice List</title>\r\n      </Helmet>\r\n\r\n      <InvoiceListView />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\nimport { useLocales } from 'src/locales';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\n// utils\nimport { fShortenNumber, fCurrency } from 'src/utils/format-number';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceAnalytic({ title, total, icon, color, percent, price }) {\n  const { t } = useLocales()\n\n  const Translate = (text) => t(text);\n  \n\n  return (\n    <Stack\n      spacing={2.5}\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{ width: 1, minWidth: 200 }}\n    >\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ position: 'relative' }}>\n        <Iconify icon={icon} width={32} sx={{ color, position: 'absolute' }} />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={percent}\n          size={56}\n          thickness={2}\n          sx={{ color, opacity: 0.48 }}\n        />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={100}\n          size={56}\n          thickness={3}\n          sx={{\n            top: 0,\n            left: 0,\n            opacity: 0.48,\n            position: 'absolute',\n            color: (theme) => alpha(theme.palette.grey[500], 0.16),\n          }}\n        />\n      </Stack>\n\n      <Stack spacing={0.5}>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n\n        <Box component=\"span\" sx={{ color: 'text.disabled', typography: 'body2' }}>\n          {fShortenNumber(total)} {Translate(\"invoices\")}\n        </Box>\n\n        <Typography variant=\"subtitle2\">{fCurrency(price)}</Typography>\n      </Stack>\n    </Stack>\n  );\n}\n\nInvoiceAnalytic.propTypes = {\n  color: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  percent: PropTypes.number,\n  price: PropTypes.number,\n  title: PropTypes.string,\n  total: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n// components\nimport Iconify from 'src/components/iconify';\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceTableFiltersResult({\n  filters,\n  onFilters,\n  //\n  onResetFilters,\n  //\n  results,\n  ...other\n}) {\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\n\n  const handleRemoveService = (inputValue) => {\n    const newValue = filters.service.filter((item) => item !== inputValue);\n    onFilters('service', newValue);\n  };\n\n  const handleRemoveStatus = () => {\n    onFilters('status', 'all');\n  };\n\n  const handleRemoveDate = () => {\n    onFilters('startDate', null);\n    onFilters('endDate', null);\n  };\n\n  return (\n    <Stack spacing={1.5} {...other}>\n      <Box sx={{ typography: 'body2' }}>\n        <strong>{results}</strong>\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\n          results found\n        </Box>\n      </Box>\n\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n        {!!filters.service.length && (\n          <Block label=\"Service:\">\n            {filters.service.map((item) => (\n              <Chip\n                key={item}\n                label={item}\n                size=\"small\"\n                onDelete={() => handleRemoveService(item)}\n              />\n            ))}\n          </Block>\n        )}\n\n        {filters.status !== 'all' && (\n          <Block label=\"Status:\">\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\n          </Block>\n        )}\n\n        {filters.startDate && filters.endDate && (\n          <Block label=\"Date:\">\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\n          </Block>\n        )}\n\n        <Button\n          color=\"error\"\n          onClick={onResetFilters}\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n        >\n          Clear\n        </Button>\n      </Stack>\n    </Stack>\n  );\n}\n\nInvoiceTableFiltersResult.propTypes = {\n  filters: PropTypes.object,\n  onFilters: PropTypes.func,\n  onResetFilters: PropTypes.func,\n  results: PropTypes.number,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Block({ label, children, sx, ...other }) {\n  return (\n    <Stack\n      component={Paper}\n      variant=\"outlined\"\n      spacing={1}\n      direction=\"row\"\n      sx={{\n        p: 1,\n        borderRadius: 1,\n        overflow: 'hidden',\n        borderStyle: 'dashed',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\n        {label}\n      </Box>\n\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {children}\n      </Stack>\n    </Stack>\n  );\n}\n\nBlock.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  sx: PropTypes.object,\n};\n","import React from 'react';\r\nimport ExcelJS from 'exceljs';\r\n\r\nexport const exportToExcel = (data, headers, language, reportName, fileName) => {\r\n  console.log(data);\r\n  let filteredData = [];\r\n  if(reportName.toLowerCase() === 'invoicebydepartments')\r\n    filteredData = prepareDataForInvoiceByDepartment(data, headers, language);\r\n  else if(reportName.toLowerCase() === 'allinvoices')\r\n    filteredData = prepareDataForAllInvoices(data, headers, language);\r\n  \r\n  console.log(\"Headers: \", headers);\r\n  console.log(\"filteredData: \", filteredData);\r\n\r\n  const workbook = new ExcelJS.Workbook();\r\n  const worksheet = workbook.addWorksheet('Sheet1');\r\n\r\n  \r\n  // Add headers\r\n  const headerRow = worksheet.addRow(headers);\r\n  \r\n\r\n  // Add data\r\n  filteredData.forEach(row => {\r\n    const rowValues = headers.map(header => row[header]);\r\n    worksheet.addRow(rowValues);\r\n  });\r\n  \r\n  // // Set the font for Arabic text\r\n  worksheet.columns.forEach(column => {\r\n    column.width = 19;\r\n    column.eachCell(cell => {\r\n      cell.font = { name: 'Arial', size: 10, family: 4, bold: false, italic: false };\r\n      cell.alignment = { vertical: 'middle', horizontal: 'left', wrapText: false };\r\n    });\r\n  });\r\n\r\n  // Set font style for the header row\r\n  headerRow.font = { name: 'Arial', bold: true, size: 10,  color: { argb: 'FF000000' } }; \r\n\r\n  console.log(\"Rows count: \", worksheet.rowCount);\r\n  // Create a buffer and write the workbook to it\r\n  workbook.xlsx.writeBuffer().then(buffer => {\r\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n    const link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = `${fileName}.xlsx`;\r\n    link.click();\r\n  });\r\n};\r\n\r\nconst prepareDataForInvoiceByDepartment = (data, headers, language) => data.map((invoice) => {\r\n  // console.log(invoice);\r\n  const returnObj = {\r\n    [headers[0]]: invoice.invoiceNo,\r\n    [headers[1]]: language === 'ar' ? invoice.customerNameAr : invoice.customerNameEn,\r\n    [headers[2]]: invoice.issueInvoiceDate,\r\n    [headers[3]]: invoice.invoiceAmount,\r\n    [headers[4]]: invoice.region,\r\n    [headers[5]]: language === 'ar' ? invoice.productNameAr : invoice.productNameEn\r\n  }\r\n  // console.log(returnObj);\r\n  return returnObj;\r\n});\r\n\r\nconst prepareDataForAllInvoices = (data, headers, language) => data.map((invoice) => {\r\n  // console.log(invoice);\r\n  const returnObj = {\r\n    [headers[0]]: invoice.invoiceNo,\r\n    [headers[1]]: language === 'ar' ? invoice.customerNameAr : invoice.customerNameEn,\r\n    [headers[2]]: invoice.issueInvoiceDate,\r\n    [headers[3]]: invoice.daysToCollected,\r\n    [headers[4]]: invoice.invoiceAmount,\r\n    [headers[5]]: invoice.paidStatus,\r\n    [headers[6]]: invoice.department\r\n  }\r\n  // console.log(returnObj);\r\n  return returnObj;\r\n});\r\n\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('SAR0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["InvoiceTableRow","_ref","row","selected","onSelectRow","onViewRow","onDeleteRow","onEditRow","handleOpenInquiry","invoiceNo","id","issueInvoiceDate","invoiceAmount","daysToCollected","customerNameAr","customerNameEn","paidStatus","department","_useLocales","useLocales","t","customerName","currentLang","value","Translate","text","confirm","useBoolean","popover","usePopover","_jsxs","_Fragment","children","TableRow","hover","_jsx","TableCell","padding","Checkbox","checked","onClick","sx","display","alignItems","Avatar","alt","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","Typography","variant","noWrap","secondary","Link","color","cursor","format","Date","primaryTypographyProps","typography","secondaryTypographyProps","mt","component","align","px","IconButton","open","onOpen","Iconify","icon","CustomPopover","onClose","arrow","width","MenuItem","Divider","borderStyle","onTrue","ConfirmDialog","onFalse","title","content","action","Button","console","log","InvoiceTableToolbar","filters","onFilters","dateError","serviceOptions","paidStatusOptions","handleFilterName","useCallback","event","target","handleFilterService","split","handleFilterPaidStatus","handleFilterStartDate","newValue","handleFilterEndDate","Stack","spacing","xs","md","direction","p","pr","FormControl","flexShrink","InputLabel","Select","multiple","service","onChange","input","OutlinedInput","label","renderValue","map","join","textTransform","option","disableRipple","size","includes","DatePicker","startDate","slotProps","textField","fullWidth","maxWidth","endDate","error","flexGrow","TextField","name","placeholder","InputProps","startAdornment","InputAdornment","position","defaultFilters","status","InvoiceListView","theme","useTheme","settings","useSettingsContext","router","useRouter","table","useTable","defaultOrderBy","_useState","useState","_useState2","_slicedToArray","tableData","setTableData","_useState3","_useState4","refresh","setRefresh","_useState5","_useState6","setFilters","_React$useState","React","_React$useState2","setOpen","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","isEmportError","setIsEmportError","_useState13","_useState14","isUploadComplete","setIsUploadComplete","_useState15","_useState16","alertMessage","setAlertMessage","_useState17","_useState18","loading","setLoading","_useState19","_useState20","openInquiry","setOpenInquiry","_useState21","_useState22","inquiryId","setInquiryId","_useState23","_useState24","inquiryData","setInquiryData","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","getAllInvoices","sent","t0","stop","apply","arguments","_ref2","_callee2","_context2","getInvoiceInquiryData","getTime","dataFiltered","_ref5","inputData","comparator","stabilizedThis","el","index","sort","a","b","order","filter","invoice","toLowerCase","indexOf","length","fTimestamp","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","denseHeight","dense","canReset","TABLE_HEAD","exportHeaderRow","notFound","getInvoiceLength","item","getTotalAmount","sumBy","getPercentByStatus","handleFilters","onResetPage","prevState","_objectSpread","_defineProperty","handleDeleteRows","deleteRows","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","push","paths","dashboard","edit","handleViewRow","details","handleResetFilters","handleClose","Container","themeStretch","CustomBreadcrumbs","heading","links","href","root","divider","orientation","flexItem","py","RouterLink","new","startIcon","exportToExcel","mb","Card","Scrollbar","InvoiceAnalytic","total","percent","price","palette","info","main","success","warning","_departments","_statusList","InvoiceTableFiltersResult","onResetFilters","results","pt","TableContainer","overflow","Table","minWidth","TableHeadCustom","headLabel","rowCount","numSelected","onSort","onSelectAllRows","TableBody","deleteData","_ref3","_callee3","_context3","deleteInvoice","t1","handleDeleteRow","TableEmptyRows","height","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","Dialog","DialogTitle","DialogContent","autoFocus","required","margin","type","inputProps","accept","Collapse","in","Alert","severity","Icon","CircularProgress","DialogActions","formData","FormData","fileInput","document","querySelector","files","append","url","getInvoiceImportUrl","fetch","mode","method","headers","body","Cache","then","_ref4","_callee4","response","_context4","Promise","resolve","setTimeout","ok","Error","concat","abrupt","_x","res","catch","keepMounted","flexDirection","justifyContent","Object","prototype","hasOwnProperty","call","invoiceData","invoiceNO","createdBy","createdDate","substring","TableHead","logs","border","scope","propertyName","oldValue","dateModified","modifiedBy","InvoiceListViewAll","Helmet","thickness","opacity","top","left","alpha","grey","Box","fShortenNumber","fCurrency","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","ml","flexWrap","Block","Chip","onDelete","inputValue","handleRemoveService","_excluded2","Paper","borderRadius","data","language","reportName","fileName","filteredData","prepareDataForInvoiceByDepartment","prepareDataForAllInvoices","workbook","ExcelJS","worksheet","addWorksheet","headerRow","addRow","forEach","rowValues","header","columns","column","eachCell","cell","font","family","bold","italic","alignment","vertical","horizontal","wrapText","argb","xlsx","writeBuffer","buffer","blob","Blob","link","createElement","window","URL","createObjectURL","download","click","_returnObj","region","productNameAr","productNameEn","_returnObj2","fNumber","number","numeral","fPercent","Number","fData","key","undefined","replace"],"sourceRoot":""}