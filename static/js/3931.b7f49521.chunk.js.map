{"version":3,"file":"static/js/3931.b7f49521.chunk.js","mappings":"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","sources":["components/custom-dialog/confirm-dialog.js","screens/components/invoice/all/InvoiceTableRow.js","screens/components/invoice/all/InvoiceTableToolbar.js","screens/components/invoice/all/InvoiceListView.js","screens/invoice/all/InvoiceListPage.js","sections/invoice/invoice-analytic.js","sections/invoice/invoice-table-filters-result.js","utils/format-number.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfirmDialog({ title, content, action, open, onClose, ...other }) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\n\n      <DialogActions>\n        {action}\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmDialog.propTypes = {\n  action: PropTypes.node,\n  content: PropTypes.node,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n  handleOpenInquiry,\r\n}) {\r\n  const { id, invoiceNo, issueInvoiceDate, invoiceAmount, daysToCollected, customerNameAr, customerNameEn, paidStatus, department } = row;\r\n  \r\n  const { t, currentLang } = useLocales()\r\n  const customerName = currentLang.value === 'ar' ? customerNameAr : customerNameEn;\r\n  \r\n  const Translate = (text) => t(text);\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={customerName} sx={{ mr: 2 }}>\r\n            {customerName.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {customerName}\r\n              </Typography>\r\n            }\r\n            secondary={\r\n              <Link\r\n                noWrap\r\n                variant=\"body2\"\r\n                onClick={onViewRow}\r\n                sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n              >\r\n                {invoiceNo}\r\n              </Link>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(issueInvoiceDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(issueInvoiceDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell >{daysToCollected}</TableCell>\r\n        \r\n        <TableCell >${invoiceAmount}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{paidStatus}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{department}</TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          {Translate(\"view\")}\r\n        </MenuItem>\r\n\r\n        \r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleOpenInquiry();\r\n            // confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"bx:file\" />\r\n          {Translate(\"inquiry\")}\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: 'solid' }} />\r\n        \r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          {Translate(\"delete\")}\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title={Translate(\"delete\")}\r\n        content={Translate(\"deleteComfirmationMessage\")}\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={() => {\r\n            console.log(\"Delete clicked\");\r\n            onDeleteRow();\r\n            confirm.onFalse()\r\n          }}>\r\n            {Translate(\"delete\")}\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  handleOpenInquiry: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  dateError,\r\n  serviceOptions,\r\n  paidStatusOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const { t } = useLocales()\r\n\r\n  const Translate = (text) => t(text);\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterService = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'service',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterPaidStatus = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'paidStatus',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('startDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('endDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n      <FormControl\r\n        sx={{\r\n          flexShrink: 0,\r\n          width: { xs: 1, md: 180 },\r\n        }}\r\n      >\r\n        <InputLabel>{Translate(\"departments\")}</InputLabel>\r\n\r\n        <Select\r\n          multiple\r\n          value={filters.service}\r\n          onChange={handleFilterService}\r\n          input={<OutlinedInput label={Translate(\"departments\")} />}\r\n          renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n          sx={{ textTransform: 'capitalize' }}\r\n        >\r\n          {serviceOptions.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              <Checkbox disableRipple size=\"small\" checked={filters.service.includes(option)} />\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n        <FormControl\r\n          sx={{\r\n            flexShrink: 0,\r\n            width: { xs: 1, md: 180 },\r\n          }}\r\n        >\r\n          <InputLabel>{Translate(\"paidStatus\")}</InputLabel>\r\n          \r\n          <Select\r\n            multiple\r\n            value={filters.paidStatus}\r\n            onChange={handleFilterPaidStatus}\r\n            input={<OutlinedInput label={Translate(\"paidStatus\")} />}\r\n            renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n            sx={{ textTransform: 'capitalize' }}\r\n          >\r\n            {paidStatusOptions.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                <Checkbox disableRipple size=\"small\" checked={filters.paidStatus.includes(option)} />\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <DatePicker\r\n          label={Translate(\"startDate\")}\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label={Translate(\"startDate\")}\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              error: dateError,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder={Translate(\"searchInvoiceNamePlaceHolder\")}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          {/* <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton> */}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          {Translate(\"print\")}\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          {Translate(\"import\")}\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          {Translate(\"export\")}\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  serviceOptions: PropTypes.array,\r\n  paidStatusOptions: PropTypes.array,\r\n};\r\n","import * as React from 'react';\r\nimport sumBy from 'lodash/sumBy';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { useLocales } from 'src/locales';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// @mui Dialog\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\n\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Alert from '@mui/material/Alert';\r\nimport { Icon } from '@iconify/react';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// _mock\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n\r\n// DATA ACCESS\r\nimport { getAllInvoices, getInvoiceImportUrl, getInvoiceInquiryData, deleteInvoice } from 'src/data-access/invoice'\r\nimport { _departments } from 'src/lists/departments'\r\nimport { _statusList } from 'src/lists/paidStatus'\r\n//\r\nimport InvoiceAnalytic from 'src/sections/invoice/invoice-analytic';\r\nimport InvoiceTableFiltersResult from 'src/sections/invoice/invoice-table-filters-result';\r\nimport InvoiceTableRow from './InvoiceTableRow';\r\nimport InvoiceTableToolbar from './InvoiceTableToolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  service: [],\r\n  paidStatus: [],\r\n  status: 'all',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListView() {\r\n  const theme = useTheme();\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const { t } = useLocales();\r\n  const Translate = (text) => t(text);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openErrorList, setOpenErrorList] = useState(false);\r\n  const [errorList, setErrorList] = useState(['']);\r\n  const [isEmportError, setIsEmportError] = useState(false);\r\n  const [isUploadComplete, setIsUploadComplete] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [openInquiry, setOpenInquiry] = useState(false);\r\n  const [inquiryId, setInquiryId] = useState(0);\r\n  const [inquiryData, setInquiryData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await getAllInvoices();\r\n        setTableData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      }\r\n    };\r\n\r\n    \r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n\r\n        if (inquiryId) {\r\n          const result = await getInvoiceInquiryData(inquiryId);\r\n          setInquiryData(result);\r\n        } else {\r\n          setInquiryData({});\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      }\r\n    };\r\n\r\n    \r\n    fetchData();\r\n  }, [inquiryId]);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    !!filters.service.length ||\r\n    filters.status !== 'all' ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'invoiceNumber', label: Translate(\"invoiceNumber\") },\r\n    { id: 'issueInvoiceDate', label: Translate(\"issueInvoiceDate\") },\r\n    { id: 'daysToCollected', label: Translate(\"daysToCollected\") },\r\n    { id: 'invoiceAmount', label: Translate(\"invoiceAmount\") },\r\n    { id: 'paidStatus', label: Translate(\"paidStatus\"), align: 'center' },\r\n    { id: 'department', label: Translate(\"department\"), align: 'center' },\r\n    { id: '' },\r\n  ];\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const getInvoiceLength = (status) => tableData.filter((item) => item.paidStatus === status).length;\r\n\r\n  const getTotalAmount = (status) =>\r\n    sumBy(\r\n      tableData.filter((item) => item.paidStatus === status),\r\n      'invoiceAmount'\r\n    );\r\n\r\n  const getPercentByStatus = (status) => (getInvoiceLength(status) / tableData.length) * 100;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = (id) => {\r\n      let success = true;\r\n      const deleteData = async () => {\r\n        try {\r\n          success = await deleteInvoice(id);          \r\n        } catch (error) {\r\n          console.error('Error fetching invoices:', error);\r\n        } \r\n        console.log(\"Success status: \", success);\r\n        if (success) {\r\n          // Fetch data only if deletion was successful\r\n          try {\r\n            const result = await getAllInvoices();\r\n            setTableData(result);\r\n          } catch (error) {\r\n            console.error('Error fetching invoices:', error);\r\n          }\r\n      \r\n          // Update refresh state after fetching data\r\n          setRefresh(!refresh);\r\n        }\r\n      };\r\n      \r\n      deleteData();\r\n  };\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.edit(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('paidStatus', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOpenInquiry = (id) => {\r\n    setInquiryId(id);\r\n    setOpenInquiry(true);\r\n  }\r\n\r\n  const handleCloseInquiry = () => {\r\n    setInquiryId(0);\r\n    setOpenInquiry(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setIsUploadComplete(false);\r\n  };\r\n\r\n  const handleClickOpenErrorList = () => {\r\n    setOpenErrorList(true);\r\n  };\r\n\r\n  const handleCloseErrorList = () => {\r\n    setOpenErrorList(false);\r\n  };\r\n  \r\n  const handleFileUpload = () => {\r\n\r\n    \r\n    console.log('Loading:', loading);\r\n\r\n    const formData = new FormData();\r\n    \r\n    const fileInput = document.querySelector(\"#file\").files[0];      \r\n    \r\n    if(fileInput) {\r\n      setLoading(true);\r\n      formData.append('file', fileInput); \r\n      \r\n      try {\r\n        // Send create invoice request\r\n        console.log('Loading', loading)\r\n\r\n        const url = getInvoiceImportUrl()\r\n        console.log('Url', url )\r\n        fetch(url, {\r\n          mode: 'cors',\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n          },\r\n          body: formData,\r\n          Cache: 'default'  \r\n        })\r\n        .then(async response => {\r\n          await new Promise(resolve => setTimeout(resolve, 3000));\r\n          \r\n          if (!response.ok) {\r\n            if (response.status === 400 || response.status === 415) {\r\n\r\n              const error = await response.text();\r\n\r\n              throw new Error(`Bad Request: ${error}`);\r\n            } \r\n            // For other error status codes, throw a generic error\r\n            throw new Error('Network response was not ok');\r\n            \r\n          }\r\n          return response.text(); // Use text() instead of json()\r\n          \r\n        })\r\n        .then(res => {\r\n          setIsEmportError(false)\r\n          setAlertMessage(res)\r\n        })\r\n        .catch(error => {\r\n          console.error('Fetch Error:', error);\r\n          \r\n          setAlertMessage(\"Invalid Data, check the file and try again\")\r\n\r\n          setIsEmportError(true)\r\n        })\r\n         \r\n      } catch (error) {\r\n        // Empty\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    else {\r\n      setIsEmportError(true)\r\n      setAlertMessage('No file selecetd.')\r\n    }\r\n    setIsUploadComplete(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading={Translate(\"list\")}\r\n          links={[\r\n            {\r\n              name: Translate(\"app\"),\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: Translate(\"invoice\"),\r\n            },\r\n            {\r\n              name: Translate(\"list\"),\r\n            },\r\n          ]}\r\n          action= {\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <Button\r\n                component={RouterLink}\r\n                href={paths.dashboard.invoice.new}\r\n                variant=\"contained\"\r\n                startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n              >\r\n                {Translate(\"newInvoice\")}\r\n              </Button>\r\n              <Button\r\n              component={RouterLink}\r\n              variant=\"contained\"\r\n              color='primary'\r\n              onClick={handleClickOpen}\r\n              startIcon={<Iconify icon=\"solar:import-bold\" />}\r\n            >\r\n              {Translate(\"import\")}\r\n            </Button>\r\n          </Stack>\r\n            \r\n          }\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <InvoiceAnalytic\r\n                title={Translate(\"total\")}\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={sumBy(tableData, 'invoiceAmount')}\r\n                icon=\"solar:bill-list-bold-duotone\"\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n               <InvoiceAnalytic\r\n                title={Translate(\"paid\")}\r\n                total={getInvoiceLength('paid')}\r\n                percent={getPercentByStatus('paid')}\r\n                price={getTotalAmount('paid')}\r\n                icon=\"solar:file-check-bold-duotone\"\r\n                color={theme.palette.success.main}\r\n              />\r\n\r\n              <InvoiceAnalytic\r\n                title={Translate(\"unpaid\")}\r\n                total={getInvoiceLength('unpaid')}\r\n                percent={getPercentByStatus('unpaid')}\r\n                price={getTotalAmount('unpaid')}\r\n                icon=\"solar:sort-by-time-bold-duotone\"\r\n                color={theme.palette.warning.main}\r\n              />\r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            dateError={dateError}\r\n            serviceOptions={_departments().map((option) => option)}\r\n            paidStatusOptions={_statusList().map((option) => option)}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <InvoiceTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        handleOpenInquiry={() => handleOpenInquiry(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title={Translate(\"delete\")}\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>File upload</DialogTitle>\r\n        <DialogContent >\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            id=\"file\"\r\n            label={Translate(\"importFile\")}\r\n            type=\"file\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            inputProps={{ accept: '.xls, .xlsx' }}\r\n          />\r\n            <Collapse in={isUploadComplete}>\r\n              <Alert\r\n                severity={isEmportError ? \"error\" : \"success\"}\r\n                action={\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      setIsUploadComplete(false);\r\n                    }}\r\n                    \r\n                  >\r\n                    <Icon icon=\"ic:baseline-close\" />\r\n\r\n                  </IconButton>\r\n                }\r\n                sx={{ mb: 2 }}\r\n              >\r\n                {alertMessage}\r\n              </Alert>\r\n              \r\n            </Collapse>\r\n          \r\n            {loading && <CircularProgress />}\r\n          \r\n        </DialogContent>\r\n        \r\n        <DialogActions>\r\n          <Button onClick={handleClose}>{Translate(\"cancel\")}</Button>\r\n          <Button onClick={handleFileUpload}>{Translate(\"import\")}</Button>\r\n        </DialogActions>\r\n      </Dialog> \r\n\r\n\r\n      <Dialog\r\n        open={openInquiry}\r\n        maxWidth={false}\r\n        color=\"#ef5350\"\r\n        // TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n\r\n      >\r\n        <DialogTitle>{Translate(\"invoiceInquiry\")}</DialogTitle>\r\n        <DialogContent>\r\n          <Stack flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography>{Translate(\"invoiceNumber\")}</Typography>\r\n            <Typography>{Translate(\"createdBy\")}</Typography>\r\n            <Typography>{Translate(\"creationDate\")}</Typography>\r\n          </Stack>\r\n          {Object.prototype.hasOwnProperty.call(inquiryData, 'invoiceData') && \r\n              <Stack flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Typography>{inquiryData.invoiceData.invoiceNO}</Typography>\r\n                <Typography>{inquiryData.invoiceData.createdBy}</Typography>\r\n                <Typography>\r\n                  {\r\n                    inquiryData.invoiceData.createdDate.substring(0, inquiryData.invoiceData.createdDate.indexOf('T'))\r\n                  }\r\n                </Typography>\r\n              </Stack>\r\n          }\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>{Translate(\"property\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"oldValue\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"newValue\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"lastUpdated\")}</TableCell>\r\n                <TableCell align=\"right\">{Translate(\"updatedBy\")}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {Object.prototype.hasOwnProperty.call(inquiryData, 'logs') && inquiryData.logs.map((row) => (\r\n              <TableRow\r\n                key={row.name}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                {row.propertyName}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.oldValue}</TableCell>\r\n                <TableCell align=\"right\">{row.newValue}</TableCell>\r\n                <TableCell align=\"right\">{row.dateModified.substring(0, row.dateModified.indexOf('T'))}</TableCell>\r\n                <TableCell align=\"right\">{row.modifiedBy}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenInquiry(false)}>{Translate(\"close\")}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </>\r\n\r\n    \r\n  );\r\n}\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n    const { name, status, service, startDate, paidStatus, endDate } = filters;\r\n  \r\n    const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n  \r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n  \r\n    inputData = stabilizedThis.map((el) => el[0]);\r\n  \r\n    if (name) {\r\n      inputData = inputData.filter(\r\n        (invoice) =>\r\n          invoice.customerNameEn.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.invoiceNo.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n          \r\n          // invoice.invoiceTo.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n      );\r\n    }\r\n  \r\n    if (status !== 'all') {\r\n      inputData = inputData.filter((invoice) => invoice.status === status);\r\n    }\r\n  \r\n    if (service.length) {\r\n      inputData = inputData.filter((invoice) =>\r\n        // service.map((serviceName) => serviceName.toLowerCase()).includes(invoice.department)\r\n        service.includes('All') || service.includes(invoice.department)\r\n      );\r\n    }\r\n    \r\n    if (paidStatus.length) {\r\n      inputData = inputData.filter((invoice) =>\r\n        paidStatus.includes('All') || paidStatus.map((option) => option.toLowerCase()).includes(invoice.paidStatus)\r\n      );\r\n    }\r\n\r\n    if (!dateError) {\r\n      if (startDate && endDate) {\r\n        inputData = inputData.filter(\r\n          (invoice) =>\r\n            fTimestamp(invoice.issueInvoiceDate) >= fTimestamp(startDate) &&\r\n            fTimestamp(invoice.issueInvoiceDate) <= fTimestamp(endDate)\r\n        );\r\n      }\r\n    }\r\n  \r\n    return inputData;\r\n  }","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport  InvoiceListView  from 'src/screens/components/invoice/all/InvoiceListView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListViewAll() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Invoice List</title>\r\n      </Helmet>\r\n\r\n      <InvoiceListView />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\nimport { useLocales } from 'src/locales';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\n// utils\nimport { fShortenNumber, fCurrency } from 'src/utils/format-number';\n// components\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceAnalytic({ title, total, icon, color, percent, price }) {\n  const { t } = useLocales()\n\n  const Translate = (text) => t(text);\n  \n\n  return (\n    <Stack\n      spacing={2.5}\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{ width: 1, minWidth: 200 }}\n    >\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ position: 'relative' }}>\n        <Iconify icon={icon} width={32} sx={{ color, position: 'absolute' }} />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={percent}\n          size={56}\n          thickness={2}\n          sx={{ color, opacity: 0.48 }}\n        />\n\n        <CircularProgress\n          variant=\"determinate\"\n          value={100}\n          size={56}\n          thickness={3}\n          sx={{\n            top: 0,\n            left: 0,\n            opacity: 0.48,\n            position: 'absolute',\n            color: (theme) => alpha(theme.palette.grey[500], 0.16),\n          }}\n        />\n      </Stack>\n\n      <Stack spacing={0.5}>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n\n        <Box component=\"span\" sx={{ color: 'text.disabled', typography: 'body2' }}>\n          {fShortenNumber(total)} {Translate(\"invoices\")}\n        </Box>\n\n        <Typography variant=\"subtitle2\">{fCurrency(price)}</Typography>\n      </Stack>\n    </Stack>\n  );\n}\n\nInvoiceAnalytic.propTypes = {\n  color: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  percent: PropTypes.number,\n  price: PropTypes.number,\n  title: PropTypes.string,\n  total: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n// components\nimport Iconify from 'src/components/iconify';\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceTableFiltersResult({\n  filters,\n  onFilters,\n  //\n  onResetFilters,\n  //\n  results,\n  ...other\n}) {\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\n\n  const handleRemoveService = (inputValue) => {\n    const newValue = filters.service.filter((item) => item !== inputValue);\n    onFilters('service', newValue);\n  };\n\n  const handleRemoveStatus = () => {\n    onFilters('status', 'all');\n  };\n\n  const handleRemoveDate = () => {\n    onFilters('startDate', null);\n    onFilters('endDate', null);\n  };\n\n  return (\n    <Stack spacing={1.5} {...other}>\n      <Box sx={{ typography: 'body2' }}>\n        <strong>{results}</strong>\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\n          results found\n        </Box>\n      </Box>\n\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n        {!!filters.service.length && (\n          <Block label=\"Service:\">\n            {filters.service.map((item) => (\n              <Chip\n                key={item}\n                label={item}\n                size=\"small\"\n                onDelete={() => handleRemoveService(item)}\n              />\n            ))}\n          </Block>\n        )}\n\n        {filters.status !== 'all' && (\n          <Block label=\"Status:\">\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\n          </Block>\n        )}\n\n        {filters.startDate && filters.endDate && (\n          <Block label=\"Date:\">\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\n          </Block>\n        )}\n\n        <Button\n          color=\"error\"\n          onClick={onResetFilters}\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n        >\n          Clear\n        </Button>\n      </Stack>\n    </Stack>\n  );\n}\n\nInvoiceTableFiltersResult.propTypes = {\n  filters: PropTypes.object,\n  onFilters: PropTypes.func,\n  onResetFilters: PropTypes.func,\n  results: PropTypes.number,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Block({ label, children, sx, ...other }) {\n  return (\n    <Stack\n      component={Paper}\n      variant=\"outlined\"\n      spacing={1}\n      direction=\"row\"\n      sx={{\n        p: 1,\n        borderRadius: 1,\n        overflow: 'hidden',\n        borderStyle: 'dashed',\n        ...sx,\n      }}\n      {...other}\n    >\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\n        {label}\n      </Box>\n\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\n        {children}\n      </Stack>\n    </Stack>\n  );\n}\n\nBlock.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  sx: PropTypes.object,\n};\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('SAR0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["ConfirmDialog","_ref","title","content","action","open","onClose","other","_objectWithoutProperties","_excluded","_jsxs","Dialog","_objectSpread","fullWidth","maxWidth","children","_jsx","DialogTitle","sx","pb","DialogContent","typography","DialogActions","Button","variant","color","onClick","InvoiceTableRow","row","selected","onSelectRow","onViewRow","onDeleteRow","onEditRow","handleOpenInquiry","invoiceNo","id","issueInvoiceDate","invoiceAmount","daysToCollected","customerNameAr","customerNameEn","paidStatus","department","_useLocales","useLocales","t","customerName","currentLang","value","Translate","text","confirm","useBoolean","popover","usePopover","_Fragment","TableRow","hover","TableCell","padding","Checkbox","checked","display","alignItems","Avatar","alt","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","Typography","noWrap","secondary","Link","cursor","format","Date","primaryTypographyProps","secondaryTypographyProps","mt","component","align","px","IconButton","onOpen","Iconify","icon","CustomPopover","arrow","width","MenuItem","Divider","borderStyle","onTrue","onFalse","console","log","InvoiceTableToolbar","filters","onFilters","dateError","serviceOptions","paidStatusOptions","handleFilterName","useCallback","event","target","handleFilterService","split","handleFilterPaidStatus","handleFilterStartDate","newValue","handleFilterEndDate","Stack","spacing","xs","md","direction","p","pr","FormControl","flexShrink","InputLabel","Select","multiple","service","onChange","input","OutlinedInput","label","renderValue","map","join","textTransform","option","disableRipple","size","includes","DatePicker","startDate","slotProps","textField","endDate","error","flexGrow","TextField","name","placeholder","InputProps","startAdornment","InputAdornment","position","defaultFilters","status","InvoiceListView","theme","useTheme","settings","useSettingsContext","router","useRouter","table","useTable","defaultOrderBy","_useState","useState","_useState2","_slicedToArray","tableData","setTableData","_useState3","_useState4","refresh","setRefresh","_useState5","_useState6","setFilters","_React$useState","React","_React$useState2","setOpen","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","isEmportError","setIsEmportError","_useState13","_useState14","isUploadComplete","setIsUploadComplete","_useState15","_useState16","alertMessage","setAlertMessage","_useState17","_useState18","loading","setLoading","_useState19","_useState20","openInquiry","setOpenInquiry","_useState21","_useState22","inquiryId","setInquiryId","_useState23","_useState24","inquiryData","setInquiryData","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","getAllInvoices","sent","t0","stop","apply","arguments","_ref2","_callee2","_context2","getInvoiceInquiryData","getTime","dataFiltered","_ref5","inputData","comparator","stabilizedThis","el","index","sort","a","b","order","filter","invoice","toLowerCase","indexOf","length","fTimestamp","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","denseHeight","dense","canReset","TABLE_HEAD","notFound","getInvoiceLength","item","getTotalAmount","sumBy","getPercentByStatus","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRows","deleteRows","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","push","paths","dashboard","edit","handleViewRow","details","handleResetFilters","handleClose","Container","themeStretch","CustomBreadcrumbs","heading","links","href","root","divider","orientation","flexItem","py","RouterLink","new","startIcon","mb","Card","Scrollbar","InvoiceAnalytic","total","percent","price","palette","info","main","success","warning","_departments","_statusList","InvoiceTableFiltersResult","onResetFilters","results","pt","TableContainer","overflow","Table","minWidth","TableHeadCustom","headLabel","rowCount","numSelected","onSort","onSelectAllRows","TableBody","deleteData","_ref3","_callee3","_context3","deleteInvoice","t1","handleDeleteRow","TableEmptyRows","height","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","autoFocus","required","margin","type","inputProps","accept","Collapse","in","Alert","severity","Icon","CircularProgress","formData","FormData","fileInput","document","querySelector","files","append","url","getInvoiceImportUrl","fetch","mode","method","headers","body","Cache","then","_ref4","_callee4","response","_context4","Promise","resolve","setTimeout","ok","Error","concat","abrupt","_x","res","catch","keepMounted","flexDirection","justifyContent","Object","prototype","hasOwnProperty","call","invoiceData","invoiceNO","createdBy","createdDate","substring","TableHead","logs","border","scope","propertyName","oldValue","dateModified","modifiedBy","InvoiceListViewAll","Helmet","thickness","opacity","top","left","alpha","grey","Box","fShortenNumber","fCurrency","shortLabel","shortDateLabel","ml","flexWrap","Block","Chip","onDelete","inputValue","handleRemoveService","_excluded2","Paper","borderRadius","fNumber","number","numeral","fPercent","Number","fData","key","undefined","replace"],"sourceRoot":""}