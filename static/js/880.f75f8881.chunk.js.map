{"version":3,"file":"static/js/880.f75f8881.chunk.js","mappings":"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","sources":["data-access/customers.js","data-access/invoice.js","screens/components/reports/aging/Chart.js","screens/components/reports/invoiceForCustomers/customersListDialog.js","screens/components/reports/invoiceForCustomers/InvoiceTableToolbar.js","screens/components/reports/invoiceForCustomers/tableRow.js","screens/components/reports/invoiceForCustomers/invoiceForCustomersView.js","screens/reports/invoiceForCustomers.js"],"sourcesContent":["\r\n\r\nexport async function getAllCustomers() {\r\n    let list = []\r\n    await fetch('https://invoicecollectionsystemapi.azurewebsites.net/customer', {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n    // return [\r\n    //     {\r\n    //         id: \"4\",\r\n    //         customerCode: \"omar \",\r\n    //         customerNameEn: \"jamil\",\r\n    //         customerNameAr: \"عمر الفاخوري\"\r\n    //     },\r\n    //     {\r\n    //         id: \"5\",\r\n    //         customerCode: \"ahmad\",\r\n    //         customerNameEn: \"moh\",\r\n    //         customerNameAr: \"4533\"\r\n    //     },\r\n    //     {\r\n    //         id: \"9\",\r\n    //         customerCode: \"ahmaSSSSd\",\r\n    //         customerNameEn: \"nisaSSSa\",\r\n    //         customerNameAr: \"7567\"\r\n    //     },\r\n    //     {\r\n    //         id: \"10\",\r\n    //         customerCode: \"7567\",\r\n    //         customerNameEn: \"ahmaSSSSd\",\r\n    //         customerNameAr: \"nisaSSSa\"\r\n    //     },\r\n    //     {\r\n    //         id: \"11\",\r\n    //         customerCode: \"45654\",\r\n    //         customerNameEn: \"GHGFHGF\",\r\n    //         customerNameAr: \"FGHGFHGF\"\r\n    //     },\r\n    //     {\r\n    //         id: \"12\",\r\n    //         customerCode: \"mustafa\",\r\n    //         customerNameEn: \"\",\r\n    //         customerNameAr: \"\"\r\n    //     },\r\n    //     {\r\n    //         id: \"15\",\r\n    //         customerCode: \"DSA232\",\r\n    //         customerNameEn: \"OmarJKF\",\r\n    //         customerNameAr: \"Fakori\"\r\n    //     },\r\n    //     {\r\n    //         id: \"16\",\r\n    //         customerCode: \"asas\",\r\n    //         customerNameEn: \"assacq\",\r\n    //         customerNameAr: \"cccc\"\r\n    //     },\r\n    //     {\r\n    //         id: \"17\",\r\n    //         customerCode: \"2918c\",\r\n    //         customerNameEn: \"ascasc\",\r\n    //         customerNameAr: \"cas\"\r\n    //     },\r\n    //     {\r\n    //         id: \"18\",\r\n    //         customerCode: \"01-1109\",\r\n    //         customerNameEn: \"KFSH&RC - Riyadh\",\r\n    //         customerNameAr: \"مستشفى الملك فيصل التخصصي بالرياض\"\r\n    //     },\r\n    //     {\r\n    //         id: \"19\",\r\n    //         customerCode: \"10-555\",\r\n    //         customerNameEn: \"DAOH-JEDDAH\",\r\n    //         customerNameAr: \"ليبيلب\"\r\n    //     },\r\n    //     {\r\n    //         id: \"20\",\r\n    //         customerCode: \"02-1221\",\r\n    //         customerNameEn: \"KKNGH - Jeddah\",\r\n    //         customerNameAr: \"يبلبل\"\r\n    //     },\r\n    //     {\r\n    //         id: \"21\",\r\n    //         customerCode: \"02-1229\",\r\n    //         customerNameEn: \"KFSH&RC - Jeddah\",\r\n    //         customerNameAr: \"بب\"\r\n    //     }\r\n    // ]\r\n}\r\n\r\nexport async function getSalesPersonList() {\r\n    let list = []\r\n    await fetch('https://invoicecollectionsystemapi.azurewebsites.net/api/User/UsersNameByRole/sales', {\r\n        mode:'cors'\r\n    })\r\n    .then(result => result.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n\r\n    // return [\r\n    //     {\r\n    //         id: \"3816ec9e-9277-430d-8026-1993baf948e8\",\r\n    //         username: \"mustafa\"\r\n    //     },\r\n    //     {\r\n    //         id: \"8d12ad2b-d032-4da2-886e-4395043c42a5\",\r\n    //         username: \"ahmedammous\"\r\n    //     },\r\n    //     {\r\n    //         id: \"f7ef897a-8178-4b33-9871-b7c57a8e6b00\",\r\n    //         username: \"DASDsdads\"\r\n    //     }\r\n    // ]\r\n}\r\n","\r\nimport { result } from \"lodash\";\r\nimport { paths } from \"src/routes/paths\"\r\n\r\nconst baseUrl = 'https://invoicecollectionsystemapi.azurewebsites.net';\r\n\r\n\r\nexport async function getAllInvoices() {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/invoices`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async function getInvoicesByDepartment(id) {\r\n    let list = []\r\n    await fetch(`${baseUrl}/api/Invoices/Department/${id}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async function getInvoicesBySalesConfirmation(confirmStatus) {\r\n    let list = []\r\n    let url = '';\r\n    if(confirmStatus) {\r\n        url = `${baseUrl}/api/Invoices/GetInvoicesBySalesConfirmation?salesConfirm=${confirmStatus}`;\r\n    }\r\n    else {\r\n        url = `${baseUrl}/api/Invoices/NotConfirmedBySales`;\r\n    }\r\n    \r\n    await fetch(url, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list\r\n}\r\n\r\nexport async  function getInvoicesById(id) {\r\n    try {\r\n        const response = await fetch(`${baseUrl}/api/invoices/${id}`, {\r\n            mode: 'cors'\r\n        });\r\n\r\n        if (response.ok) {\r\n            const invoice = await response.json();\r\n            return invoice;\r\n        } \r\n            // Handle non-successful response here if needed.\r\n            console.error(`Failed to fetch invoice: ${response.status} - ${response.statusText}`);\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return {}; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceEditUrl(departmentId, invoiceId) {\r\n\r\n    let url = ''\r\n    switch (departmentId) {\r\n        case -1:\r\n        case 0:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Operation`\r\n            break;\r\n        case 1:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/installation`\r\n            break;\r\n        case 2:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Sales`\r\n            break;\r\n        case 3:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/Collection`\r\n            break;   \r\n        case 4:\r\n            url = `${baseUrl}/api/Invoices/${invoiceId}/Edit/TenderAndContracts`\r\n            break;     \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return url; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceRedirectUrl(departmentId) {\r\n\r\n    let url = ''\r\n    switch (departmentId) {\r\n        case -1:\r\n        case 0:\r\n            url = paths.departments.operation.list;\r\n            break;\r\n        case 1:\r\n            url = paths.departments.installation.list;\r\n            break;\r\n        case 2:\r\n            url = paths.departments.sales.list;\r\n            break;\r\n        case 3:\r\n            url = paths.departments.collection.list;\r\n            break;   \r\n        case 4:\r\n            url = paths.departments.tenderAndConract.list;\r\n            break;     \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return url; // Return an empty object by default or handle errors as needed.\r\n    \r\n}\r\n\r\nexport function getInvoiceImportUrl() {\r\n\r\n    const url = `${baseUrl}/api/ExcelImport/import-invoices`\r\n    return url; \r\n    \r\n}\r\n\r\nexport function getAddAttachmentUrl(id) {\r\n\r\n    const url = `${baseUrl}/api/Attachments/${id}`\r\n    return url; \r\n    \r\n}\r\n\r\nexport async function getCollectionData() {\r\n    let list = [];\r\n    await fetch(`${baseUrl}/api/CollectionData`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return list;\r\n}\r\n\r\nexport async function getInvoiceInquiryData(id) {\r\n    let data = {};\r\n    console.log(`${baseUrl}/api/Invoices/${id}/Inquiry`);\r\n    await fetch(`${baseUrl}/api/Invoices/${id}/Inquiry`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        data = invoices\r\n    })\r\n    .catch(error => console.log())\r\n\r\n    return data;\r\n}\r\n\r\nexport async function getInvoiceForCustomers(customers) {\r\n    let list = [];\r\n\r\n    if(!customers)\r\n        return list;\r\n\r\n    await fetch(`${baseUrl}/api/Invoices/GetInvoicesForCustomers?customerIds=${customers}`, {\r\n        mode:'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(invoices => {\r\n        list = invoices;\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n        list = [];\r\n        \r\n    })\r\n\r\n    console.log('Result: ', list)\r\n   \r\n\r\n    return list;\r\n}","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DonutChart = ({ data }) => {\r\n  // Extracting values for each category from the data\r\n  const zeroToThirty = data.map(item => item.zeroToThirty);\r\n  const thirtyOneToSixty = data.map(item => item.thirtyOneToSixty);\r\n  const sixtyOneToNinety = data.map(item => item.sixtyOneToNinety);\r\n  const ninetyOneToOneTwenty = data.map(item => item.ninetyOneToOneTwenty);\r\n  const oneTwentyOnePlus = data.map(item => item.oneTwentyOnePlus);\r\n\r\n  // Calculating the total for each category\r\n  const totalZeroToThirty = zeroToThirty.reduce((acc, value) => acc + value, 0);\r\n  const totalThirtyOneToSixty = thirtyOneToSixty.reduce((acc, value) => acc + value, 0);\r\n  const totalSixtyOneToNinety = sixtyOneToNinety.reduce((acc, value) => acc + value, 0);\r\n  const totalNinetyOneToOneTwenty = ninetyOneToOneTwenty.reduce((acc, value) => acc + value, 0);\r\n  const totalOneTwentyOnePlus = oneTwentyOnePlus.reduce((acc, value) => acc + value, 0);\r\n\r\n  const chartOptions = {\r\n    labels: ['0-30', '31-60', '61-90', '91-120', '120+'],\r\n  };\r\n\r\n  const chartSeries = [\r\n    totalZeroToThirty,\r\n    totalThirtyOneToSixty,\r\n    totalSixtyOneToNinety,\r\n    totalNinetyOneToOneTwenty,\r\n    totalOneTwentyOnePlus,\r\n  ];\r\n\r\n  return (\r\n    <Chart\r\n      options={chartOptions}\r\n      series={chartSeries}\r\n      type=\"donut\"\r\n      width=\"380\"\r\n    />\r\n  );\r\n};\r\n\r\nDonutChart.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default DonutChart;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomersListDialog({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n  const [searchAddress, setSearchAddress] = useState('');\r\n  const [selectedCustomer, setSelectedCustomers] = useState(['']);  \r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [ onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address, index) => (\r\n        <Stack\r\n         \r\n          key={index}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\">Code: {address.customerCode}</Typography>\r\n\r\n            {/* {address.primary && <Label color=\"info\">Default</Label>} */}\r\n          </Stack>\r\n\r\n          {/* {address.company && (\r\n            <Box sx={{ color: 'primary.main', typography: 'caption' }}>{address.company}</Box>\r\n          )} */}\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          Name ENglish: {address.customerNameEn}\r\n          </Typography>\r\n\r\n          \r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            Name Arabic: {address.customerNameAr}\r\n            </Typography>\r\n          \r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        \r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder=\"Search...\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n      \r\n      {action && action}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nCustomersListDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.customerCode.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameEn.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.customerNameAr.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  onChange,\r\n  customers,\r\n  handleOpen,\r\n}) {\r\n\r\n\r\n  return (\r\n    <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        justifyContent=\"flex-end\"\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n\r\n\r\n        <Button onClick={handleOpen}>\r\n          <Iconify icon=\"ic:twotone-list\" />\r\n          Select User\r\n        </Button>\r\n\r\n        {/* <Button >\r\n          <Iconify icon=\"mdi:search\" />\r\n        </Button> */}\r\n\r\n      </Stack>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  onChange: PropTypes.func,\r\n  handleOpen: PropTypes.func,\r\n  customers: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\n// hooks\r\n// utils\r\n// components\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableRowNew({\r\n  row,\r\n  selected,\r\n  isPercentage,\r\n}) {\r\n  const { id, invoiceNo, issueInvoiceDate, invoiceAmount, daysToCollected, customerNameEn, paidStatus, department } = row;\r\n\r\n\r\n\r\n  return (\r\n    <TableRow hover selected={selected}>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={customerNameEn} sx={{ mr: 2 }}>\r\n            {customerNameEn.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {customerNameEn}\r\n              </Typography>\r\n            }\r\n            // secondary={\r\n            //   <Link\r\n            //     noWrap\r\n            //     variant=\"body2\"\r\n            //     onClick={onViewRow}\r\n            //     sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n            //   >\r\n            //     {invoiceNo}\r\n            //   </Link>\r\n            // }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(issueInvoiceDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(issueInvoiceDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell >{daysToCollected}</TableCell>\r\n        \r\n        <TableCell >${invoiceAmount}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{paidStatus}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{department}</TableCell>\r\n        {/* <TableCell>{fCurrency(department)}</TableCell> */}\r\n\r\n        \r\n      </TableRow>\r\n  );\r\n}\r\n\r\nTableRowNew.propTypes = {\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n  isPercentage: PropTypes.bool,\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// hooks\r\n// utils\r\n// _mock\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport DonutChart from 'src/screens/components/reports/aging/Chart';\r\nimport CustomersListDialog from 'src/screens/components/reports/invoiceForCustomers/customersListDialog';\r\n// Data Access\r\nimport { getAllCustomers } from 'src/data-access/customers';\r\nimport { getInvoiceForCustomers } from 'src/data-access/invoice';\r\n\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n// DATA ACCESS\r\nimport { getAgingReport } from 'src/data-access/reports';\r\nimport InvoiceTableToolbar from './InvoiceTableToolbar';\r\n// COMPONENTS\r\nimport TableRowNew from './tableRow';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\nconst defaultFilters = {\r\n  name: '',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceForCustomersView() {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [customersList, setCustomersList] = useState([]);\r\n  const [selectedCustomer, setSelectedCustomer] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCustomers = async () => {\r\n      try {\r\n        const result = await getAllCustomers();\r\n        setCustomersList(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await getInvoiceForCustomers(selectedCustomer);\r\n        setTableData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedCustomer]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  \r\n  // const dataInPage = dataFiltered.slice(\r\n  //   table.page * table.rowsPerPage,\r\n  //   table.page * table.rowsPerPage + table.rowsPerPage\r\n  // );\r\n\r\n\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const TABLE_HEAD = [\r\n    { id: 'invoiceNumber', label: 'Invoice Number' },\r\n    { id: 'issueInvoiceDate', label: 'Issue Date' },\r\n    { id: 'daysToCollected', label: 'Days To Collect' },\r\n    { id: 'invoiceAmount', label: 'Amount' },\r\n    // { id: 'customerNameAr', label: 'Name Arabic' },\r\n    { id: 'paidStatus', label: 'Paid Status', align: 'center' },\r\n    { id: 'department', label: 'Department' , align: 'center' },\r\n  ];\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading='Invoices For Customers'\r\n          links={[\r\n            {\r\n              name: 'Dashboard',\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: 'Reports',\r\n            },\r\n            {\r\n              name: 'Invoices For Customers',\r\n            },\r\n          ]}\r\n          \r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card sx={{ mb: 3 }}>\r\n          <InvoiceTableToolbar \r\n            handleOpen={() => setOpen(true)}\r\n\r\n          />\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  // onSelectAllRows={(checked) =>\r\n                  //   table.onSelectAllRows(\r\n                  //     checked,\r\n                  //     tableData.map((row) => row.id)\r\n                  //   )\r\n                  // }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered.length > 0 && dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row, index) => (\r\n                      <TableRowNew\r\n                        key={index}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  {/* <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  /> */}\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length || 0}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n\r\n\r\n           \r\n        </Card>\r\n        {/* <Card  sx={{ display:'flex', justifyContent: 'center', mb: 3 }}>\r\n          <DonutChart data={dataFiltered}/>  \r\n        </Card>     */}\r\n\r\n        <CustomersListDialog \r\n          title='Customers'\r\n          list={customersList}  \r\n          // selectedList={selectedCustomers}\r\n          open={open}\r\n          onClose={() => setOpen(false)}  \r\n          selected={(id) => selectedCustomer === id}        \r\n          onSelect={(value) => setSelectedCustomer(value.id)}\r\n        />\r\n      </Container>\r\n      \r\n  );\r\n}\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  console.log(inputData)\r\n  return inputData;\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport InvoiceForCustomersView from 'src/screens/components/reports/invoiceForCustomers/invoiceForCustomersView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceForCustomersViewMain() {\r\n\r\n  return (\r\n    <>\r\n        <Helmet>\r\n            <title> Invoice For Customers Report</title>\r\n        </Helmet>\r\n        <InvoiceForCustomersView />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n"],"names":["getAllCustomers","_getAllCustomers","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","list","wrap","_context","prev","next","fetch","mode","then","result","json","invoices","catch","error","console","log","abrupt","stop","getSalesPersonList","_getSalesPersonList","_callee2","_context2","baseUrl","getAllInvoices","_getAllInvoices","concat","response","getInvoicesByDepartment","_x","_getInvoicesByDepartment","id","getInvoicesBySalesConfirmation","_x2","_getInvoicesBySalesConfirmation","_callee3","confirmStatus","url","_context3","getInvoicesById","_x3","_getInvoicesById","_callee4","invoice","_context4","sent","ok","status","statusText","t0","getInvoiceEditUrl","departmentId","invoiceId","getInvoiceRedirectUrl","paths","departments","operation","installation","sales","collection","tenderAndConract","getInvoiceImportUrl","getAddAttachmentUrl","getCollectionData","_getCollectionData","_callee5","_context5","getInvoiceInquiryData","_x4","_getInvoiceInquiryData","_callee6","data","_context6","getInvoiceForCustomers","_x5","_getInvoiceForCustomers","_callee7","customers","_context7","_ref","zeroToThirty","map","item","thirtyOneToSixty","sixtyOneToNinety","ninetyOneToOneTwenty","oneTwentyOnePlus","chartSeries","reduce","acc","value","_jsx","Chart","options","labels","series","type","width","CustomersListDialog","_ref$title","title","action","open","onClose","selected","onSelect","_useState","useState","_useState2","_slicedToArray","searchAddress","setSearchAddress","_useState3","_useState4","dataFiltered","_ref3","inputData","query","filter","address","customerCode","toLowerCase","indexOf","customerNameEn","customerNameAr","applyFilter","notFound","length","handleSearchAddress","useCallback","event","target","handleSelectAddress","renderList","Stack","spacing","sx","p","maxHeight","overflowX","children","index","_jsxs","component","ListItemButton","onClick","_defineProperty","py","px","borderRadius","flexDirection","alignItems","listItemButtonClasses","bgcolor","direction","Typography","variant","color","Dialog","fullWidth","maxWidth","justifyContent","pr","pt","TextField","onChange","placeholder","InputProps","startAdornment","InputAdornment","position","Iconify","icon","SearchNotFound","pb","InvoiceTableToolbar","handleOpen","xs","md","Button","TableRowNew","row","issueInvoiceDate","isPercentage","invoiceNo","invoiceAmount","daysToCollected","paidStatus","department","TableRow","hover","TableCell","display","Avatar","alt","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","noWrap","format","Date","secondary","primaryTypographyProps","typography","secondaryTypographyProps","mt","align","defaultFilters","name","startDate","endDate","InvoiceForCustomersView","useTheme","settings","useSettingsContext","table","useRouter","useTable","defaultOrderBy","tableData","setTableData","customersList","setCustomersList","_useState5","_useState6","selectedCustomer","setSelectedCustomer","_useState7","_useState8","setOpen","useEffect","fetchCustomers","fetchData","_ref2","_useState9","_useState10","filters","dateError","getTime","comparator","getComparator","order","orderBy","canReset","dense","Container","themeStretch","CustomBreadcrumbs","heading","links","href","dashboard","root","mb","Card","TableContainer","overflow","Scrollbar","Table","size","minWidth","TableHeadCustom","headLabel","label","rowCount","numSelected","onSort","TableBody","slice","page","rowsPerPage","includes","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","InvoiceForCustomersViewMain","_Fragment","Helmet"],"sourceRoot":""}