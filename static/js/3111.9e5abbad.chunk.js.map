{"version":3,"file":"static/js/3111.9e5abbad.chunk.js","mappings":"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","sources":["screens/components/invoice/departments/InvoiceTableFiltersResult.js","screens/components/invoice/departments/InvoiceTableRow.js","screens/components/invoice/departments/InvoiceTableToolbar.js","screens/components/invoice/departments/InvoiceListView.js","screens/invoice/departments/InvoiceListViewByDepartment.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters('startDate', null);\r\n    onFilters('endDate', null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        \r\n\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nInvoiceTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n}) {\r\n  const { invoiceNo, issueInvoiceDate, invoiceAmount, region, customerNameEn, customerNameAr } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={customerNameEn} sx={{ mr: 2 }}>\r\n            {customerNameEn.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {customerNameEn}\r\n              </Typography>\r\n            }\r\n            secondary={\r\n              <Link\r\n                noWrap\r\n                variant=\"body2\"\r\n                onClick={onViewRow}\r\n                sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n              >\r\n                {invoiceNo}\r\n              </Link>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(issueInvoiceDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(issueInvoiceDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        \r\n        <TableCell >${invoiceAmount}</TableCell>\r\n\r\n        {/* <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(dueDate), 'dd MMM yyyy')}\r\n            secondary={format(new Date(dueDate), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2', noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell> */}\r\n\r\n        <TableCell align=\"center\" >{region}</TableCell>\r\n\r\n        <TableCell align=\"center\" >{customerNameAr}</TableCell>\r\n        {/* <TableCell>{fCurrency(department)}</TableCell> */}\r\n\r\n\r\n        {/* <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === 'paid' && 'success') ||\r\n              (status === 'pending' && 'warning') ||\r\n              (status === 'overdue' && 'error') ||\r\n              'default'\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell> */}\r\n\r\n         <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell> \r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:pen-bold\" />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        {/* <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem> */}\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  dateError,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('startDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('endDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        \r\n\r\n        \r\n\r\n        <DatePicker\r\n          label=\"Start date\"\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label=\"End date\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              error: dateError,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search customer or invoice number...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n};\r\n","import sumBy from 'lodash/sumBy';\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\n// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\nimport Tab from '@mui/material/Tab';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// _mock\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\nimport { _departments } from 'src/lists/departments'\r\nimport { _statusList } from 'src/lists/paidStatus'\r\n//\r\nimport InvoiceAnalytic from 'src/sections/invoice/invoice-analytic';\r\nimport InvoiceTableFiltersResult from 'src/screens/components/invoice/departments/InvoiceTableFiltersResult';\r\nimport { getInvoicesByDepartment, getInvoicesBySalesConfirmation  } from 'src/data-access/invoice'\r\nimport InvoiceTableRow from './InvoiceTableRow';\r\nimport InvoiceTableToolbar from './InvoiceTableToolbar';\r\n// DATA ACCESS\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'invoiceNumber', label: 'Invoice Number' },\r\n  { id: 'issueInvoiceDate', label: 'Issue Date' },\r\n  { id: 'invoiceAmount', label: 'Amount' },\r\n  { id: 'region', label: 'Region', align: 'center' },\r\n  { id: 'customerNameAr', label: 'Name Arabic' , align: 'center' },\r\n  { id: '' },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListView({department, salesStatus}) {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'issueInvoiceDate' });\r\n\r\n  const confirm = useBoolean();\r\n  \r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n\r\n        console.log('Department:', department)\r\n        if (department) {\r\n          const departmentId = department === -1 ? 0 : department\r\n          const result = await getInvoicesByDepartment(departmentId);\r\n          setTableData(result);\r\n        } else {\r\n          const result = await getInvoicesBySalesConfirmation(Boolean(salesStatus));\r\n          setTableData(result);\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching invoices:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [department, salesStatus]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  \r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const getInvoiceLength = (status) => tableData.filter((item) => item.paidStatus === status).length;\r\n\r\n  const getTotalAmount = (status) =>\r\n    sumBy(\r\n      tableData.filter((item) => item.paidStatus === status),\r\n      'invoiceAmount'\r\n    );\r\n\r\n  const getPercentByStatus = (status) => (getInvoiceLength(status) / tableData.length) * 100;\r\n\r\n  const TABS = [\r\n    { value: 'all', label: 'All', color: 'default', count: tableData.length },\r\n    {\r\n      value: 'paid',\r\n      label: 'Paid',\r\n      color: 'success',\r\n      count: getInvoiceLength('paid'),\r\n    },\r\n    {\r\n      value: 'unpaid',\r\n      label: 'unpaid',\r\n      color: 'warning',\r\n      count: getInvoiceLength('unpaid'),\r\n    },\r\n    // {\r\n    //   value: 'overdue',\r\n    //   label: 'Overdue',\r\n    //   color: 'error',\r\n    //   count: getInvoiceLength('overdue'),\r\n    // },\r\n    // {\r\n    //   value: 'draft',\r\n    //   label: 'Draft',\r\n    //   color: 'default',\r\n    //   count: getInvoiceLength('draft'),\r\n    // },\r\n  ];\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  // Fetch data\r\n  \r\n\r\n  \r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.editOperation(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('paidStatus', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n  \r\n  const getHeading = (id, salesConfirmStatus) => {\r\n    let text = '';\r\n    if (id) {\r\n      switch(id) {\r\n        case -1:\r\n          text = 'Operation';\r\n          break;\r\n        case 1:\r\n          text = 'Installation'\r\n          break;\r\n        case 2:\r\n          text = 'Sales'\r\n          break;\r\n        case 3:\r\n          text = 'collection';\r\n          break;\r\n        case 4:\r\n          text = 'Tender And Contract';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      switch(salesConfirmStatus) {\r\n        case 0:\r\n          text = 'Confirm Invoices';\r\n          break;\r\n        case 1:\r\n          text = 'Assign Engineer'\r\n          break;\r\n        case 2:\r\n          text = 'Assign Collector'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return text;\r\n  }\r\n  \r\n  const heading = getHeading(department, salesStatus)\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading={heading}\r\n          links={[\r\n            {\r\n              name: 'Dashboard',\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: 'Invoice',\r\n              href: paths.dashboard.invoice.root,\r\n            },\r\n            {\r\n              name: 'List',\r\n            },\r\n          ]}\r\n          // action={\r\n          //   <Button\r\n          //     component={RouterLink}\r\n          //     href={paths.dashboard.invoice.new}\r\n          //     variant=\"contained\"\r\n          //     startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n          //   >\r\n          //     New Invoice\r\n          //   </Button>\r\n          // }\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <InvoiceAnalytic\r\n                title=\"Total\"\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={sumBy(tableData, 'invoiceAmount')}\r\n                icon=\"solar:bill-list-bold-duotone\"\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n               {/* <InvoiceAnalytic\r\n                title=\"Paid\"\r\n                total={getInvoiceLength('paid')}\r\n                percent={getPercentByStatus('paid')}\r\n                price={getTotalAmount('paid')}\r\n                icon=\"solar:file-check-bold-duotone\"\r\n                color={theme.palette.success.main}\r\n              />\r\n\r\n              <InvoiceAnalytic\r\n                title=\"UnPaid\"\r\n                total={getInvoiceLength('unpaid')}\r\n                percent={getPercentByStatus('unpaid')}\r\n                price={getTotalAmount('unpaid')}\r\n                icon=\"solar:sort-by-time-bold-duotone\"\r\n                color={theme.palette.warning.main}\r\n              /> */}\r\n\r\n              {/* <InvoiceAnalytic\r\n                title=\"Overdue\"\r\n                total={getInvoiceLength('overdue')}\r\n                percent={getPercentByStatus('overdue')}\r\n                price={getTotalAmount('overdue')}\r\n                icon=\"solar:bell-bing-bold-duotone\"\r\n                color={theme.palette.error.main}\r\n              />\r\n\r\n              <InvoiceAnalytic\r\n                title=\"Draft\"\r\n                total={getInvoiceLength('draft')}\r\n                percent={getPercentByStatus('draft')}\r\n                price={getTotalAmount('draft')}\r\n                icon=\"solar:file-corrupted-bold-duotone\"\r\n                color={theme.palette.text.secondary}\r\n              /> */}\r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n           {/* <Tabs\r\n            value={filters.paidStatus}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: `inset 0 -2px 0 0 ${alpha(theme.palette.grey[500], 0.08)}`,\r\n            }}\r\n          >\r\n            {TABS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                value={tab.value}\r\n                label={tab.label}\r\n                iconPosition=\"end\"\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === 'all' || tab.value === filters.status) && 'filled') || 'soft'\r\n                    }\r\n                    color={tab.color}\r\n                  >\r\n                    {tab.count}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>  */}\r\n\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            dateError={dateError}\r\n            serviceOptions={_departments().map((option) => option)}\r\n            paidStatusOptions={_statusList().map((option) => option)}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Stack direction=\"row\">\r\n                  <Tooltip title=\"Sent\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"iconamoon:send-fill\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Download\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"eva:download-outline\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Print\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Stack>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <InvoiceTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n    const { name, status, service, startDate, paidStatus, endDate } = filters;\r\n  \r\n    const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n  \r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n  \r\n    inputData = stabilizedThis.map((el) => el[0]);\r\n  \r\n    if (name) {\r\n      inputData = inputData.filter(\r\n        (invoice) =>\r\n          invoice.customerNameEn.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.invoiceNo.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n          invoice.customerNameAr.indexOf(name) !== -1\r\n      );\r\n    }\r\n  \r\n    if (!dateError) {\r\n      if (startDate && endDate) {\r\n        inputData = inputData.filter(\r\n          (invoice) =>\r\n            fTimestamp(invoice.issueInvoiceDate) >= fTimestamp(startDate) &&\r\n            fTimestamp(invoice.issueInvoiceDate) <= fTimestamp(endDate)\r\n        );\r\n      }\r\n    }\r\n  \r\n    return inputData;\r\n  }\r\n\r\n  InvoiceListView.propTypes = {\r\n    department: PropTypes.number,\r\n    salesStatus: PropTypes.number,\r\n  }","import { Helmet } from 'react-helmet-async';\r\nimport PropTypes from 'prop-types';\r\n// sections\r\nimport  InvoiceListView  from 'src/screens/components/invoice/departments/InvoiceListView';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceListViewByDepartment({ id, salesStatus }) {\r\n    console.log(id)\r\n    const list = id \r\n    ? <InvoiceListView department={id} />\r\n    : <InvoiceListView salesStatus={salesStatus} />\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Invoice List</title>\r\n      </Helmet>\r\n      \r\n      {list}\r\n    </>\r\n  );\r\n}\r\nInvoiceListViewByDepartment.propTypes = {\r\n    id: PropTypes.number,\r\n    salesStatus: PropTypes.number\r\n  }"],"names":["InvoiceTableFiltersResult","_ref","filters","onFilters","onResetFilters","results","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","startDate","endDate","_jsxs","Stack","_objectSpread","spacing","children","Box","sx","typography","_jsx","component","color","ml","flexGrow","direction","flexWrap","alignItems","Block","label","Chip","size","onDelete","Button","onClick","startIcon","Iconify","icon","_ref2","_excluded2","Paper","variant","p","borderRadius","overflow","borderStyle","InvoiceTableRow","row","selected","onSelectRow","onViewRow","onEditRow","onDeleteRow","invoiceNo","issueInvoiceDate","invoiceAmount","region","customerNameEn","customerNameAr","confirm","useBoolean","popover","usePopover","_Fragment","TableRow","hover","TableCell","padding","Checkbox","checked","display","Avatar","alt","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","Typography","noWrap","secondary","Link","cursor","format","Date","primaryTypographyProps","secondaryTypographyProps","mt","align","px","IconButton","open","onOpen","CustomPopover","onClose","arrow","width","MenuItem","ConfirmDialog","value","onFalse","title","content","action","InvoiceTableToolbar","dateError","handleFilterName","useCallback","event","target","handleFilterStartDate","newValue","handleFilterEndDate","xs","md","pr","DatePicker","onChange","slotProps","textField","fullWidth","maxWidth","error","TextField","name","placeholder","InputProps","startAdornment","InputAdornment","position","TABLE_HEAD","id","defaultFilters","InvoiceListView","department","salesStatus","theme","useTheme","settings","useSettingsContext","router","useRouter","table","useTable","defaultOrderBy","_useState","useState","_useState2","_slicedToArray","tableData","setTableData","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","departmentId","result","_result","wrap","_context","prev","next","console","log","getInvoicesByDepartment","sent","getInvoicesBySalesConfirmation","Boolean","t0","stop","apply","arguments","_useState3","_useState4","setFilters","getTime","dataFiltered","_ref3","inputData","comparator","status","service","paidStatus","stabilizedThis","map","el","index","sort","a","b","order","filter","invoice","toLowerCase","indexOf","fTimestamp","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","denseHeight","dense","canReset","notFound","length","getInvoiceLength","item","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRow","deleteRow","onUpdatePageDeleteRow","handleDeleteRows","deleteRows","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","push","paths","dashboard","editOperation","handleViewRow","details","handleResetFilters","heading","salesConfirmStatus","text","getHeading","Container","themeStretch","CustomBreadcrumbs","links","href","root","mb","Card","Scrollbar","divider","Divider","orientation","flexItem","py","InvoiceAnalytic","total","percent","price","sumBy","palette","info","main","serviceOptions","_departments","option","paidStatusOptions","_statusList","pt","TableContainer","TableSelectedAction","numSelected","rowCount","onSelectAllRows","Tooltip","onTrue","Table","minWidth","TableHeadCustom","headLabel","onSort","TableBody","TableEmptyRows","height","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","InvoiceListViewByDepartment","list","Helmet"],"sourceRoot":""}